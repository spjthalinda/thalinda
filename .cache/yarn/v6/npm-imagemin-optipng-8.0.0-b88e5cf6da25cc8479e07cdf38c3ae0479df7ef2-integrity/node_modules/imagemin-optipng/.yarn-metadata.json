{
  "manifest": {
    "name": "imagemin-optipng",
    "version": "8.0.0",
    "description": "Imagemin plugin for OptiPNG",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/imagemin/imagemin-optipng.git"
    },
    "engines": {
      "node": ">=10"
    },
    "scripts": {
      "test": "xo && ava"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "imageminplugin",
      "compress",
      "image",
      "minify",
      "optimize",
      "optipng",
      "png"
    ],
    "dependencies": {
      "exec-buffer": "^3.0.0",
      "is-png": "^2.0.0",
      "optipng-bin": "^7.0.0"
    },
    "devDependencies": {
      "ava": "^3.8.0",
      "xo": "^0.30.0"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-imagemin-optipng-8.0.0-b88e5cf6da25cc8479e07cdf38c3ae0479df7ef2-integrity/node_modules/imagemin-optipng/package.json",
    "readmeFilename": "readme.md",
    "readme": "# imagemin-optipng [![Build Status](http://img.shields.io/travis/imagemin/imagemin-optipng.svg?style=flat)](https://travis-ci.org/imagemin/imagemin-optipng)\n\n> Imagemin plugin for OptiPNG\n\n\n## Install\n\n```\n$ npm install imagemin-optipng\n```\n\n\n## Usage\n\n```js\nconst imagemin = require('imagemin');\nconst imageminOptipng = require('imagemin-optipng');\n\n(async () => {\n\tawait imagemin(['images/*.png'], 'build/images', {\n\t\tuse: [\n\t\t\timageminOptipng()\n\t\t]\n\t});\n\n\tconsole.log('Images optimized!');\n})();\n```\n\n\n## API\n\n### imageminOptipng(options?)(buffer)\n\nReturns a `Promise<Buffer>`.\n\n#### options\n\nType: `object`\n\n##### optimizationLevel\n\nType: `number`<br>\nDefault: `3`\n\nSelect an optimization level between `0` and `7`.\n\n> The optimization level 0 enables a set of optimization operations that require minimal effort. There will be no changes to image attributes like bit depth or color type, and no recompression of existing IDAT datastreams. The optimization level 1 enables a single IDAT compression trial. The trial chosen is what. OptiPNG thinks itâ€™s probably the most effective. The optimization levels 2 and higher enable multiple IDAT compression trials; the higher the level, the more trials.\n\nLevel and trials:\n\n1. 1 trial\n2. 8 trials\n3. 16 trials\n4. 24 trials\n5. 48 trials\n6. 120 trials\n7. 240 trials\n\n##### bitDepthReduction\n\nType: `boolean`<br>\nDefault: `true`\n\nApply bit depth reduction.\n\n##### colorTypeReduction\n\nType: `boolean`<br>\nDefault: `true`\n\nApply color type reduction.\n\n##### paletteReduction\n\nType: `boolean`<br>\nDefault: `true`\n\nApply palette reduction.\n\n##### interlaced\n\nType: `boolean | undefined | null`<br>\nDefault: `false`\n\nEnable [Adam7](https://en.wikipedia.org/wiki/Adam7_algorithm) PNG interlacing on any images that are processed. Interlaced images look better when they're loaded partially, but usually interlace makes compression less efficient. Set to `undefined` or `null` to keep the same interlacing as the input image.\n\n##### errorRecovery\n\nType: `boolean`<br>\nDefault: `true`\n\nA reasonable amount of effort will be spent to try to recover as much data as possible of a broken image, but the success cannot generally be guaranteed.\n\n#### buffer\n\nType: `Buffer`\n\nBuffer to optimize.\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/imagemin-optipng/-/imagemin-optipng-8.0.0.tgz#b88e5cf6da25cc8479e07cdf38c3ae0479df7ef2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/imagemin-optipng/-/imagemin-optipng-8.0.0.tgz",
    "hash": "b88e5cf6da25cc8479e07cdf38c3ae0479df7ef2",
    "integrity": "sha512-CUGfhfwqlPjAC0rm8Fy+R2DJDBGjzy2SkfyT09L8rasnF9jSoHFqJ1xxSZWK6HVPZBMhGPMxCTL70OgTHlLF5A==",
    "registry": "npm",
    "packageName": "imagemin-optipng",
    "cacheIntegrity": "sha512-CUGfhfwqlPjAC0rm8Fy+R2DJDBGjzy2SkfyT09L8rasnF9jSoHFqJ1xxSZWK6HVPZBMhGPMxCTL70OgTHlLF5A== sha1-uI5c9tolzIR54HzfOMOuBHnffvI="
  },
  "registry": "npm",
  "hash": "b88e5cf6da25cc8479e07cdf38c3ae0479df7ef2"
}