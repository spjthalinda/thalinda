{
  "manifest": {
    "name": "stylelint-prettier",
    "version": "2.0.0",
    "description": "Runs prettier as an stylelint rule",
    "keywords": [
      "stylelint",
      "stylelint-plugin",
      "prettier"
    ],
    "author": {
      "name": "Ben Scott"
    },
    "files": [
      "stylelint-prettier.js",
      "recommended.js",
      "README.md",
      "LICENSE.md"
    ],
    "main": "stylelint-prettier.js",
    "scripts": {
      "lint": "eslint .",
      "test": "yarn run lint && jest",
      "format": "yarn run prettier '**/*.{js,json,md}' --write && yarn run lint --fix"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/prettier/stylelint-prettier.git"
    },
    "bugs": {
      "url": "https://github.com/prettier/stylelint-prettier/issues"
    },
    "homepage": "https://github.com/prettier/stylelint-prettier#readme",
    "dependencies": {
      "prettier-linter-helpers": "^1.0.0"
    },
    "peerDependencies": {
      "prettier": ">=2.0.0",
      "stylelint": ">=14.0.0"
    },
    "devDependencies": {
      "@stylelint/postcss-css-in-js": "^0.37.2",
      "eslint": "^8.1.0",
      "eslint-config-prettier": "^8.3.0",
      "eslint-plugin-node": "^11.1.0",
      "eslint-plugin-prettier": "^4.0.0",
      "jest": "^27.3.1",
      "postcss": "^8.3.11",
      "postcss-html": "^1.2.0",
      "postcss-markdown": "^1.1.0",
      "postcss-scss": "^4.0.2",
      "postcss-syntax": "^0.36.2",
      "prettier": "^2.4.1",
      "prettier-plugin-svelte": "^2.4.0",
      "strip-ansi": "^6.0.0",
      "stylelint": "^14.0.0",
      "stylelint-config-prettier": "^9.0.3",
      "svelte": "^3.34.0"
    },
    "engines": {
      "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
    },
    "jest": {
      "setupFiles": [
        "./jest-setup.js"
      ]
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-stylelint-prettier-2.0.0-ead781aea522379f2ffa2d136bafdfc451d699a5-integrity/node_modules/stylelint-prettier/package.json",
    "readmeFilename": "README.md",
    "readme": "# stylelint-prettier [![Build Status](https://github.com/prettier/stylelint-prettier/workflows/CI/badge.svg?branch=master)](https://github.com/prettier/stylelint-prettier/actions?query=workflow%3ACI+branch%3Amaster)\n\nRuns [Prettier](https://github.com/prettier/prettier) as a [Stylelint](https://stylelint.io/) rule and reports differences as individual Stylelint issues.\n\n## Sample\n\nGiven the input file `style.css`:\n\n<!-- prettier-ignore -->\n```css\n.insert {\n  display: block\n}\n\n.alter:after {color: red; content: 'example'}\n\n.delete {\n  display: block;;\n}\n\n```\n\nRunning `./node_modules/.bin/stylelint style.css` shall output:\n\n```\nstyle.css\n 2:17  ✖  Insert \";\"                                          prettier/prettier\n 5:15  ✖  Replace \"color:·red;·content:·'example'\" with       prettier/prettier\n          \"⏎··color:·red;⏎··content:·\"example\";⏎\"\n 8:17  ✖  Delete \";\"                                          prettier/prettier\n```\n\n## Installation\n\n```sh\nnpm install --save-dev stylelint-prettier prettier\n```\n\n**_`stylelint-prettier` does not install Prettier or Stylelint for you._** _You must install these yourself._\n\nThen, in your `.stylelintrc`:\n\n```json\n{\n  \"plugins\": [\"stylelint-prettier\"],\n  \"rules\": {\n    \"prettier/prettier\": true\n  }\n}\n```\n\n## Recommended Configuration\n\nThis plugin works best if you disable all other Stylelint rules relating to code formatting, and only enable rules that detect patterns in the AST. (If another active Stylelint rule disagrees with `prettier` about how code should be formatted, it will be impossible to avoid lint errors.) You can use [stylelint-config-prettier](https://github.com/prettier/stylelint-config-prettier) to disable all formatting-related Stylelint rules.\n\nIf your desired formatting does not match the `prettier` output, you should use a different tool such as [prettier-stylelint](https://github.com/hugomrdias/prettier-stylelint) instead.\n\nTo integrate this plugin with `stylelint-config-prettier`, you can use the `\"recommended\"` configuration:\n\n1.  In addition to the above installation instructions, install `stylelint-config-prettier`:\n\n    ```sh\n    npm install --save-dev stylelint-config-prettier\n    ```\n\n2.  Then replace the plugins and rules declarations in your `.stylelintrc` that you added in the prior section with:\n\n    ```json\n    {\n      \"extends\": [\"stylelint-prettier/recommended\"]\n    }\n    ```\n\nThis does three things:\n\n1.  Enables the `stylelint-plugin-prettier` plugin.\n2.  Enables the `prettier/prettier` rule.\n3.  Extends the `stylelint-config-prettier` configuration.\n\nYou can then set Prettier's own options inside a `.prettierrc` file.\n\n## Options\n\n_stylelint-prettier will honor your `.prettierrc` file by default_. You only\nneed this section if you wish to override those settings.\n\n> Note: While it is possible to pass options to Prettier via your Stylelint configuration file, it is not recommended because editor extensions such as `prettier-atom` and `prettier-vscode` **will** read [`.prettierrc`](https://prettier.io/docs/en/configuration.html), but **won't** read settings from Stylelint, which can lead to an inconsistent experience.\n\nObjects are passed directly to Prettier as [options](https://prettier.io/docs/en/options.html). Example:\n\n```json\n{\n  \"rules\": {\n    \"prettier/prettier\": [true, {\"singleQuote\": true, \"tabWidth\": 4}]\n  }\n}\n```\n\nNB: This option will merge and override any config set with `.prettierrc` files (for Prettier < 1.7.0, config files are ignored)\n\n---\n\n## Contributing\n\nSee [CONTRIBUTING.md](https://github.com/prettier/stylelint-prettier/blob/master/.github/CONTRIBUTING.md)\n\n## Inspiration\n\nThe layout for this codebase and base configuration of prettier was taken from <https://github.com/prettier/eslint-plugin-prettier>\n",
    "licenseText": "# The MIT License (MIT)\n\nCopyright © 2018 Ben Scott\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the “Software”), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/stylelint-prettier/-/stylelint-prettier-2.0.0.tgz#ead781aea522379f2ffa2d136bafdfc451d699a5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/stylelint-prettier/-/stylelint-prettier-2.0.0.tgz",
    "hash": "ead781aea522379f2ffa2d136bafdfc451d699a5",
    "integrity": "sha512-jvT3G+9lopkeB0ARmDPszyfaOnvnIF+30QCjZxyt7E6fynI1T9mOKgYDNb9bXX17M7PXMZaX3j/26wqakjp1tw==",
    "registry": "npm",
    "packageName": "stylelint-prettier",
    "cacheIntegrity": "sha512-jvT3G+9lopkeB0ARmDPszyfaOnvnIF+30QCjZxyt7E6fynI1T9mOKgYDNb9bXX17M7PXMZaX3j/26wqakjp1tw== sha1-6teBrqUiN58v+i0Ta6/fxFHWmaU="
  },
  "registry": "npm",
  "hash": "ead781aea522379f2ffa2d136bafdfc451d699a5"
}