import type { MLResultInfo } from '../types';
import type { APIOptions, MLEngineEventMap } from './types';
import type { MLFile, Target } from '@markuplint/file-resolver';
import { StrictEventEmitter } from 'strict-event-emitter';
declare type MLEngineOptions = {
    debug?: boolean;
    watch?: boolean;
};
export default class MLEngine extends StrictEventEmitter<MLEngineEventMap> {
    #private;
    static toMLFile(target: Target): Promise<MLFile>;
    constructor(file: MLFile, options?: APIOptions & MLEngineOptions);
    exec(): Promise<MLResultInfo | null>;
    setCode(code: string): Promise<void>;
    close(): Promise<void>;
    private setup;
    private provide;
    private cretateCore;
    private resolveConfig;
    private resolveParser;
    private resolveRuleset;
    private resolveSchemas;
    private resolveRules;
    private i18n;
    private watch;
}
export {};
