"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.lint_v1 = void 0;
const lint_1 = require("./lint");
/**
 * @deprecated
 * @param options
 * @returns
 */
async function lint_v1(options) {
    var _a;
    const filePathList = options.files ? (Array.isArray(options.files) ? options.files : [options.files]) : [];
    const codes = options.sourceCodes
        ? Array.isArray(options.sourceCodes)
            ? options.sourceCodes
            : [options.sourceCodes]
        : [];
    const files = [
        ...filePathList,
        ...codes.map((code, i) => {
            var _a, _b;
            return ({
                sourceCode: code,
                name: Array.isArray(options.names) ? (_a = options.names) === null || _a === void 0 ? void 0 : _a[i] : options.names,
                workspace: (_b = options.workspace) === null || _b === void 0 ? void 0 : _b[i],
            });
        }),
    ];
    let config;
    let configFile;
    if (typeof options.config === 'string') {
        configFile = options.config;
    }
    else if (options.config) {
        config = options.config;
    }
    const result = await (0, lint_1.lint)(files, {
        config,
        configFile,
        noSearchConfig: !options.files,
        rules: options.rules,
        autoLoad: (_a = options.rulesAutoResolve) !== null && _a !== void 0 ? _a : true,
        locale: options.locale,
    });
    return result;
}
exports.lint_v1 = lint_v1;
