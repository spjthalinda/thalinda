declare type SelectQuestion<T> = {
    message: string;
    choices: {
        name: string;
        value: T;
    }[];
};
export declare function select<T>(question: SelectQuestion<T>): Promise<T>;
export declare function multiSelect<T>(question: SelectQuestion<T>): Promise<T[]>;
export declare function input<T extends string = string>(question: string, validation?: RegExp): Promise<T>;
export declare function confirm(question: string, options?: {
    initial?: boolean;
}): Promise<boolean>;
export declare function confirmSequence<T extends string = string>(questions: {
    message: string;
    name: T;
}[]): Promise<Record<T, boolean>>;
export {};
