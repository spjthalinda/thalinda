"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.confirmSequence = exports.confirm = exports.input = exports.multiSelect = exports.select = void 0;
const tslib_1 = require("tslib");
const cli_color_1 = tslib_1.__importDefault(require("cli-color"));
const enquirer_1 = require("enquirer");
async function select(question) {
    const res = await (0, enquirer_1.prompt)({
        ...question,
        name: '__Q__',
        type: 'select',
        result(resName) {
            var _a;
            // @ts-ignore
            return (_a = this.options.choices.find(c => c.name === resName)) === null || _a === void 0 ? void 0 : _a.value;
        },
    });
    // @ts-ignore
    return res['__Q__'];
}
exports.select = select;
async function multiSelect(question) {
    const res = await (0, enquirer_1.prompt)({
        ...question,
        name: '__Q__',
        type: 'multiselect',
        result(names) {
            // @ts-ignore
            const map = this.map(names);
            // @ts-ignore
            const values = names.map(name => map[name]);
            return values;
        },
    });
    // @ts-ignore
    return res['__Q__'];
}
exports.multiSelect = multiSelect;
async function input(question, validation) {
    // eslint-disable-next-line no-constant-condition
    while (true) {
        const _res = await (0, enquirer_1.prompt)({
            message: question,
            name: '__Q__',
            type: 'input',
        });
        // @ts-ignore
        const res = _res['__Q__'];
        if (validation && !validation.test(res)) {
            process.stdout.write(cli_color_1.default.yellow('Oops! The name that you type is an invalid format.\n'));
            continue;
        }
        return res;
    }
}
exports.input = input;
async function confirm(question, options) {
    const res = await (0, enquirer_1.prompt)({
        message: question,
        name: '__Q__',
        type: 'confirm',
        initial: !!(options === null || options === void 0 ? void 0 : options.initial),
    });
    // @ts-ignore
    return !!res['__Q__'];
}
exports.confirm = confirm;
async function confirmSequence(questions) {
    const res = await (0, enquirer_1.prompt)(questions.map(question => {
        return {
            ...question,
            type: 'confirm',
        };
    }));
    return res;
}
exports.confirmSequence = confirmSequence;
