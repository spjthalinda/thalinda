"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createRule = void 0;
const tslib_1 = require("tslib");
const create_rule_helper_1 = require("@markuplint/create-rule-helper");
const cli_color_1 = tslib_1.__importDefault(require("cli-color"));
const util_1 = require("../../util");
const install_module_1 = require("../init/install-module");
const prompt_1 = require("../prompt");
async function createRule() {
    (0, util_1.write)((0, util_1.head)('Create a rule'));
    util_1.write.break();
    const purpose = await (0, prompt_1.select)({
        message: 'What purpose do you create the rule for?',
        choices: [
            { name: 'Add the rule to this project', value: 'ADD_TO_PROJECT' },
            { name: 'Create the rule and publish it as a package', value: 'PUBLISH_AS_PACKAGE' },
            { name: 'Contribute the new rule to markuplint core rules', value: 'CONTRIBUTE_TO_CORE' },
        ],
    });
    const name = await (0, prompt_1.input)('What is the name?', /^[a-z][a-z0-9]*(?:-[a-z][a-z0-9]*)*$/i);
    const lang = purpose === 'CONTRIBUTE_TO_CORE'
        ? 'TYPESCRIPT'
        : await (0, prompt_1.select)({
            message: 'Which language will you implement?',
            choices: [
                { name: 'TypeScript', value: 'TYPESCRIPT' },
                { name: 'JavaScript', value: 'JAVASCRIPT' },
            ],
        });
    const needTest = purpose === 'CONTRIBUTE_TO_CORE' ? true : await (0, prompt_1.confirm)('Do you need the test?', { initial: true });
    const result = await (0, create_rule_helper_1.createRuleHelper)({ purpose, name, lang, needTest });
    output(name, '📝', 'README.md', result.readme);
    output(name, '📜', 'index', result.main);
    if (result.test) {
        output(name, '🖍 ', 'index.spec', result.test);
    }
    if (result.schemaJson) {
        output(name, '⚙️ ', 'schema.json', result.schemaJson);
    }
    if (result.packageJson) {
        output(name, '🎁 ', 'package.json', result.packageJson);
        if (result.tsConfig) {
            output(name, '💎 ', 'tsconfig.json', result.tsConfig);
        }
        await (0, install_module_1.installModule)(result.dependencies);
        await (0, install_module_1.installModule)(result.devDependencies, true);
    }
}
exports.createRule = createRule;
function output(name, icon, title, path) {
    const _marker = cli_color_1.default.xterm(39)('✔') + ' ';
    const _title = (icon, title) => `${icon} ` + cli_color_1.default.bold(`${name}/${title}`);
    const _file = (path) => ' ' + cli_color_1.default.cyanBright(path);
    (0, util_1.write)(_marker + _title(icon, title) + _file(path));
}
