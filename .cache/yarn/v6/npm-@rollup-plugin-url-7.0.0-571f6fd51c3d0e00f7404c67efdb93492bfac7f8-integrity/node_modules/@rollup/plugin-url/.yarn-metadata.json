{
  "manifest": {
    "name": "@rollup/plugin-url",
    "version": "7.0.0",
    "publishConfig": {
      "access": "public"
    },
    "description": "Import files as data-URIs or ES Modules",
    "license": "MIT",
    "repository": {
      "url": "https://github.com/rollup/plugins.git",
      "directory": "packages/url"
    },
    "author": {
      "name": "Arpad Borsos",
      "email": "arpad.borsos@googlemail.com"
    },
    "homepage": "https://github.com/rollup/plugins/tree/master/packages/url/#readme",
    "bugs": {
      "url": "https://github.com/rollup/plugins/issues"
    },
    "main": "dist/index.js",
    "module": "dist/index.es.js",
    "engines": {
      "node": ">=10.0.0"
    },
    "scripts": {
      "build": "rollup -c",
      "ci:coverage": "nyc pnpm test && nyc report --reporter=text-lcov > coverage.lcov",
      "ci:lint": "pnpm build && pnpm lint",
      "ci:lint:commits": "commitlint --from=${CIRCLE_BRANCH} --to=${CIRCLE_SHA1}",
      "ci:test": "pnpm test -- --verbose",
      "prebuild": "del-cli dist",
      "prepare": "if [ ! -d 'dist' ]; then pnpm build; fi",
      "prerelease": "pnpm build",
      "pretest": "pnpm build",
      "release": "pnpm plugin:release --workspace-root -- --pkg $npm_package_name",
      "test": "ava"
    },
    "files": [
      "dist",
      "types",
      "README.md",
      "LICENSE"
    ],
    "keywords": [
      "rollup",
      "plugin",
      "url"
    ],
    "peerDependencies": {
      "rollup": "^1.20.0||^2.0.0"
    },
    "dependencies": {
      "@rollup/pluginutils": "^4.2.1",
      "make-dir": "^3.1.0",
      "mime": "^2.4.6"
    },
    "devDependencies": {
      "del": "^5.1.0",
      "globby": "^11.0.1",
      "rollup": "^2.67.3"
    },
    "types": "./types/index.d.ts",
    "ava": {
      "babel": {
        "compileEnhancements": false
      },
      "files": [
        "!**/fixtures/**",
        "!**/output/**",
        "!**/helpers/**",
        "!**/recipes/**",
        "!**/types.ts"
      ]
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-@rollup-plugin-url-7.0.0-571f6fd51c3d0e00f7404c67efdb93492bfac7f8-integrity/node_modules/@rollup/plugin-url/package.json",
    "readmeFilename": "README.md",
    "readme": "[npm]: https://img.shields.io/npm/v/@rollup/plugin-url\n[npm-url]: https://www.npmjs.com/package/@rollup/plugin-url\n[size]: https://packagephobia.now.sh/badge?p=@rollup/plugin-url\n[size-url]: https://packagephobia.now.sh/result?p=@rollup/plugin-url\n\n[![npm][npm]][npm-url]\n[![size][size]][size-url]\n[![libera manifesto](https://img.shields.io/badge/libera-manifesto-lightgrey.svg)](https://liberamanifesto.com)\n\n# @rollup/plugin-url\n\nüç£ A Rollup plugin which imports files as data-URIs or ES Modules.\n\n## Requirements\n\nThis plugin requires an [LTS](https://github.com/nodejs/Release) Node version (v8.0.0+) and Rollup v1.20.0+.\n\n## Install\n\nUsing npm:\n\n```console\nnpm install @rollup/plugin-url --save-dev\n```\n\n## Usage\n\nCreate a `rollup.config.js` [configuration file](https://www.rollupjs.org/guide/en/#configuration-files) and import the plugin:\n\n```js\nimport url from '@rollup/plugin-url';\n\nexport default {\n  input: 'src/index.js',\n  output: {\n    dir: 'output',\n    format: 'cjs'\n  },\n  plugins: [url()]\n};\n```\n\nThen call `rollup` either via the [CLI](https://www.rollupjs.org/guide/en/#command-line-reference) or the [API](https://www.rollupjs.org/guide/en/#javascript-api).\n\nWith an accompanying file `src/index.js`, the local `image.svg` file would now be importable as seen below:\n\n```js\n// src/index.js\nimport svg from './image.svg';\nconsole.log(`svg contents: ${svg}`);\n```\n\n## Options\n\n### `exclude`\n\nType: `String` | `Array[...String]`<br>\nDefault: `null`\n\nA [minimatch pattern](https://github.com/isaacs/minimatch), or array of patterns, which specifies the files in the build the plugin should _ignore_. By default no files are ignored.\n\n### `include`\n\nType: `String` | `Array[...String]`<br>\nDefault: `['**/*.svg', '**/*.png', '**/*.jp(e)?g', '**/*.gif', '**/*.webp']`\n\nA [minimatch pattern](https://github.com/isaacs/minimatch), or array of patterns, which specifies the files in the build the plugin should operate on. By default .svg, .png, .jpg, .jpeg, .gif and .webp files are targeted.\n\n### `limit`\n\nType: `Number`<br>\nDefault: `14336` (14kb)\n\nThe file size limit for inline files. If a file exceeds this limit, it will be copied to the destination folder and the hashed filename will be provided instead. If `limit` is set to `0` all files will be copied.\n\n### `publicPath`\n\nType: `String`<br>\nDefault: (empty string)\n\nA string which will be added in front of filenames when they are not inlined but are copied.\n\n### `emitFiles`\n\nType: `Boolean`<br>\nDefault: `true`\n\nIf `false`, will prevent files being emitted by this plugin. This is useful for when you are using Rollup to emit both a client-side and server-side bundle.\n\n### `fileName`\n\nType: `String`<br>\nDefault: `'[hash][extname]'`\n\nIf `emitFiles` is `true`, this option can be used to rename the emitted files. It accepts the following string replacements:\n\n- `[hash]` - The hash value of the file's contents\n- `[name]` - The name of the imported file (without its file extension)\n- `[extname]` - The extension of the imported file (including the leading `.`)\n- `[dirname]` - The parent directory name of the imported file (including trailing `/`)\n\n### sourceDir\n\nType: `String`<br>\nDefault: (empty string)\n\nWhen using the `[dirname]` replacement in `fileName`, use this directory as the source directory from which to create the file path rather than the parent directory of the imported file. For example:\n\n_src/path/to/file.js_\n\n```js\nimport png from './image.png';\n```\n\n_rollup.config.js_\n\n```js\nurl({\n  fileName: '[dirname][hash][extname]',\n  sourceDir: path.join(__dirname, 'src')\n});\n```\n\nEmitted File: `path/to/image.png`\n\n### `destDir`\n\nType: `String`<br>\nDefault: (empty string)\n\nThe destination dir to copy assets, usually used to rebase the assets according to HTML files.\n\n## Meta\n\n[CONTRIBUTING](/.github/CONTRIBUTING.md)\n\n[LICENSE (MIT)](/LICENSE)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@rollup/plugin-url/-/plugin-url-7.0.0.tgz#571f6fd51c3d0e00f7404c67efdb93492bfac7f8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@rollup/plugin-url/-/plugin-url-7.0.0.tgz",
    "hash": "571f6fd51c3d0e00f7404c67efdb93492bfac7f8",
    "integrity": "sha512-cIWcEObrmEPAU8q8NluGWlCPlQDuoSKvkyI3eOFO4fx6W02mLNj4ZEiUT0X2mKMIvQzoWL1feEK9d1yr1ICgrw==",
    "registry": "npm",
    "packageName": "@rollup/plugin-url",
    "cacheIntegrity": "sha512-cIWcEObrmEPAU8q8NluGWlCPlQDuoSKvkyI3eOFO4fx6W02mLNj4ZEiUT0X2mKMIvQzoWL1feEK9d1yr1ICgrw== sha1-Vx9v1Rw9DgD3QExn79uTSSv6x/g="
  },
  "registry": "npm",
  "hash": "571f6fd51c3d0e00f7404c67efdb93492bfac7f8"
}