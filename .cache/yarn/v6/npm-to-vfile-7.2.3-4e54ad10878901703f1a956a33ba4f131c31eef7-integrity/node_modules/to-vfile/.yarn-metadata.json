{
  "manifest": {
    "name": "to-vfile",
    "version": "7.2.3",
    "description": "vfile utility to create a vfile from a filepath",
    "license": "MIT",
    "keywords": [
      "vfile",
      "vfile-util",
      "util",
      "utility",
      "virtual",
      "file",
      "text",
      "processing",
      "file-path",
      "path"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/vfile/to-vfile.git"
    },
    "bugs": {
      "url": "https://github.com/vfile/to-vfile/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "lib/",
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "is-buffer": "^2.0.0",
      "vfile": "^5.1.0"
    },
    "devDependencies": {
      "@types/tape": "^4.0.0",
      "c8": "^7.0.0",
      "prettier": "^2.0.0",
      "remark-cli": "^10.0.0",
      "remark-preset-wooorm": "^9.0.0",
      "rimraf": "^3.0.0",
      "tape": "^5.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "xo": "^0.47.0"
    },
    "scripts": {
      "prepack": "npm run build && npm run format",
      "build": "rimraf \"{lib/**,}*.d.ts\" && tsc && type-coverage",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node test.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node test.js",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "rules": {
        "unicorn/prefer-node-protocol": "off"
      }
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-to-vfile-7.2.3-4e54ad10878901703f1a956a33ba4f131c31eef7-integrity/node_modules/to-vfile/package.json",
    "readmeFilename": "readme.md",
    "readme": "# to-vfile\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\nCreate a [`vfile`][vfile] from a filepath.\nOptionally populates them from the file system as well.\nCan write virtual files to file system too.\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c):\nNode 12+ is needed to use it and it must be `import`ed instead of `require`d.\n\n[npm][]:\n\n```sh\nnpm install to-vfile\n```\n\n## Use\n\n```js\nimport {toVFile, readSync} from 'to-vfile'\n\nconsole.log(toVFile('readme.md'))\nconsole.log(toVFile(new URL('./readme.md', import.meta.url)))\nconsole.log(readSync('.git/HEAD'))\nconsole.log(readSync('.git/HEAD', 'utf8'))\n```\n\nYields:\n\n```js\nVFile {\n  data: {},\n  messages: [],\n  history: ['readme.md'],\n  cwd: '/Users/tilde/projects/oss/to-vfile'\n}\nVFile {\n  data: {},\n  messages: [],\n  history: ['readme.md'],\n  cwd: '/Users/tilde/projects/oss/to-vfile'\n}\nVFile {\n  data: {},\n  messages: [],\n  history: ['.git/HEAD'],\n  cwd: '/Users/tilde/projects/oss/to-vfile',\n  value: <Buffer 72 65 66 3a 20 72 65 66 73 2f 68 65 61 64 73 2f 6d 61 73 74 65 72 0a>\n}\nVFile {\n  data: {},\n  messages: [],\n  history: ['.git/HEAD'],\n  cwd: '/Users/tilde/projects/oss/to-vfile',\n  value: 'ref: refs/heads/main\\n'\n}\n```\n\n## API\n\nThis package exports the following identifiers: `toVFile`, `read`, `readSync`,\n`write`, and `writeSync`.\nThere is no default export.\n\n### `toVFile(options)`\n\nCreate a virtual file.\nWorks like the [vfile][] constructor, except when `options` is `string` or\n`Buffer`, in which case it’s treated as `{path: options}` instead of\n`{value: options}`, or when `options` is a WHATWG `URL` object, in which case\nit’s treated as `{path: fileURLToPath(options)}`.\n\n### `read(options[, encoding][, callback])`\n\nCreates a virtual file from options (`toVFile(options)`), reads the file from\nthe file system and populates `file.value` with the result.\nIf `encoding` is specified, it’s passed to `fs.readFile`.\nIf `callback` is given, invokes it with either an error or the populated virtual\nfile.\nIf `callback` is not given, returns a [`Promise`][promise] that is rejected with\nan error or resolved with the populated virtual file.\n\n### `readSync(options[, encoding])`\n\nLike `read` but synchronous.\nEither throws an error or returns a populated virtual file.\n\n### `write(options[, fsOptions][, callback])`\n\nCreates a virtual file from `options` (`toVFile(options)`), writes the file to\nthe file system.\n`fsOptions` are passed to `fs.writeFile`.\nIf `callback` is given, invokes it with an error, if any.\nIf `callback` is not given, returns a [`Promise`][promise] that is rejected with\nan error or resolved with the written virtual file.\n\n### `writeSync(options[, fsOptions])`\n\nLike `write` but synchronous.\nEither throws an error or returns a populated virtual file.\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`vfile/.github`][health] for ways to\nget started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/vfile/to-vfile/workflows/main/badge.svg\n\n[build]: https://github.com/vfile/to-vfile/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/vfile/to-vfile.svg\n\n[coverage]: https://codecov.io/github/vfile/to-vfile\n\n[downloads-badge]: https://img.shields.io/npm/dm/to-vfile.svg\n\n[downloads]: https://www.npmjs.com/package/to-vfile\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/vfile/vfile/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[contributing]: https://github.com/vfile/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/vfile/.github/blob/HEAD/support.md\n\n[health]: https://github.com/vfile/.github\n\n[coc]: https://github.com/vfile/.github/blob/HEAD/code-of-conduct.md\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[vfile]: https://github.com/vfile/vfile\n\n[promise]: https://developer.mozilla.org/Web/JavaScript/Reference/Global_Objects/Promise\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2015 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/to-vfile/-/to-vfile-7.2.3.tgz#4e54ad10878901703f1a956a33ba4f131c31eef7",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/to-vfile/-/to-vfile-7.2.3.tgz",
    "hash": "4e54ad10878901703f1a956a33ba4f131c31eef7",
    "integrity": "sha512-QO0A9aE6Z/YkmQadJ0syxpmNXtcQiu0qAtCKYKD5cS3EfgfFTAXfgLX6AOaBrSfWSek5nfsMf3gBZ9KGVFcLuw==",
    "registry": "npm",
    "packageName": "to-vfile",
    "cacheIntegrity": "sha512-QO0A9aE6Z/YkmQadJ0syxpmNXtcQiu0qAtCKYKD5cS3EfgfFTAXfgLX6AOaBrSfWSek5nfsMf3gBZ9KGVFcLuw== sha1-TlStEIeJAXA/GpVqM7pPExwx7vc="
  },
  "registry": "npm",
  "hash": "4e54ad10878901703f1a956a33ba4f131c31eef7"
}