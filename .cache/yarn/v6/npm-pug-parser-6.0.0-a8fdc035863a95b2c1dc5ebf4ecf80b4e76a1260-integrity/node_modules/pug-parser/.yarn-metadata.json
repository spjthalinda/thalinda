{
  "manifest": {
    "name": "pug-parser",
    "version": "6.0.0",
    "description": "The pug parser (takes an array of tokens and converts it to an abstract syntax tree)",
    "keywords": [
      "pug"
    ],
    "dependencies": {
      "pug-error": "^2.0.0",
      "token-stream": "1.0.0"
    },
    "devDependencies": {},
    "files": [
      "lib/inline-tags.js",
      "index.js"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/pugjs/pug/tree/master/packages/pug-parser"
    },
    "author": {
      "name": "ForbesLindesay"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-pug-parser-6.0.0-a8fdc035863a95b2c1dc5ebf4ecf80b4e76a1260-integrity/node_modules/pug-parser/package.json",
    "readmeFilename": "README.md",
    "readme": "# pug-parser\n\nThe pug parser (takes an array of tokens and converts it to an abstract syntax tree)\n\n[![Build Status](https://img.shields.io/travis/pugjs/pug-parser/master.svg)](https://travis-ci.org/pugjs/pug-parser)\n[![Dependencies Status](https://david-dm.org/pugjs/pug/status.svg?path=packages/pug-parser)](https://david-dm.org/pugjs/pug?path=packages/pug-parser)\n[![DevDependencies Status](https://david-dm.org/pugjs/pug/dev-status.svg?path=packages/pug-parser)](https://david-dm.org/pugjs/pug?path=packages/pug-parser&type=dev)\n[![NPM version](https://img.shields.io/npm/v/pug-parser.svg)](https://www.npmjs.org/package/pug-parser)\n\n## Installation\n\n    npm install pug-parser\n\n## Usage\n\n```js\nvar parse = require('pug-parser');\n```\n\n### `parse(tokens, options)`\n\nConvert Pug tokens to an abstract syntax tree (AST).\n\n`options` can contain the following properties:\n\n- `filename` (string): The name of the Pug file; it is included in the produced AST nodes and error handling, if provided.\n- `plugins` (array): An array of plugins, in the order they should be applied.\n- `src` (string): The source of the Pug file; it is used in error handling if provided.\n\n```js\nvar lex = require('pug-lexer');\n\nvar filename = 'my-file.pug';\nvar src = 'div(data-foo=\"bar\")';\nvar tokens = lex(src, {filename});\n\nvar ast = parse(tokens, {filename, src});\n\nconsole.log(JSON.stringify(ast, null, '  '))\n```\n\n```json\n{\n  \"type\": \"Block\",\n  \"nodes\": [\n    {\n      \"type\": \"Tag\",\n      \"name\": \"div\",\n      \"selfClosing\": false,\n      \"block\": {\n        \"type\": \"Block\",\n        \"nodes\": [],\n        \"line\": 1,\n        \"filename\": \"my-file.pug\"\n      },\n      \"attrs\": [\n        {\n          \"name\": \"data-foo\",\n          \"val\": \"\\\"bar\\\"\",\n          \"line\": 1,\n          \"column\": 5,\n          \"filename\": \"my-file.pug\",\n          \"mustEscape\": true\n        }\n      ],\n      \"attributeBlocks\": [],\n      \"isInline\": false,\n      \"line\": 1,\n      \"column\": 1,\n      \"filename\": \"my-file.pug\"\n    }\n  ],\n  \"line\": 0,\n  \"filename\": \"my-file.pug\"\n}\n```\n\n### `new parse.Parser(tokens, options)`\n\nConstructor for a Parser class. This is not meant to be used directly unless you know what you are doing.\n\n`options` may contain the following properties:\n\n- `filename` (string): The name of the Pug file; it is included in the produced AST nodes and error handling, if provided.\n- `plugins` (array): An array of plugins, in the order they should be applied.\n- `src` (string): The source of the Pug file; it is used in error handling if provided.\n\n## License\n\n  MIT\n",
    "licenseText": "Copyright (c) 2014 Forbes Lindesay\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/pug-parser/-/pug-parser-6.0.0.tgz#a8fdc035863a95b2c1dc5ebf4ecf80b4e76a1260",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/pug-parser/-/pug-parser-6.0.0.tgz",
    "hash": "a8fdc035863a95b2c1dc5ebf4ecf80b4e76a1260",
    "integrity": "sha512-ukiYM/9cH6Cml+AOl5kETtM9NR3WulyVP2y4HOU45DyMim1IeP/OOiyEWRr6qk5I5klpsBnbuHpwKmTx6WURnw==",
    "registry": "npm",
    "packageName": "pug-parser",
    "cacheIntegrity": "sha512-ukiYM/9cH6Cml+AOl5kETtM9NR3WulyVP2y4HOU45DyMim1IeP/OOiyEWRr6qk5I5klpsBnbuHpwKmTx6WURnw== sha1-qP3ANYY6lbLB3F6/Ts+AtOdqEmA="
  },
  "registry": "npm",
  "hash": "a8fdc035863a95b2c1dc5ebf4ecf80b4e76a1260"
}