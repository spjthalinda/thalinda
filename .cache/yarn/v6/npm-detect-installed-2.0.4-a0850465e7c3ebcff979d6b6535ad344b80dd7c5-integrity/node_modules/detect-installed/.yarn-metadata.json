{
  "manifest": {
    "name": "detect-installed",
    "version": "2.0.4",
    "description": "Checks that given package is installed globally or locally.",
    "repository": {
      "type": "git",
      "url": "https://github.com/tunnckoCore/detect-installed.git"
    },
    "author": {
      "name": "Charlike Mike Reagent",
      "email": "@tunnckoCore",
      "url": "http://i.am.charlike.online"
    },
    "precommit.silent": true,
    "main": "index.js",
    "license": "MIT",
    "scripts": {
      "lint": "standard --verbose",
      "pretest": "npm run lint",
      "test": "npm run coverage",
      "posttest": "npm run lint:coverage",
      "coverage": "nyc node test.js",
      "lint:coverage": "nyc check-coverage --lines 100 --branches 100 --statements 100 --functions 100",
      "report-coverage": "nyc report --reporter=text-lcov | coveralls",
      "prerelease": "npm test",
      "release": "standard-version --sign --no-verify",
      "precommit": "git add --all",
      "commit": "git-cz"
    },
    "dependencies": {
      "get-installed-path": "^2.0.3"
    },
    "devDependencies": {
      "commitizen": "^2.8.6",
      "coveralls": "^2.11.15",
      "cz-conventional-changelog": "^1.2.0",
      "mkdirp": "^0.5.1",
      "mukla": "^0.4.8",
      "nyc": "^10.0.0",
      "pkg-dir": "^1.0.0",
      "pre-commit": "^1.2.1",
      "rimraf": "^2.5.4",
      "standard": "^8.6.0",
      "standard-version": "^4.0.0"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "check",
      "detect",
      "directory",
      "global",
      "globally",
      "install",
      "installed",
      "local",
      "locally",
      "module",
      "modules",
      "npm",
      "package",
      "packages",
      "pkg",
      "util",
      "utils",
      "validate"
    ],
    "config": {
      "commitizen": {
        "path": "./node_modules/cz-conventional-changelog"
      }
    },
    "engines": {
      "node": ">=4",
      "npm": ">=2"
    },
    "verb": {
      "run": true,
      "toc": {
        "render": true,
        "method": "preWrite",
        "maxdepth": 3,
        "footer": ""
      },
      "layout": "empty",
      "tasks": [
        "readme"
      ],
      "related": {
        "list": [
          "always-done",
          "minibase",
          "try-catch-core",
          "is-installed",
          "global-modules",
          "get-installed-path"
        ],
        "highlight": "get-installed-path"
      },
      "reflinks": [
        "always-done",
        "async-done",
        "base",
        "charlike",
        "commitizen",
        "dezalgo",
        "once",
        "standard-version",
        "verb",
        "verb-generate-readme"
      ],
      "lint": {
        "reflinks": true
      }
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-detect-installed-2.0.4-a0850465e7c3ebcff979d6b6535ad344b80dd7c5-integrity/node_modules/detect-installed/package.json",
    "readmeFilename": "README.md",
    "readme": "# detect-installed [![NPM version](https://img.shields.io/npm/v/detect-installed.svg?style=flat)](https://www.npmjs.com/package/detect-installed) [![NPM downloads](https://img.shields.io/npm/dm/detect-installed.svg?style=flat)](https://npmjs.org/package/detect-installed) [![npm total downloads][downloads-img]][downloads-url]\n\n> Checks that given package is installed globally or locally.\n\n[![code climate][codeclimate-img]][codeclimate-url] \n[![standard code style][standard-img]][standard-url] \n[![linux build status][travis-img]][travis-url] \n[![windows build status][appveyor-img]][appveyor-url] \n[![coverage status][coveralls-img]][coveralls-url] \n[![dependency status][david-img]][david-url]\n\nYou might also be interested in [get-installed-path](https://github.com/tunnckocore/get-installed-path#readme).\n\n## Table of Contents\n- [Install](#install)\n- [Usage](#usage)\n- [API](#api)\n  * [detectInstalled](#detectinstalled)\n  * [.sync](#sync)\n- [Related](#related)\n- [Contributing](#contributing)\n- [Building docs](#building-docs)\n- [Running tests](#running-tests)\n- [Author](#author)\n- [License](#license)\n\n_(TOC generated by [verb](https://github.com/verbose/verb) using [markdown-toc](https://github.com/jonschlinkert/markdown-toc))_\n\n## Install\nInstall with [npm](https://www.npmjs.com/)\n\n```\n$ npm install detect-installed --save\n```\n\nor install using [yarn](https://yarnpkg.com)\n\n```\n$ yarn add detect-installed\n```\n\n## Usage\n> For more use-cases see the [tests](test.js)\n\n```js\nconst detectInstalled = require('detect-installed')\n```\n\n## API\n\n### [detectInstalled](index.js#L60)\n> Detect if some package `name`is installed globally or locally. By default checks if it exists in globally installed modules, using [global-modules][]. Pass `opts.local` to check if it exists in locally installed modules or in `opts.cwd` dir.\n\n**Params**\n\n* `name` **{String}**: package name    \n* `opts` **{Object}**: pass `opts.local` to check locally    \n* `returns` **{Promise}**: always resolved promise, never rejected  \n\n**Example**\n\n```js\nconst detectInstalled = require('detect-installed')\n\ndetectInstalled('npm').then((exists) => {\n  console.log(exists) // => true\n})\n\ndetectInstalled('foo-bar-barwerwlekrjw').then((exists) => {\n  console.log(exists) // => false\n})\n\ndetectInstalled('npm', {\n  local: true\n}).then((exists) => {\n  console.log(exists) // => false\n})\n\ndetectInstalled('global-modules', {\n  local: true\n}).then((exists) => {\n  console.log(exists) // => true\n})\n\n// If you are using it for some sub-directory\n// pass `opts.cwd` to be where the `node_modules`\n// folder is.\nprocess.chidr('foo-bar-baz')\ndetectInstalled('global-modules', {\n  local: true,\n  cwd: '../'\n}).then((exists) => console.log(exists)) // => true\n```\n\n### [.sync](index.js#L86)\n> Synchronously check if package `name` exists as locally or globally installed modules.\n\n**Params**\n\n* `name` **{String}**: package name    \n* `opts` **{Object}**: pass `opts.local` to check locally    \n* `returns` **{Boolean}**: false, if error or not exists globally/locally  \n\n**Example**\n\n```js\nconst detectInstalled = require('detect-installed')\n\nconst exists = detectInstalled.sync('npm') // => true\nconst result = detectInstalled.sync('global-modules', { local: true }) // => true\n```\n\n## Related\n- [always-done](https://www.npmjs.com/package/always-done): Handle completion and errors with elegance! Support for streams, callbacks, promises, child processes, async/await and sync functions. A drop-in replacement… [more](https://github.com/hybridables/always-done#readme) | [homepage](https://github.com/hybridables/always-done#readme \"Handle completion and errors with elegance! Support for streams, callbacks, promises, child processes, async/await and sync functions. A drop-in replacement for [async-done][] - pass 100% of its tests plus more\")\n- [get-installed-path](https://www.npmjs.com/package/get-installed-path): Get locally or globally installation path of given package name | [homepage](https://github.com/tunnckocore/get-installed-path#readme \"Get locally or globally installation path of given package name\")\n- [global-modules](https://www.npmjs.com/package/global-modules): The directory used by npm for globally installed npm modules. | [homepage](https://github.com/jonschlinkert/global-modules \"The directory used by npm for globally installed npm modules.\")\n- [is-installed](https://www.npmjs.com/package/is-installed): Checks that given package is installed on the system - globally or locally. | [homepage](https://github.com/tunnckoCore/is-installed#readme \"Checks that given package is installed on the system - globally or locally.\")\n- [minibase](https://www.npmjs.com/package/minibase): Minimalist alternative for Base. Build complex APIs with small units called plugins. Works well with most of the already existing… [more](https://github.com/node-minibase/minibase#readme) | [homepage](https://github.com/node-minibase/minibase#readme \"Minimalist alternative for Base. Build complex APIs with small units called plugins. Works well with most of the already existing [base][] plugins.\")\n- [try-catch-core](https://www.npmjs.com/package/try-catch-core): Low-level package to handle completion and errors of sync or asynchronous functions, using [once][] and [dezalgo][] libs. Useful for and… [more](https://github.com/hybridables/try-catch-core#readme) | [homepage](https://github.com/hybridables/try-catch-core#readme \"Low-level package to handle completion and errors of sync or asynchronous functions, using [once][] and [dezalgo][] libs. Useful for and used in higher-level libs such as [always-done][] to handle completion of anything.\")\n\n## Contributing\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/tunnckoCore/detect-installed/issues/new).  \nPlease read the [contributing guidelines](CONTRIBUTING.md) for advice on opening issues, pull requests, and coding standards.  \nIf you need some help and can spent some cash, feel free to [contact me at CodeMentor.io](https://www.codementor.io/tunnckocore?utm_source=github&utm_medium=button&utm_term=tunnckocore&utm_campaign=github) too.\n\n**In short:** If you want to contribute to that project, please follow these things\n\n1. Please DO NOT edit [README.md](README.md), [CHANGELOG.md](CHANGELOG.md) and [.verb.md](.verb.md) files. See [\"Building docs\"](#building-docs) section.\n2. Ensure anything is okey by installing the dependencies and run the tests. See [\"Running tests\"](#running-tests) section.\n3. Always use `npm run commit` to commit changes instead of `git commit`, because it is interactive and user-friendly. It uses [commitizen][] behind the scenes, which follows Conventional Changelog idealogy.\n4. Do NOT bump the version in package.json. For that we use `npm run release`, which is [standard-version][] and follows Conventional Changelog idealogy.\n\nThanks a lot! :)\n\n## Building docs\nDocumentation and that readme is generated using [verb-generate-readme][], which is a [verb][] generator, so you need to install both of them and then run `verb` command like that\n\n```\n$ npm install verbose/verb#dev verb-generate-readme --global && verb\n```\n\n_Please don't edit the README directly. Any changes to the readme must be made in [.verb.md](.verb.md)._\n\n## Running tests\nClone repository and run the following in that cloned directory\n\n```\n$ npm install && npm test\n```\n\n## Author\n**Charlike Mike Reagent**\n\n+ [github/tunnckoCore](https://github.com/tunnckoCore)\n+ [twitter/tunnckoCore](http://twitter.com/tunnckoCore)\n+ [codementor/tunnckoCore](https://codementor.io/tunnckoCore)\n\n## License\nCopyright © 2016, [Charlike Mike Reagent](http://i.am.charlike.online). Released under the [MIT license](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.2.0, on December 11, 2016._  \n_Project scaffolded using [charlike][] cli._\n\n[always-done]: https://github.com/hybridables/always-done\n[async-done]: https://github.com/gulpjs/async-done\n[base]: https://github.com/node-base/base\n[charlike]: https://github.com/tunnckocore/charlike\n[commitizen]: https://github.com/commitizen/cz-cli\n[dezalgo]: https://github.com/npm/dezalgo\n[once]: https://github.com/isaacs/once\n[standard-version]: https://github.com/conventional-changelog/standard-version\n[verb-generate-readme]: https://github.com/verbose/verb-generate-readme\n[verb]: https://github.com/verbose/verb\n\n[downloads-url]: https://www.npmjs.com/package/detect-installed\n[downloads-img]: https://img.shields.io/npm/dt/detect-installed.svg\n\n[codeclimate-url]: https://codeclimate.com/github/tunnckoCore/detect-installed\n[codeclimate-img]: https://img.shields.io/codeclimate/github/tunnckoCore/detect-installed.svg\n\n[travis-url]: https://travis-ci.org/tunnckoCore/detect-installed\n[travis-img]: https://img.shields.io/travis/tunnckoCore/detect-installed/master.svg?label=linux\n\n[appveyor-url]: https://ci.appveyor.com/project/tunnckoCore/detect-installed\n[appveyor-img]: https://img.shields.io/appveyor/ci/tunnckoCore/detect-installed/master.svg?label=windows\n\n[coveralls-url]: https://coveralls.io/r/tunnckoCore/detect-installed\n[coveralls-img]: https://img.shields.io/coveralls/tunnckoCore/detect-installed.svg\n\n[david-url]: https://david-dm.org/tunnckoCore/detect-installed\n[david-img]: https://img.shields.io/david/tunnckoCore/detect-installed.svg\n\n[standard-url]: https://github.com/feross/standard\n[standard-img]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg\n\n[global-modules]: https://github.com/jonschlinkert/global-modules",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Charlike Mike Reagent <@tunnckoCore> (http://i.am.charlike.online)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/detect-installed/-/detect-installed-2.0.4.tgz#a0850465e7c3ebcff979d6b6535ad344b80dd7c5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/detect-installed/-/detect-installed-2.0.4.tgz",
    "hash": "a0850465e7c3ebcff979d6b6535ad344b80dd7c5",
    "integrity": "sha1-oIUEZefD68/5eda2U1rTRLgN18U=",
    "registry": "npm",
    "packageName": "detect-installed",
    "cacheIntegrity": "sha512-IpGo06Ff/rMGTKjFvVPbY9aE4mRT2XP3eYHC/ZS25LKDr2h8Gbv74Ez2q/qd7IYDqD9ZjI/VGedHNXsbKZ/Eig== sha1-oIUEZefD68/5eda2U1rTRLgN18U="
  },
  "registry": "npm",
  "hash": "a0850465e7c3ebcff979d6b6535ad344b80dd7c5"
}