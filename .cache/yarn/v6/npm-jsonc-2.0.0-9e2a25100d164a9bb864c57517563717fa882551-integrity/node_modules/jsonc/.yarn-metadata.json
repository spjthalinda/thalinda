{
  "manifest": {
    "name": "jsonc",
    "version": "2.0.0",
    "description": "Everything you need in JSON land. Parse JSON with comments, stringify objects with circular references, etc...",
    "author": {
      "name": "Onur Yıldırım",
      "email": "onur@cutepilot.com"
    },
    "license": "MIT",
    "homepage": "https://onury.io/jsonc",
    "repository": {
      "type": "git",
      "url": "https://github.com/onury/jsonc.git"
    },
    "main": "index.js",
    "files": [
      "lib",
      "index.js",
      "LICENSE"
    ],
    "types": "./lib/jsonc.d.ts",
    "engines": {
      "node": ">=8"
    },
    "scripts": {
      "clean": "rimraf ./lib",
      "build": "npm run clean && npm run cover && mkdirp ./lib && tsc",
      "test": "jest --verbose --no-cache",
      "cover": "jest --coverage --verbose --no-cache",
      "coveralls": "cat ./test/coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js -v",
      "report": "open ./test/coverage/lcov-report/index.html",
      "docs": "docma -c ./docma.json"
    },
    "jest": {
      "testEnvironment": "node",
      "globals": {
        "ts-jest": {
          "diagnostics": false
        }
      },
      "roots": [
        "<rootDir>/src",
        "<rootDir>/lib",
        "<rootDir>/test"
      ],
      "transform": {
        "^.+\\.tsx?$": "ts-jest"
      },
      "testRegex": "(/test/.*|(\\.|/)(test|spec))\\.tsx?$",
      "moduleFileExtensions": [
        "ts",
        "tsx",
        "js",
        "json"
      ],
      "testPathIgnorePatterns": [
        "/backup/",
        "/helpers/",
        "/coverage/"
      ],
      "collectCoverageFrom": [
        "src/**/*.ts",
        "!src/interfaces.ts"
      ],
      "coverageDirectory": "./test/coverage"
    },
    "keywords": [
      "json",
      "object",
      "notation",
      "safe",
      "stringify",
      "parse",
      "read-file",
      "write-file",
      "comments",
      "circular",
      "cyclic",
      "console",
      "log",
      "uglify",
      "beautify",
      "typescript"
    ],
    "dependencies": {
      "fast-safe-stringify": "^2.0.6",
      "graceful-fs": "^4.1.15",
      "mkdirp": "^0.5.1",
      "parse-json": "^4.0.0",
      "strip-bom": "^4.0.0",
      "strip-json-comments": "^3.0.1"
    },
    "devDependencies": {
      "@types/jest": "^24.0.15",
      "@types/mkdirp": "^0.5.2",
      "@types/node": "^12.0.8",
      "@types/parse-json": "^4.0.0",
      "@types/strip-bom": "^4.0.1",
      "@types/strip-json-comments": "0.0.30",
      "coveralls": "^3.0.4",
      "docma": "^3.2.2",
      "jest": "^24.8.0",
      "jest-cli": "^24.8.0",
      "rimraf": "^2.6.3",
      "ts-jest": "^24.0.2",
      "typescript": "^3.5.2"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-jsonc-2.0.0-9e2a25100d164a9bb864c57517563717fa882551-integrity/node_modules/jsonc/package.json",
    "readmeFilename": "README.md",
    "readme": "# jsonc\n\n[![build-status](https://img.shields.io/travis/onury/jsonc.svg?branch=master&style=flat-square)](https://travis-ci.org/onury/jsonc)\n[![coverage-status](https://img.shields.io/coveralls/github/onury/jsonc/master.svg?style=flat-square)](https://coveralls.io/github/onury/jsonc?branch=master)\n[![npm](http://img.shields.io/npm/v/jsonc.svg?style=flat-square)](https://www.npmjs.com/package/jsonc)\n[![release](https://img.shields.io/github/release/onury/jsonc.svg?style=flat-square)](https://github.com/onury/jsonc)\n[![dependencies](https://david-dm.org/onury/jsonc.svg?style=flat-square)](https://david-dm.org/onury/jsonc)\n[![license](http://img.shields.io/npm/l/jsonc.svg?style=flat-square)](https://github.com/onury/jsonc/blob/master/LICENSE)\n[![maintained](https://img.shields.io/maintenance/yes/2019.svg?style=flat-square)](https://github.com/onury/jsonc/graphs/punch-card)  \n\n> © 2019, Onur Yıldırım ([@onury](https://github.com/onury)). MIT License.\n\nEverything you need in JSON land.\n\n`npm i jsonc`\n\n## Features\n\n- Parse JSON with comments.\n- Stringify objects with circular references.\n- Safely parse / stringify without try/catch blocks.\n- Read and auto-parse JSON files gracefully, sync or async (with promises).\n- Auto-stringify and write JSON files gracefully, sync or async (with promises).\n- Strips UTF-8 BOM.\n- Log objects as JSON (without worrying about errors).\n- Uglify/beautify JSON strings.\n- More helpful JSON errors.\n- Friendly API.\n- TypeScript support.\n\n## Usage\n\nSee the concise [API reference][docs-api].\n\n```js\nconst jsonc = require('jsonc');\n// or\nimport { jsonc } from 'jsonc';\n```\n\nThis is safe for JSON with comments:\n```js\njsonc.parse('// comment\\n{\"data\": /* comment */ \"value\"}\\n'); // » { data: 'value' }\n```\n\nAnd this is safe for circular references:\n```js\nconst obj = { x: 1 };\nobj.y = obj; // circular\njsonc.stringify(obj); // » { x: 1, y: '[Circular]' }\n```\n\nBut this is seriously safe:\n```js\n// safe version of every method\nconst jsonc = require('jsonc').safe;\n// or\nimport { safe as jsonc } from 'jsonc';\n\nconst [err, result] = jsonc.parse('[invalid JSON}');\nif (err) {\n    console.log(`Failed to parse JSON: ${err.message}`);\n} else {\n    console.log(result);\n}\n```\n\n## Documentation\n\nSee the concise [API reference][docs-api].\n\n## Change Log\n\n- **v2.0.0** (2019-06-17)\n    + Requires Node.js v8 or newer.\n    + Updated dependencies.\n\n\n- **v1.1.0** (2018-11-22)\n    + Fixed an issue where TypeScript compiler would complain about `'declare' modifier`.\n    + Improved typings for safe methods.\n    + Updated core dependencies.\n\n\n- **v1.0.0** (2018-10-18)\n    + Initial release.\n\n\n## License\nMIT.\n\n\n[docs-api]:https://onury.io/jsonc/api\n[strip-json-comments]:https://github.com/sindresorhus/strip-json-comments\n[json-stringify-safe]:https://github.com/isaacs/json-stringify-safe\n[parse-json]:https://github.com/sindresorhus/parse-json\n[fs-extra]:https://www.npmjs.com/package/fs-extra\n",
    "licenseText": "The MIT License\n\nCopyright (c) 2019, Onur Yıldırım <onur@cutepilot.com>. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/jsonc/-/jsonc-2.0.0.tgz#9e2a25100d164a9bb864c57517563717fa882551",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/jsonc/-/jsonc-2.0.0.tgz",
    "hash": "9e2a25100d164a9bb864c57517563717fa882551",
    "integrity": "sha512-B281bLCT2TRMQa+AQUQY5AGcqSOXBOKaYGP4wDzoA/+QswUfN8sODektbPEs9Baq7LGKun5jQbNFpzwGuVYKhw==",
    "registry": "npm",
    "packageName": "jsonc",
    "cacheIntegrity": "sha512-B281bLCT2TRMQa+AQUQY5AGcqSOXBOKaYGP4wDzoA/+QswUfN8sODektbPEs9Baq7LGKun5jQbNFpzwGuVYKhw== sha1-niolEA0WSpu4ZMV1F1Y3F/qIJVE="
  },
  "registry": "npm",
  "hash": "9e2a25100d164a9bb864c57517563717fa882551"
}