{
  "manifest": {
    "name": "estree-util-visit",
    "version": "1.1.0",
    "description": "esast (and estree) utility to visit nodes",
    "license": "MIT",
    "keywords": [
      "esast",
      "esast-util",
      "util",
      "utility",
      "recma",
      "esast",
      "estree",
      "javascript",
      "ecmascript",
      "tree",
      "ast",
      "node",
      "visit",
      "walk"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/estree-util-visit.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/estree-util-visit/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "browser": {
      "./color.js": "./color.browser.js"
    },
    "react-native": {
      "./color.js": "./color.browser.js"
    },
    "files": [
      "color.d.ts",
      "color.js",
      "color.browser.d.ts",
      "color.browser.js",
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "@types/estree-jsx": "^0.0.1",
      "@types/unist": "^2.0.0"
    },
    "devDependencies": {
      "@types/tape": "^4.0.0",
      "acorn": "^8.0.0",
      "c8": "^7.0.0",
      "prettier": "^2.0.0",
      "remark-cli": "^9.0.0",
      "remark-preset-wooorm": "^8.0.0",
      "rimraf": "^3.0.0",
      "tape": "^5.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "xo": "^0.39.0"
    },
    "scripts": {
      "prepack": "npm run build && npm run format",
      "build": "rimraf \"*.d.ts\" && tsc && type-coverage",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node test.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node test.js",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "rules": {
        "capitalized-comments": "off",
        "max-depth": "off",
        "no-var": "off",
        "prefer-arrow-callback": "off"
      }
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-estree-util-visit-1.1.0-c0ea7942c40ac7889a77b57a11e92f987744bc6f-integrity/node_modules/estree-util-visit/package.json",
    "readmeFilename": "readme.md",
    "readme": "# estree-util-visit\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[**esast**][esast] (and [estree][]) utility to visit nodes.\n\nSimilar to [`unist-util-visit`][unist-visit].\nBasically the tiniest you can go (while being usable).\nAlso has nice stack traces if something crashes.\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c):\nNode 12+ is needed to use it and it must be `import`ed instead of `require`d.\n\n[npm][]:\n\n```sh\nnpm install estree-util-visit\n```\n\n## Use\n\n```js\nimport {parse} from 'acorn'\nimport {visit} from 'estree-util-visit'\n\nvar tree = parse(\n  'export function x() { console.log(1 + \"2\"); process.exit(3) }',\n  {sourceType: 'module'}\n)\n\nvisit(tree, function (node) {\n  if (node.type === 'Literal') console.log(node.value)\n})\n\n// Both enter and leave:\n// walk(tree, {\n//   enter(node, field, index, parents) {},\n//   leave(node, field, index, parents) {}\n// })\n```\n\nYields:\n\n```txt\n1\n\"2\"\n3\n```\n\n## API\n\nThis package exports the following identifiers: `visit`, `EXIT`, `CONTINUE`, and\n`SKIP`.\nThere is no default export.\n\n### `visit(tree, visitor|visitors)`\n\nVisit nodes ([*inclusive descendants*][descendant] of [`tree`][tree]), with\nancestral information.\n\nThis algorithm performs [*depth-first*][depth-first]\n[*tree traversal*][tree-traversal] in [*preorder*][preorder] (**NLR**) and/or\n[*postorder*][postorder] (**LRN**).\n\nCompared to other estree walkers, this does not need a dictionary of which\nfields are nodes, because it ducktypes instead.\n\nWalking the tree is an intensive task.\nMake use of the return values of the visitor(s) when possible.\nInstead of walking a tree multiple times, walk it once, use\n[`unist-util-is`][is] to check if a node matches, and then perform different\noperations.\n\n###### Parameters\n\n*   `tree` ([`Node`][node]) — [Tree][] to traverse\n*   `visitor` ([`Function`][visitor])\n    — Same as passing `{enter: visitor}`\n*   `visitors` (`{enter: visitor, exit: visitor}`)\n    — Two functions, respectively called when entering a node ([preorder][])\n    or before leaving a node ([postorder][])\n\n#### `next? = visitor(node, key, index, ancestors)`\n\nCalled when a node is found.\n\nVisitors are free to transform `node`.\nThey can also transform the [parent][] of node (the last of `ancestors`).\nReplacing `node` itself, if `SKIP` is not returned, still causes its\n[descendant][]s to be walked.\nIf adding or removing previous [sibling][]s of `node`, `visitor` should return\na new [`index`][index] (`number`) to specify the sibling to traverse after\n`node` is traversed.\nAdding or removing next siblings of `node` is handled as expected without\nneeding to return a new `index`.\n\n###### Parameters\n\n*   `node` ([`Node`][node]) — Found node\n*   `key` (`string?`) — Field at which `node` lives in its parent\n*   `index` (`number?`) — Index at which `node` lives if `parent[key]` is an\n    array\n*   `ancestors` (`Array.<Node>`) — [Ancestor][]s of `node`\n\n##### Returns\n\nThe return value can have the following forms:\n\n*   `index` (`number`) — Treated as a tuple of `[CONTINUE, index]`\n*   `action` (`symbol`) — Treated as a tuple of `[action]`\n*   `tuple` (`Array.<symbol|number>`) — List with one or two values, the first\n    an `action`, the second and `index`.\n    Note that passing a tuple only makes sense if the `action` is `SKIP`.\n    If the `action` is `EXIT`, that action can be returned.\n    If the `action` is `CONTINUE`, `index` can be returned.\n\n###### `action`\n\nAn action can have the following values:\n\n*   `EXIT` (`symbol`) — Stop traversing immediately\n*   `CONTINUE` (`symbol`) — Continue traversing as normal (same behaviour\n    as not returning an action)\n*   `SKIP` (`symbol`) — Do not traverse this node’s children.\n    Has no effect in `leave`\n\n## Related\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definition -->\n\n[build-badge]: https://github.com/syntax-tree/estree-util-visit/workflows/main/badge.svg\n\n[build]: https://github.com/syntax-tree/estree-util-visit/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/estree-util-visit.svg\n\n[coverage]: https://codecov.io/github/syntax-tree/estree-util-visit\n\n[downloads-badge]: https://img.shields.io/npm/dm/estree-util-visit.svg\n\n[downloads]: https://www.npmjs.com/package/estree-util-visit\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/estree-util-visit.svg\n\n[size]: https://bundlephobia.com/result?p=estree-util-visit\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/syntax-tree/unist/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[contributing]: https://github.com/syntax-tree/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/syntax-tree/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/syntax-tree/.github/blob/HEAD/code-of-conduct.md\n\n[index]: https://github.com/syntax-tree/unist#index\n\n[parent]: https://github.com/syntax-tree/unist#parent-1\n\n[esast]: https://github.com/syntax-tree/esast\n\n[estree]: https://github.com/estree/estree\n\n[ancestor]: https://github.com/syntax-tree/unist#ancestor\n\n[descendant]: https://github.com/syntax-tree/unist#descendant\n\n[tree]: https://github.com/syntax-tree/unist#tree\n\n[depth-first]: https://github.com/syntax-tree/unist#depth-first-traversal\n\n[tree-traversal]: https://github.com/syntax-tree/unist#tree-traversal\n\n[preorder]: https://github.com/syntax-tree/unist#preorder\n\n[postorder]: https://github.com/syntax-tree/unist#postorder\n\n[is]: https://github.com/syntax-tree/unist-util-is\n\n[node]: https://github.com/syntax-tree/esast#node\n\n[sibling]: https://github.com/syntax-tree/esast#sibling\n\n[visitor]: #next--visitornode-key-index-ancestors\n\n[unist-visit]: https://github.com/syntax-tree/unist-util-visit-parents\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2021 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/estree-util-visit/-/estree-util-visit-1.1.0.tgz#c0ea7942c40ac7889a77b57a11e92f987744bc6f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/estree-util-visit/-/estree-util-visit-1.1.0.tgz",
    "hash": "c0ea7942c40ac7889a77b57a11e92f987744bc6f",
    "integrity": "sha512-3lXJ4Us9j8TUif9cWcQy81t9p5OLasnDuuhrFiqb+XstmKC1d1LmrQWYsY49/9URcfHE64mPypDBaNK9NwWDPQ==",
    "registry": "npm",
    "packageName": "estree-util-visit",
    "cacheIntegrity": "sha512-3lXJ4Us9j8TUif9cWcQy81t9p5OLasnDuuhrFiqb+XstmKC1d1LmrQWYsY49/9URcfHE64mPypDBaNK9NwWDPQ== sha1-wOp5QsQKx4iad7V6EekvmHdEvG8="
  },
  "registry": "npm",
  "hash": "c0ea7942c40ac7889a77b57a11e92f987744bc6f"
}