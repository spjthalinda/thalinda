{
  "manifest": {
    "name": "postcss-selector-not",
    "description": "PostCSS plugin to transform :not() W3C CSS level 4 pseudo class to :not() CSS level 3 selectors",
    "version": "6.0.1",
    "contributors": [
      {
        "name": "Antonio Laguna",
        "email": "antonio@laguna.es",
        "url": "https://antonio.laguna.es"
      },
      {
        "name": "Romain Menke",
        "email": "romainmenke@gmail.com"
      },
      {
        "name": "Maxime Thirouin"
      }
    ],
    "license": "MIT",
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/csstools"
    },
    "engines": {
      "node": "^12 || ^14 || >=16"
    },
    "main": "dist/index.cjs",
    "module": "dist/index.mjs",
    "types": "dist/index.d.ts",
    "exports": {
      ".": {
        "import": "./dist/index.mjs",
        "require": "./dist/index.cjs",
        "default": "./dist/index.mjs"
      }
    },
    "files": [
      "CHANGELOG.md",
      "LICENSE",
      "README.md",
      "dist"
    ],
    "dependencies": {
      "postcss-selector-parser": "^6.0.10"
    },
    "peerDependencies": {
      "postcss": "^8.2"
    },
    "scripts": {
      "build": "rollup -c ../../rollup/default.js",
      "clean": "node -e \"fs.rmSync('./dist', { recursive: true, force: true });\"",
      "docs": "node ../../.github/bin/generate-docs/install.mjs && node ../../.github/bin/generate-docs/readme.mjs",
      "lint": "npm run lint:eslint && npm run lint:package-json",
      "lint:eslint": "eslint ./src --ext .js --ext .ts --ext .mjs --no-error-on-unmatched-pattern",
      "lint:package-json": "node ../../.github/bin/format-package-json.mjs",
      "prepublishOnly": "npm run clean && npm run build && npm run test",
      "test": "node .tape.mjs && npm run test:exports",
      "test:exports": "node ./test/_import.mjs && node ./test/_require.cjs",
      "test:rewrite-expects": "REWRITE_EXPECTS=true node .tape.mjs"
    },
    "homepage": "https://github.com/csstools/postcss-plugins/tree/main/plugins/postcss-selector-not#readme",
    "repository": {
      "type": "git",
      "url": "https://github.com/csstools/postcss-plugins.git",
      "directory": "plugins/postcss-selector-not"
    },
    "bugs": {
      "url": "https://github.com/csstools/postcss-plugins/issues"
    },
    "keywords": [
      "Not",
      "postcss",
      "postcss-plugin",
      "selector",
      "selectors"
    ],
    "csstools": {
      "cssdbId": "not-pseudo-class",
      "exportName": "postcssSelectorNot",
      "humanReadableName": "PostCSS Selector Not",
      "specUrl": "https://www.w3.org/TR/selectors-4/#negation-pseudo"
    },
    "volta": {
      "extends": "../../package.json"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-postcss-selector-not-6.0.1-8f0a709bf7d4b45222793fc34409be407537556d-integrity/node_modules/postcss-selector-not/package.json",
    "readmeFilename": "README.md",
    "readme": "# PostCSS Selector Not [<img src=\"https://postcss.github.io/postcss/logo.svg\" alt=\"PostCSS Logo\" width=\"90\" height=\"90\" align=\"right\">][postcss]\n\n[<img alt=\"npm version\" src=\"https://img.shields.io/npm/v/postcss-selector-not.svg\" height=\"20\">][npm-url] [<img alt=\"CSS Standard Status\" src=\"https://cssdb.org/images/badges/not-pseudo-class.svg\" height=\"20\">][css-url] [<img alt=\"Build Status\" src=\"https://github.com/csstools/postcss-plugins/workflows/test/badge.svg\" height=\"20\">][cli-url] [<img alt=\"Discord\" src=\"https://shields.io/badge/Discord-5865F2?logo=discord&logoColor=white\">][discord]\n\n[PostCSS Selector Not] transforms :not() W3C CSS level 4 pseudo classes to :not() CSS level 3 selectors following the [Selectors 4 Specification].\n\n```pcss\np:not(:first-child, .special) {\n\tcolor: red;\n}\n\n/* becomes */\n\np:not(:first-child):not(.special) {\n\tcolor: red;\n}\n```\n\n⚠️ Only lists of simple selectors (`:not(.a, .b)`) will work as expected.\nComplex selectors (`:not(.a > .b, .c ~ .d)`) can not be downgraded.\n\n## Usage\n\nAdd [PostCSS Selector Not] to your project:\n\n```bash\nnpm install postcss postcss-selector-not --save-dev\n```\n\nUse it as a [PostCSS] plugin:\n\n```js\nconst postcss = require('postcss');\nconst postcssSelectorNot = require('postcss-selector-not');\n\npostcss([\n\tpostcssSelectorNot(/* pluginOptions */)\n]).process(YOUR_CSS /*, processOptions */);\n```\n\n[PostCSS Selector Not] runs in all Node environments, with special\ninstructions for:\n\n| [Node](INSTALL.md#node) | [PostCSS CLI](INSTALL.md#postcss-cli) | [Webpack](INSTALL.md#webpack) | [Create React App](INSTALL.md#create-react-app) | [Gulp](INSTALL.md#gulp) | [Grunt](INSTALL.md#grunt) |\n| --- | --- | --- | --- | --- | --- |\n\n[cli-url]: https://github.com/csstools/postcss-plugins/actions/workflows/test.yml?query=workflow/test\n[css-url]: https://cssdb.org/#not-pseudo-class\n[discord]: https://discord.gg/bUadyRwkJS\n[npm-url]: https://www.npmjs.com/package/postcss-selector-not\n\n[Gulp PostCSS]: https://github.com/postcss/gulp-postcss\n[Grunt PostCSS]: https://github.com/nDmitry/grunt-postcss\n[PostCSS]: https://github.com/postcss/postcss\n[PostCSS Loader]: https://github.com/postcss/postcss-loader\n[PostCSS Selector Not]: https://github.com/csstools/postcss-plugins/tree/main/plugins/postcss-selector-not\n[Selectors 4 Specification]: https://www.w3.org/TR/selectors-4/#negation-pseudo\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2017 Maxime Thirouin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/postcss-selector-not/-/postcss-selector-not-6.0.1.tgz#8f0a709bf7d4b45222793fc34409be407537556d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/postcss-selector-not/-/postcss-selector-not-6.0.1.tgz",
    "hash": "8f0a709bf7d4b45222793fc34409be407537556d",
    "integrity": "sha512-1i9affjAe9xu/y9uqWH+tD4r6/hDaXJruk8xn2x1vzxC2U3J3LKO3zJW4CyxlNhA56pADJ/djpEwpH1RClI2rQ==",
    "registry": "npm",
    "packageName": "postcss-selector-not",
    "cacheIntegrity": "sha512-1i9affjAe9xu/y9uqWH+tD4r6/hDaXJruk8xn2x1vzxC2U3J3LKO3zJW4CyxlNhA56pADJ/djpEwpH1RClI2rQ== sha1-jwpwm/fUtFIieT/DRAm+QHU3VW0="
  },
  "registry": "npm",
  "hash": "8f0a709bf7d4b45222793fc34409be407537556d"
}