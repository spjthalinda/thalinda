{
  "manifest": {
    "name": "@jridgewell/sourcemap-codec",
    "version": "1.5.0",
    "description": "Encode/decode sourcemap mappings",
    "keywords": [
      "sourcemap",
      "vlq"
    ],
    "main": "dist/sourcemap-codec.umd.js",
    "module": "dist/sourcemap-codec.mjs",
    "types": "dist/types/sourcemap-codec.d.ts",
    "files": [
      "dist"
    ],
    "exports": {
      ".": [
        {
          "types": "./dist/types/sourcemap-codec.d.ts",
          "browser": "./dist/sourcemap-codec.umd.js",
          "require": "./dist/sourcemap-codec.umd.js",
          "import": "./dist/sourcemap-codec.mjs"
        },
        "./dist/sourcemap-codec.umd.js"
      ],
      "./package.json": "./package.json"
    },
    "scripts": {
      "benchmark": "run-s build:rollup benchmark:*",
      "benchmark:install": "cd benchmark && npm install",
      "benchmark:only": "node --expose-gc benchmark/index.js",
      "build": "run-s -n build:*",
      "build:rollup": "rollup -c rollup.config.js",
      "build:ts": "tsc --project tsconfig.build.json",
      "lint": "run-s -n lint:*",
      "lint:prettier": "npm run test:lint:prettier -- --write",
      "lint:ts": "npm run test:lint:ts -- --fix",
      "prebuild": "rm -rf dist",
      "prepublishOnly": "npm run preversion",
      "preversion": "run-s test build",
      "test": "run-s -n test:lint test:only",
      "test:debug": "mocha --inspect-brk",
      "test:lint": "run-s -n test:lint:*",
      "test:lint:prettier": "prettier --check '{src,test}/**/*.ts'",
      "test:lint:ts": "eslint '{src,test}/**/*.ts'",
      "test:only": "mocha",
      "test:coverage": "c8 mocha",
      "test:watch": "mocha --watch"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/jridgewell/sourcemap-codec.git"
    },
    "author": {
      "name": "Rich Harris"
    },
    "license": "MIT",
    "devDependencies": {
      "@rollup/plugin-typescript": "8.3.0",
      "@types/mocha": "10.0.6",
      "@types/node": "17.0.15",
      "@typescript-eslint/eslint-plugin": "5.10.0",
      "@typescript-eslint/parser": "5.10.0",
      "benchmark": "2.1.4",
      "c8": "7.11.2",
      "eslint": "8.7.0",
      "eslint-config-prettier": "8.3.0",
      "mocha": "9.2.0",
      "npm-run-all": "4.1.5",
      "prettier": "2.5.1",
      "rollup": "2.64.0",
      "source-map": "0.6.1",
      "source-map-js": "1.0.2",
      "sourcemap-codec": "1.4.8",
      "tsx": "4.7.1",
      "typescript": "4.5.4"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-@jridgewell-sourcemap-codec-1.5.0-3188bcb273a414b0d215fd22a58540b989b9409a-integrity/node_modules/@jridgewell/sourcemap-codec/package.json",
    "readmeFilename": "README.md",
    "readme": "# @jridgewell/sourcemap-codec\n\nEncode/decode the `mappings` property of a [sourcemap](https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit).\n\n\n## Why?\n\nSourcemaps are difficult to generate and manipulate, because the `mappings` property – the part that actually links the generated code back to the original source – is encoded using an obscure method called [Variable-length quantity](https://en.wikipedia.org/wiki/Variable-length_quantity). On top of that, each segment in the mapping contains offsets rather than absolute indices, which means that you can't look at a segment in isolation – you have to understand the whole sourcemap.\n\nThis package makes the process slightly easier.\n\n\n## Installation\n\n```bash\nnpm install @jridgewell/sourcemap-codec\n```\n\n\n## Usage\n\n```js\nimport { encode, decode } from '@jridgewell/sourcemap-codec';\n\nvar decoded = decode( ';EAEEA,EAAE,EAAC,CAAE;ECQY,UACC' );\n\nassert.deepEqual( decoded, [\n\t// the first line (of the generated code) has no mappings,\n\t// as shown by the starting semi-colon (which separates lines)\n\t[],\n\n\t// the second line contains four (comma-separated) segments\n\t[\n\t\t// segments are encoded as you'd expect:\n\t\t// [ generatedCodeColumn, sourceIndex, sourceCodeLine, sourceCodeColumn, nameIndex ]\n\n\t\t// i.e. the first segment begins at column 2, and maps back to the second column\n\t\t// of the second line (both zero-based) of the 0th source, and uses the 0th\n\t\t// name in the `map.names` array\n\t\t[ 2, 0, 2, 2, 0 ],\n\n\t\t// the remaining segments are 4-length rather than 5-length,\n\t\t// because they don't map a name\n\t\t[ 4, 0, 2, 4 ],\n\t\t[ 6, 0, 2, 5 ],\n\t\t[ 7, 0, 2, 7 ]\n\t],\n\n\t// the final line contains two segments\n\t[\n\t\t[ 2, 1, 10, 19 ],\n\t\t[ 12, 1, 11, 20 ]\n\t]\n]);\n\nvar encoded = encode( decoded );\nassert.equal( encoded, ';EAEEA,EAAE,EAAC,CAAE;ECQY,UACC' );\n```\n\n## Benchmarks\n\n```\nnode v20.10.0\n\namp.js.map - 45120 segments\n\nDecode Memory Usage:\nlocal code                             5815135 bytes\n@jridgewell/sourcemap-codec 1.4.15     5868160 bytes\nsourcemap-codec                        5492584 bytes\nsource-map-0.6.1                      13569984 bytes\nsource-map-0.8.0                       6390584 bytes\nchrome dev tools                       8011136 bytes\nSmallest memory usage is sourcemap-codec\n\nDecode speed:\ndecode: local code x 492 ops/sec ±1.22% (90 runs sampled)\ndecode: @jridgewell/sourcemap-codec 1.4.15 x 499 ops/sec ±1.16% (89 runs sampled)\ndecode: sourcemap-codec x 376 ops/sec ±1.66% (89 runs sampled)\ndecode: source-map-0.6.1 x 34.99 ops/sec ±0.94% (48 runs sampled)\ndecode: source-map-0.8.0 x 351 ops/sec ±0.07% (95 runs sampled)\nchrome dev tools x 165 ops/sec ±0.91% (86 runs sampled)\nFastest is decode: @jridgewell/sourcemap-codec 1.4.15\n\nEncode Memory Usage:\nlocal code                              444248 bytes\n@jridgewell/sourcemap-codec 1.4.15      623024 bytes\nsourcemap-codec                        8696280 bytes\nsource-map-0.6.1                       8745176 bytes\nsource-map-0.8.0                       8736624 bytes\nSmallest memory usage is local code\n\nEncode speed:\nencode: local code x 796 ops/sec ±0.11% (97 runs sampled)\nencode: @jridgewell/sourcemap-codec 1.4.15 x 795 ops/sec ±0.25% (98 runs sampled)\nencode: sourcemap-codec x 231 ops/sec ±0.83% (86 runs sampled)\nencode: source-map-0.6.1 x 166 ops/sec ±0.57% (86 runs sampled)\nencode: source-map-0.8.0 x 203 ops/sec ±0.45% (88 runs sampled)\nFastest is encode: local code,encode: @jridgewell/sourcemap-codec 1.4.15\n\n\n***\n\n\nbabel.min.js.map - 347793 segments\n\nDecode Memory Usage:\nlocal code                            35424960 bytes\n@jridgewell/sourcemap-codec 1.4.15    35424696 bytes\nsourcemap-codec                       36033464 bytes\nsource-map-0.6.1                      62253704 bytes\nsource-map-0.8.0                      43843920 bytes\nchrome dev tools                      45111400 bytes\nSmallest memory usage is @jridgewell/sourcemap-codec 1.4.15\n\nDecode speed:\ndecode: local code x 38.18 ops/sec ±5.44% (52 runs sampled)\ndecode: @jridgewell/sourcemap-codec 1.4.15 x 38.36 ops/sec ±5.02% (52 runs sampled)\ndecode: sourcemap-codec x 34.05 ops/sec ±4.45% (47 runs sampled)\ndecode: source-map-0.6.1 x 4.31 ops/sec ±2.76% (15 runs sampled)\ndecode: source-map-0.8.0 x 55.60 ops/sec ±0.13% (73 runs sampled)\nchrome dev tools x 16.94 ops/sec ±3.78% (46 runs sampled)\nFastest is decode: source-map-0.8.0\n\nEncode Memory Usage:\nlocal code                             2606016 bytes\n@jridgewell/sourcemap-codec 1.4.15     2626440 bytes\nsourcemap-codec                       21152576 bytes\nsource-map-0.6.1                      25023928 bytes\nsource-map-0.8.0                      25256448 bytes\nSmallest memory usage is local code\n\nEncode speed:\nencode: local code x 127 ops/sec ±0.18% (83 runs sampled)\nencode: @jridgewell/sourcemap-codec 1.4.15 x 128 ops/sec ±0.26% (83 runs sampled)\nencode: sourcemap-codec x 29.31 ops/sec ±2.55% (53 runs sampled)\nencode: source-map-0.6.1 x 18.85 ops/sec ±3.19% (36 runs sampled)\nencode: source-map-0.8.0 x 19.34 ops/sec ±1.97% (36 runs sampled)\nFastest is encode: @jridgewell/sourcemap-codec 1.4.15\n\n\n***\n\n\npreact.js.map - 1992 segments\n\nDecode Memory Usage:\nlocal code                              261696 bytes\n@jridgewell/sourcemap-codec 1.4.15      244296 bytes\nsourcemap-codec                         302816 bytes\nsource-map-0.6.1                        939176 bytes\nsource-map-0.8.0                           336 bytes\nchrome dev tools                        587368 bytes\nSmallest memory usage is source-map-0.8.0\n\nDecode speed:\ndecode: local code x 17,782 ops/sec ±0.32% (97 runs sampled)\ndecode: @jridgewell/sourcemap-codec 1.4.15 x 17,863 ops/sec ±0.40% (100 runs sampled)\ndecode: sourcemap-codec x 12,453 ops/sec ±0.27% (101 runs sampled)\ndecode: source-map-0.6.1 x 1,288 ops/sec ±1.05% (96 runs sampled)\ndecode: source-map-0.8.0 x 9,289 ops/sec ±0.27% (101 runs sampled)\nchrome dev tools x 4,769 ops/sec ±0.18% (100 runs sampled)\nFastest is decode: @jridgewell/sourcemap-codec 1.4.15\n\nEncode Memory Usage:\nlocal code                              262944 bytes\n@jridgewell/sourcemap-codec 1.4.15       25544 bytes\nsourcemap-codec                         323048 bytes\nsource-map-0.6.1                        507808 bytes\nsource-map-0.8.0                        507480 bytes\nSmallest memory usage is @jridgewell/sourcemap-codec 1.4.15\n\nEncode speed:\nencode: local code x 24,207 ops/sec ±0.79% (95 runs sampled)\nencode: @jridgewell/sourcemap-codec 1.4.15 x 24,288 ops/sec ±0.48% (96 runs sampled)\nencode: sourcemap-codec x 6,761 ops/sec ±0.21% (100 runs sampled)\nencode: source-map-0.6.1 x 5,374 ops/sec ±0.17% (99 runs sampled)\nencode: source-map-0.8.0 x 5,633 ops/sec ±0.32% (99 runs sampled)\nFastest is encode: @jridgewell/sourcemap-codec 1.4.15,encode: local code\n\n\n***\n\n\nreact.js.map - 5726 segments\n\nDecode Memory Usage:\nlocal code                              678816 bytes\n@jridgewell/sourcemap-codec 1.4.15      678816 bytes\nsourcemap-codec                         816400 bytes\nsource-map-0.6.1                       2288864 bytes\nsource-map-0.8.0                        721360 bytes\nchrome dev tools                       1012512 bytes\nSmallest memory usage is local code\n\nDecode speed:\ndecode: local code x 6,178 ops/sec ±0.19% (98 runs sampled)\ndecode: @jridgewell/sourcemap-codec 1.4.15 x 6,261 ops/sec ±0.22% (100 runs sampled)\ndecode: sourcemap-codec x 4,472 ops/sec ±0.90% (99 runs sampled)\ndecode: source-map-0.6.1 x 449 ops/sec ±0.31% (95 runs sampled)\ndecode: source-map-0.8.0 x 3,219 ops/sec ±0.13% (100 runs sampled)\nchrome dev tools x 1,743 ops/sec ±0.20% (99 runs sampled)\nFastest is decode: @jridgewell/sourcemap-codec 1.4.15\n\nEncode Memory Usage:\nlocal code                              140960 bytes\n@jridgewell/sourcemap-codec 1.4.15      159808 bytes\nsourcemap-codec                         969304 bytes\nsource-map-0.6.1                        930520 bytes\nsource-map-0.8.0                        930248 bytes\nSmallest memory usage is local code\n\nEncode speed:\nencode: local code x 8,013 ops/sec ±0.19% (100 runs sampled)\nencode: @jridgewell/sourcemap-codec 1.4.15 x 7,989 ops/sec ±0.20% (101 runs sampled)\nencode: sourcemap-codec x 2,472 ops/sec ±0.21% (99 runs sampled)\nencode: source-map-0.6.1 x 2,200 ops/sec ±0.17% (99 runs sampled)\nencode: source-map-0.8.0 x 2,220 ops/sec ±0.37% (99 runs sampled)\nFastest is encode: local code\n\n\n***\n\n\nvscode.map - 2141001 segments\n\nDecode Memory Usage:\nlocal code                           198955264 bytes\n@jridgewell/sourcemap-codec 1.4.15   199175352 bytes\nsourcemap-codec                      199102688 bytes\nsource-map-0.6.1                     386323432 bytes\nsource-map-0.8.0                     244116432 bytes\nchrome dev tools                     293734280 bytes\nSmallest memory usage is local code\n\nDecode speed:\ndecode: local code x 3.90 ops/sec ±22.21% (15 runs sampled)\ndecode: @jridgewell/sourcemap-codec 1.4.15 x 3.95 ops/sec ±23.53% (15 runs sampled)\ndecode: sourcemap-codec x 3.82 ops/sec ±17.94% (14 runs sampled)\ndecode: source-map-0.6.1 x 0.61 ops/sec ±7.81% (6 runs sampled)\ndecode: source-map-0.8.0 x 9.54 ops/sec ±0.28% (28 runs sampled)\nchrome dev tools x 2.18 ops/sec ±10.58% (10 runs sampled)\nFastest is decode: source-map-0.8.0\n\nEncode Memory Usage:\nlocal code                            13509880 bytes\n@jridgewell/sourcemap-codec 1.4.15    13537648 bytes\nsourcemap-codec                       32540104 bytes\nsource-map-0.6.1                     127531040 bytes\nsource-map-0.8.0                     127535312 bytes\nSmallest memory usage is local code\n\nEncode speed:\nencode: local code x 20.10 ops/sec ±0.19% (38 runs sampled)\nencode: @jridgewell/sourcemap-codec 1.4.15 x 20.26 ops/sec ±0.32% (38 runs sampled)\nencode: sourcemap-codec x 5.44 ops/sec ±1.64% (18 runs sampled)\nencode: source-map-0.6.1 x 2.30 ops/sec ±4.79% (10 runs sampled)\nencode: source-map-0.8.0 x 2.46 ops/sec ±6.53% (10 runs sampled)\nFastest is encode: @jridgewell/sourcemap-codec 1.4.15\n```\n\n# License\n\nMIT\n",
    "licenseText": "The MIT License\n\nCopyright (c) 2015 Rich Harris\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz#3188bcb273a414b0d215fd22a58540b989b9409a",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
    "hash": "3188bcb273a414b0d215fd22a58540b989b9409a",
    "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
    "registry": "npm",
    "packageName": "@jridgewell/sourcemap-codec",
    "cacheIntegrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ== sha1-MYi8snOkFLDSFf0ipYVAuYm5QJo="
  },
  "registry": "npm",
  "hash": "3188bcb273a414b0d215fd22a58540b989b9409a"
}