{
  "manifest": {
    "name": "hast-util-from-parse5",
    "version": "7.1.2",
    "description": "hast utility to transform from Parse5â€™s AST",
    "license": "MIT",
    "keywords": [
      "unist",
      "hast",
      "hast-util",
      "util",
      "utility",
      "transform",
      "change",
      "ast"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/hast-util-from-parse5.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/hast-util-from-parse5/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "lib/",
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "@types/hast": "^2.0.0",
      "@types/unist": "^2.0.0",
      "hastscript": "^7.0.0",
      "property-information": "^6.0.0",
      "vfile": "^5.0.0",
      "vfile-location": "^4.0.0",
      "web-namespaces": "^2.0.0"
    },
    "devDependencies": {
      "@types/node": "^18.0.0",
      "c8": "^7.0.0",
      "is-hidden": "^2.0.0",
      "parse5": "^7.0.0",
      "prettier": "^2.0.0",
      "remark-cli": "^11.0.0",
      "remark-preset-wooorm": "^9.0.0",
      "to-vfile": "^7.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "unist-util-visit": "^4.0.0",
      "xo": "^0.53.0"
    },
    "scripts": {
      "prepack": "npm run build && npm run format",
      "build": "tsc --build --clean && tsc --build && type-coverage",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node --conditions development test/index.js",
      "test-coverage": "c8 --check-coverage --100 --reporter lcov npm run test-api",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "rules": {
        "max-depth": "off"
      },
      "overrides": [
        {
          "files": "test/**/*.js",
          "rules": {
            "no-await-in-loop": 0
          }
        }
      ]
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-hast-util-from-parse5-7.1.2-aecfef73e3ceafdfa4550716443e4eb7b02e22b0-integrity/node_modules/hast-util-from-parse5/package.json",
    "readmeFilename": "readme.md",
    "readme": "# hast-util-from-parse5\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[hast][] utility to transform from [`parse5`][parse5]s AST.\n\n## Contents\n\n*   [What is this?](#what-is-this)\n*   [When should I use this?](#when-should-i-use-this)\n*   [Install](#install)\n*   [Use](#use)\n*   [API](#api)\n    *   [`fromParse5(tree[, file|options])`](#fromparse5tree-fileoptions)\n    *   [`Options`](#options)\n    *   [`Space`](#space-1)\n*   [Types](#types)\n*   [Compatibility](#compatibility)\n*   [Security](#security)\n*   [Related](#related)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## What is this?\n\nThis package is a utility that can turn a parse5 tree into a hast tree.\n\n## When should I use this?\n\nYou can use this package when using `parse5` as an HTML parser and wanting to\nwork with hast.\n\nThe utility [`hast-util-to-parse5`][hast-util-to-parse5] does the inverse of\nthis utility.\nIt generates `parse5`s AST again.\n\nThe utility [`hast-util-from-html`][hast-util-from-html] wraps this utility and\n`parse5` to both parse HTML and generate hast from it.\n\n## Install\n\nThis package is [ESM only][esm].\nIn Node.js (version 14.14+ and 16.0+), install with [npm][]:\n\n```sh\nnpm install hast-util-from-parse5\n```\n\nIn Deno with [`esm.sh`][esmsh]:\n\n```js\nimport {fromParse5} from \"https://esm.sh/hast-util-from-parse5@7\"\n```\n\nIn browsers with [`esm.sh`][esmsh]:\n\n```html\n<script type=\"module\">\n  import {fromParse5} from \"https://esm.sh/hast-util-from-parse5@7?bundle\"\n</script>\n```\n\n## Use\n\nSay our document `example.html` contains:\n\n```html\n<!doctype html><title>Hello!</title><h1 id=\"world\">World!<!--after-->\n```\n\nâ€¦and our module `example.js` looks as follows:\n\n```js\nimport {parse} from 'parse5'\nimport {read} from 'to-vfile'\nimport {inspect} from 'unist-util-inspect'\nimport {fromParse5} from 'hast-util-from-parse5'\n\nconst file = await read('example.html')\nconst p5ast = parse(String(file), {sourceCodeLocationInfo: true})\nconst hast = fromParse5(p5ast, file)\n\nconsole.log(inspect(hast))\n```\n\nâ€¦now running `node example.js` yields:\n\n```text\nroot[2] (1:1-2:1, 0-70)\nâ”‚ data: {\"quirksMode\":false}\nâ”œâ”€0 doctype<html> (1:1-1:16, 0-15)\nâ”‚     public: null\nâ”‚     system: null\nâ””â”€1 element<html>[2]\n    â”‚ properties: {}\n    â”œâ”€0 element<head>[1]\n    â”‚   â”‚ properties: {}\n    â”‚   â””â”€0 element<title>[1] (1:16-1:37, 15-36)\n    â”‚       â”‚ properties: {}\n    â”‚       â””â”€0 text \"Hello!\" (1:23-1:29, 22-28)\n    â””â”€1 element<body>[1]\n        â”‚ properties: {}\n        â””â”€0 element<h1>[3] (1:37-2:1, 36-70)\n            â”‚ properties: {\"id\":\"world\"}\n            â”œâ”€0 text \"World!\" (1:52-1:58, 51-57)\n            â”œâ”€1 comment \"after\" (1:58-1:70, 57-69)\n            â””â”€2 text \"\\n\" (1:70-2:1, 69-70)\n```\n\n## API\n\nThis package exports the identifier [`fromParse5`][fromparse5].\nThere is no default export.\n\n### `fromParse5(tree[, file|options])`\n\nTransform a `parse5` AST to hast.\n\n###### Parameters\n\n*   `tree` ([`Parse5Node`][parse5-node])\n    â€” `parse5` tree to transform\n*   `file` ([`VFile`][vfile], optional)\n    â€” corresponding file (treated as `{file: file}`)\n*   `options` ([`Options`][options], optional)\n    â€” configuration\n\n###### Returns\n\nhast tree ([`HastNode`][hast-node]).\n\n### `Options`\n\nConfiguration (TypeScript type).\n\n##### Fields\n\n###### `space`\n\nWhich space the document is in ([`Space`][space], default: `'html'`).\n\nWhen an `<svg>` element is found in the HTML space, this package already\nautomatically switches to and from the SVG space when entering and exiting\nit.\n\n###### `file`\n\nFile used to add positional info to nodes ([`VFile`][vfile], optional).\n\nIf given, the file should represent the original HTML source.\n\n###### `verbose`\n\nWhether to add extra positional info about starting tags, closing tags,\nand attributes to elements (`boolean`, default: `false`).\n\n> ðŸ‘‰ **Note**: only used when `file` is given.\n\nFor the following HTML:\n\n```html\n<img src=\"http://example.com/fav.ico\" alt=\"foo\" title=\"bar\">\n```\n\nThe verbose info would looks as follows:\n\n```js\n{\n  type: 'element',\n  tagName: 'img',\n  properties: {src: 'http://example.com/fav.ico', alt: 'foo', title: 'bar'},\n  children: [],\n  data: {\n    position: {\n      opening: {\n        start: {line: 1, column: 1, offset: 0},\n        end: {line: 1, column: 61, offset: 60}\n      },\n      closing: null,\n      properties: {\n        src: {\n          start: {line: 1, column: 6, offset: 5},\n          end: {line: 1, column: 38, offset: 37}\n        },\n        alt: {\n          start: {line: 1, column: 39, offset: 38},\n          end: {line: 1, column: 48, offset: 47}\n        },\n        title: {\n          start: {line: 1, column: 49, offset: 48},\n          end: {line: 1, column: 60, offset: 59}\n        }\n      }\n    }\n  },\n  position: {\n    start: {line: 1, column: 1, offset: 0},\n    end: {line: 1, column: 61, offset: 60}\n  }\n}\n```\n\n### `Space`\n\nNamespace (TypeScript type).\n\n###### Type\n\n```ts\ntype Space = 'html' | 'svg'\n```\n\n## Types\n\nThis package is fully typed with [TypeScript][].\nIt exports the additional types [`Options`][options] and [`Space`][space].\n\n## Compatibility\n\nProjects maintained by the unified collective are compatible with all maintained\nversions of Node.js.\nAs of now, that is Node.js 12.20+, 14.14+, 16.0+, and 18.0+.\nOur projects sometimes work with older versions, but this is not guaranteed.\n\n## Security\n\nUse of `hast-util-from-parse5` can open you up to a\n[cross-site scripting (XSS)][xss] attack if Parse5â€™s AST is unsafe.\n\n## Related\n\n*   [`hast-util-to-parse5`](https://github.com/syntax-tree/hast-util-to-parse5)\n    â€” transform hast to Parse5â€™s AST\n*   [`hast-util-to-nlcst`](https://github.com/syntax-tree/hast-util-to-nlcst)\n    â€” transform hast to nlcst\n*   [`hast-util-to-mdast`](https://github.com/syntax-tree/hast-util-to-mdast)\n    â€” transform hast to mdast\n*   [`hast-util-to-xast`](https://github.com/syntax-tree/hast-util-to-xast)\n    â€” transform hast to xast\n*   [`mdast-util-to-hast`](https://github.com/syntax-tree/mdast-util-to-hast)\n    â€” transform mdast to hast\n*   [`mdast-util-to-nlcst`](https://github.com/syntax-tree/mdast-util-to-nlcst)\n    â€” transform mdast to nlcst\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`syntax-tree/.github`][health] for\nways to get started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] Â© [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/syntax-tree/hast-util-from-parse5/workflows/main/badge.svg\n\n[build]: https://github.com/syntax-tree/hast-util-from-parse5/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/hast-util-from-parse5.svg\n\n[coverage]: https://codecov.io/github/syntax-tree/hast-util-from-parse5\n\n[downloads-badge]: https://img.shields.io/npm/dm/hast-util-from-parse5.svg\n\n[downloads]: https://www.npmjs.com/package/hast-util-from-parse5\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/hast-util-from-parse5.svg\n\n[size]: https://bundlephobia.com/result?p=hast-util-from-parse5\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/syntax-tree/unist/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[esm]: https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c\n\n[esmsh]: https://esm.sh\n\n[typescript]: https://www.typescriptlang.org\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[health]: https://github.com/syntax-tree/.github\n\n[contributing]: https://github.com/syntax-tree/.github/blob/main/contributing.md\n\n[support]: https://github.com/syntax-tree/.github/blob/main/support.md\n\n[coc]: https://github.com/syntax-tree/.github/blob/main/code-of-conduct.md\n\n[xss]: https://en.wikipedia.org/wiki/Cross-site_scripting\n\n[parse5]: https://github.com/inikulin/parse5\n\n[parse5-node]: https://github.com/inikulin/parse5/blob/master/packages/parse5/lib/tree-adapters/default.ts\n\n[vfile]: https://github.com/vfile/vfile\n\n[hast-util-to-parse5]: https://github.com/syntax-tree/hast-util-to-parse5\n\n[hast]: https://github.com/syntax-tree/hast\n\n[hast-util-from-html]: https://github.com/syntax-tree/hast-util-from-html\n\n[hast-node]: https://github.com/syntax-tree/hast#nodes\n\n[fromparse5]: #fromparse5tree-fileoptions\n\n[options]: #options\n\n[space]: #space-1\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hast-util-from-parse5/-/hast-util-from-parse5-7.1.2.tgz#aecfef73e3ceafdfa4550716443e4eb7b02e22b0",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hast-util-from-parse5/-/hast-util-from-parse5-7.1.2.tgz",
    "hash": "aecfef73e3ceafdfa4550716443e4eb7b02e22b0",
    "integrity": "sha512-Nz7FfPBuljzsN3tCQ4kCBKqdNhQE2l0Tn+X1ubgKBPRoiDIu1mL08Cfw4k7q71+Duyaw7DXDN+VTAp4Vh3oCOw==",
    "registry": "npm",
    "packageName": "hast-util-from-parse5",
    "cacheIntegrity": "sha512-Nz7FfPBuljzsN3tCQ4kCBKqdNhQE2l0Tn+X1ubgKBPRoiDIu1mL08Cfw4k7q71+Duyaw7DXDN+VTAp4Vh3oCOw== sha1-rs/vc+POr9+kVQcWRD5Ot7AuIrA="
  },
  "registry": "npm",
  "hash": "aecfef73e3ceafdfa4550716443e4eb7b02e22b0"
}