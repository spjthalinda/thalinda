declare const _default: {
    'attr-duplication': import("packages/@markuplint/ml-core/lib").RuleSeed<import("packages/@markuplint/ml-config/src").RuleConfigValue, null>;
    'attr-equal-space-after': import("packages/@markuplint/ml-core/lib").RuleSeed<"always" | "never" | "always-single-line" | "never-single-line", null>;
    'attr-equal-space-before': import("packages/@markuplint/ml-core/lib").RuleSeed<"always" | "never" | "always-single-line" | "never-single-line", null>;
    'attr-spacing': import("packages/@markuplint/ml-core/lib").RuleSeed<boolean, import("./attr-spacing").AttrSpasingOptions>;
    'attr-value-quotes': import("packages/@markuplint/ml-core/lib").RuleSeed<import("./attr-value-quotes").Type, null>;
    'case-sensitive-attr-name': import("packages/@markuplint/ml-core/lib").RuleSeed<import("./case-sensitive-attr-name").Value | import("./case-sensitive-attr-name").Value_v1, null>;
    'case-sensitive-tag-name': import("packages/@markuplint/ml-core/lib").RuleSeed<import("./case-sensitive-tag-name").Value, null>;
    'character-reference': import("packages/@markuplint/ml-core/lib").RuleSeed<import("packages/@markuplint/ml-config/src").RuleConfigValue, null>;
    'class-naming': import("packages/@markuplint/ml-core/lib").RuleSeed<import("./class-naming").Value, null>;
    'deprecated-attr': import("packages/@markuplint/ml-core/lib").RuleSeed<import("packages/@markuplint/ml-config/src").RuleConfigValue, null>;
    'deprecated-element': import("packages/@markuplint/ml-core/lib").RuleSeed<import("packages/@markuplint/ml-config/src").RuleConfigValue, null>;
    'disallowed-element': import("packages/@markuplint/ml-core/lib").RuleSeed<string[], null>;
    doctype: import("packages/@markuplint/ml-core/lib").RuleSeed<"always", {
        denyObsolateType: boolean;
    }>;
    'end-tag': import("packages/@markuplint/ml-core/lib").RuleSeed<boolean, null>;
    'id-duplication': import("packages/@markuplint/ml-core/lib").RuleSeed<import("packages/@markuplint/ml-config/src").RuleConfigValue, null>;
    indentation: import("packages/@markuplint/ml-core/lib").RuleSeed<import("./indentation").Value, import("./indentation").IndentationOptions>;
    'ineffective-attr': import("packages/@markuplint/ml-core/lib").RuleSeed<import("packages/@markuplint/ml-config/src").RuleConfigValue, null>;
    'invalid-attr': import("packages/@markuplint/ml-core/lib").RuleSeed<boolean, {
        attrs?: Record<string, {
            enum: [string, ...string[]];
        } | {
            pattern: string;
        } | {
            type: import("packages/@markuplint/ml-spec/lib").AttributeType;
        } | {
            disallowed: true;
        }> | undefined;
        ignoreAttrNamePrefix?: string | string[] | undefined;
    }>;
    'landmark-roles': import("packages/@markuplint/ml-core/lib").RuleSeed<boolean, {
        ignoreRoles?: (("banner" | "main" | "complementary" | "contentinfo") | "form" | "navigation" | "region")[] | undefined;
        labelEachArea?: boolean | undefined;
    }>;
    'no-boolean-attr-value': import("packages/@markuplint/ml-core/lib").RuleSeed<import("packages/@markuplint/ml-config/src").RuleConfigValue, null>;
    'no-default-value': import("packages/@markuplint/ml-core/lib").RuleSeed<import("packages/@markuplint/ml-config/src").RuleConfigValue, null>;
    'no-hard-code-id': import("packages/@markuplint/ml-core/lib").RuleSeed<import("packages/@markuplint/ml-config/src").RuleConfigValue, null>;
    'no-refer-to-non-existent-id': import("packages/@markuplint/ml-core/lib").RuleSeed<import("packages/@markuplint/ml-config/src").RuleConfigValue, null>;
    'no-use-event-handler-attr': import("packages/@markuplint/ml-core/lib").RuleSeed<boolean, {
        ignore?: string | string[] | undefined;
    }>;
    'permitted-contents': import("packages/@markuplint/ml-core/lib").RuleSeed<import("packages/@markuplint/ml-spec/lib").PermittedStructuresSchema[], {
        ignoreHasMutableChildren: boolean;
    }>;
    'require-accessible-name': import("packages/@markuplint/ml-core/lib").RuleSeed<boolean, null>;
    'required-attr': import("packages/@markuplint/ml-core/lib").RuleSeed<string | (string | {
        name: string;
        value: string | string[];
    })[], null>;
    'required-element': import("packages/@markuplint/ml-core/lib").RuleSeed<string[], {
        ignoreHasMutableContents?: boolean | undefined;
    }>;
    'required-h1': import("packages/@markuplint/ml-core/lib").RuleSeed<boolean, import("./required-h1").Options>;
    'use-list': import("packages/@markuplint/ml-core/lib").RuleSeed<string[], {
        spaceNeededBullets?: string[] | undefined;
    }>;
    'wai-aria': import("packages/@markuplint/ml-core/lib").RuleSeed<boolean, {
        checkingValue?: boolean | undefined;
        checkingDeprecatedProps?: boolean | undefined;
        permittedAriaRoles?: boolean | undefined;
        disallowSetImplicitRole?: boolean | undefined;
        disallowSetImplicitProps?: boolean | undefined;
        disallowDefaultValue?: boolean | undefined;
    }>;
};
export default _default;
