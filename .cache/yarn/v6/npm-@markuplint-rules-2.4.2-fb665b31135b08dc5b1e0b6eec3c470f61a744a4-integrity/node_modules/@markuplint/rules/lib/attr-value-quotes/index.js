"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ml_core_1 = require("@markuplint/ml-core");
const quoteList = {
    double: '"',
    single: "'",
};
exports.default = (0, ml_core_1.createRule)({
    defaultServerity: 'warning',
    defaultValue: 'double',
    async verify(context) {
        await context.document.walkOn('Element', node => {
            const message = context.translate('{0} is must {1} on {2}', 'Attribute value', 'quote', `${node.rule.value} quotation mark`);
            for (const attr of node.attributes) {
                if (attr.attrType === 'ps-attr' || attr.isDynamicValue || attr.isDirective || attr.equal.raw === '') {
                    continue;
                }
                const quote = attr.startQuote.raw;
                if (quote !== quoteList[node.rule.value]) {
                    context.report({
                        scope: node,
                        message,
                        line: attr.name.startLine,
                        col: attr.name.startCol,
                        raw: attr.raw.trim(),
                    });
                }
            }
        });
    },
    async fix(context) {
        await context.document.walkOn('Element', node => {
            for (const attr of node.attributes) {
                const quote = quoteList[node.rule.value];
                if (attr.attrType === 'html-attr' && quote && attr.startQuote && attr.startQuote.raw !== quote) {
                    attr.startQuote.fix(quote);
                    attr.endQuote.fix(quote);
                }
            }
        });
    },
});
