"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ml_core_1 = require("@markuplint/ml-core");
const helpers_1 = require("../helpers");
exports.default = (0, ml_core_1.createRule)({
    defaultServerity: 'warning',
    defaultValue: null,
    async verify({ document, report, t }) {
        await document.walkOn('Element', node => {
            if (!node.rule.value) {
                return;
            }
            const classPatterns = Array.isArray(node.rule.value) ? node.rule.value : [node.rule.value];
            const attrs = node.getAttributeToken('class');
            for (const attr of attrs) {
                if (attr.attrType === 'html-attr' && attr.isDynamicValue) {
                    continue;
                }
                const classAttr = attr.getValue();
                const classList = classAttr.potential
                    .split(/\s+/g)
                    .map(c => c.trim())
                    .filter(c => c);
                for (const className of classList) {
                    if (!classPatterns.some(pattern => (0, helpers_1.match)(className, pattern))) {
                        report({
                            scope: node,
                            message: t('{0} is unmatched with the below patterns: {1}', t('the "{0*}" {1}', className, 'class name'), `"${classPatterns.join('", "')}"`),
                            line: classAttr.line,
                            col: classAttr.col,
                            raw: classAttr.raw,
                        });
                    }
                }
            }
        });
    },
});
