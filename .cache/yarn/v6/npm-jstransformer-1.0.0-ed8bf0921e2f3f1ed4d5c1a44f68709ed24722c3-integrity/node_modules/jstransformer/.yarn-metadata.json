{
  "manifest": {
    "name": "jstransformer",
    "version": "1.0.0",
    "description": "Normalize the API of any jstransformer",
    "keywords": [
      "jstransformer"
    ],
    "dependencies": {
      "is-promise": "^2.0.0",
      "promise": "^7.0.1"
    },
    "devDependencies": {
      "coveralls": "^2.11.2",
      "istanbul": "^0.4.0",
      "testit": "^2.0.2"
    },
    "scripts": {
      "test": "node test",
      "coverage": "istanbul cover test",
      "coveralls": "npm run coverage && cat ./coverage/lcov.info | coveralls"
    },
    "files": [
      "index.js"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/jstransformers/jstransformer.git"
    },
    "author": {
      "name": "ForbesLindesay"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-jstransformer-1.0.0-ed8bf0921e2f3f1ed4d5c1a44f68709ed24722c3-integrity/node_modules/jstransformer/package.json",
    "readmeFilename": "README.md",
    "readme": "<p align=\"center\"><img src=\"https://cdn.rawgit.com/jstransformers/jstransformer/2bb6dc6c410e8683a17a4af5f1b73bcbee95aada/logo.svg\" width=\"300px\" height=\"299px\" /></p>\n<h1 align=\"center\">JSTransformer</h1>\n<p align=\"center\">Normalize the API of any jstransformer</p>\n\n<p align=\"center\"><a href=\"https://travis-ci.org/jstransformers/jstransformer\"><img src=\"https://img.shields.io/travis/jstransformers/jstransformer/master.svg\" alt=\"Build Status\"></a>\n<a href=\"https://david-dm.org/jstransformers/jstransformer\"><img src=\"https://img.shields.io/david/jstransformers/jstransformer.svg\" alt=\"Dependency Status\"></a>\n<a href=\"https://david-dm.org/jstransformers/jstransformer#info=devDependencies\"><img src=\"https://img.shields.io/david/dev/jstransformers/jstransformer.svg\" alt=\"Developers' Dependency Status\"></a>\n<a href=\"https://coveralls.io/r/jstransformers/jstransformer?branch=master\"><img src=\"https://img.shields.io/coveralls/jstransformers/jstransformer/master.svg\" alt=\"Coverage Status\"></a>\n<a href=\"https://www.npmjs.org/package/jstransformer\"><img src=\"https://img.shields.io/npm/v/jstransformer.svg\" alt=\"NPM version\"></a></p>\n\n## Installation\n\n    npm install jstransformer\n\n## Usage\n\n```js\nvar transformer = require('jstransformer');\nvar marked = transformer(require('jstransformer-marked'));\n\nvar options = {};\nvar res = marked.render('Some **markdown**', options);\n// => {body: 'Some <strong>markdown</strong>', dependencies: []}\n```\n\nThis gives the same API regardless of the jstransformer passed in.\n\n## API\n\nA transformer, once normalised using this module, will implement the following methods.  Note that if the underlying transformer cannot be used to implement the functionality, it may ultimately just throw an error.\n\n### Returned object from `.render*`\n\n```js\n{body: String, dependencies: Array.<String>}\n```\n\n - `body` represents the result as a string\n - `dependencies` is an array of files that were read in as part of the render process (or an empty array if there were no dependencies)\n\n### `.render`\n\n```js\ntransformer.render(str, options, locals);\n=> {body: String, dependencies: Array.<String>}\n```\n\n_requires the underlying transform to implement `.render` or `.compile`_\n\nTransform a string and return an object.\n\n### `.renderAsync`\n\n```js\ntransformer.renderAsync(str[, options], locals, callback);\n```\n\n```js\ntransformer.renderAsync(str[, options], locals);\n=> Promise({body: String, dependencies: Array.<String>})\n```\n\n_requires the underlying transform to implement `.renderAsync` or `.render`_\n\nTransform a string asynchronously. If a callback is provided, it is called as `callback(err, data)`, otherwise a Promise is returned.\n\n### `.renderFile`\n\n```js\ntransformer.renderFile(filename, options, locals)\n=> {body: String, dependencies: Array.<String>}\n```\n\n_requires the underlying transform to implement `.renderFile`, `.render`, `.compileFile`, or `.compile`_\n\nTransform a file and return an object.\n\n### `.renderFileAsync`\n\n```js\ntransformer.renderFileAsync(filename[, options], locals, callback);\n```\n\n```js\ntransformer.renderFileAsync(filename[, options], locals);\n=> Promise({body: String, dependencies: Array.<String>})\n```\n\n_requires the underlying transform to implement `.renderFileAsync`, `.renderFile`, `.renderAsync`, `.render`, `.compileFileAsync`, `.compileFile`, `.compileAsync`, or `.compileFile`_\n\nTransform a file asynchronously. If a callback is provided, it is called as `callback(err, data)`, otherwise a Promise is returned.\n\n### `.inputFormats`\n\n```js\nvar formats = transformer.inputFormats;\n=> ['md', 'markdown']\n```\n\nReturns an array of strings representing potential input formats for the transform. If not provided directly by the transform, results in an array containing the name of the transform.\n\n### `.outputFormat`\n\n```js\nvar md = require('jstransformer')(require('jstransformer-markdown'))\nvar outputFormat = md.outputFormat\n=> 'html'\n```\n\nReturns a string representing the default output format the transform would be expected to return when calling `.render()`.\n\n## License\n\nMIT\n",
    "licenseText": "# The MIT License (MIT)\n\nCopyright (c) 2015 Forbes Lindesay\n\n> Permission is hereby granted, free of charge, to any person obtaining a copy\n> of this software and associated documentation files (the \"Software\"), to deal\n> in the Software without restriction, including without limitation the rights\n> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n> copies of the Software, and to permit persons to whom the Software is\n> furnished to do so, subject to the following conditions:\n>\n> The above copyright notice and this permission notice shall be included in\n> all copies or substantial portions of the Software.\n>\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n> SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/jstransformer/-/jstransformer-1.0.0.tgz#ed8bf0921e2f3f1ed4d5c1a44f68709ed24722c3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/jstransformer/-/jstransformer-1.0.0.tgz",
    "hash": "ed8bf0921e2f3f1ed4d5c1a44f68709ed24722c3",
    "integrity": "sha1-7Yvwkh4vPx7U1cGkT2hwntJHIsM=",
    "registry": "npm",
    "packageName": "jstransformer",
    "cacheIntegrity": "sha512-C9YK3Rf8q6VAPDCCU9fnqo3mAfOH6vUGnMcP4AQAYIEpWtfGLpwOTmZ+igtdK5y+VvI2n3CyYSzy4Qh34eq24A== sha1-7Yvwkh4vPx7U1cGkT2hwntJHIsM="
  },
  "registry": "npm",
  "hash": "ed8bf0921e2f3f1ed4d5c1a44f68709ed24722c3"
}