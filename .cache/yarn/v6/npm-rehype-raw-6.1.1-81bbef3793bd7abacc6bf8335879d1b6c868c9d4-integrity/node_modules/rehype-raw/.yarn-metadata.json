{
  "manifest": {
    "name": "rehype-raw",
    "version": "6.1.1",
    "description": "rehype plugin to reparse the tree (and raw nodes)",
    "license": "MIT",
    "keywords": [
      "unified",
      "rehype",
      "rehype-plugin",
      "plugin",
      "raw",
      "html"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/rehypejs/rehype-raw.git"
    },
    "bugs": {
      "url": "https://github.com/rehypejs/rehype-raw/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "@types/hast": "^2.0.0",
      "hast-util-raw": "^7.2.0",
      "unified": "^10.0.0"
    },
    "devDependencies": {
      "@types/tape": "^4.0.0",
      "c8": "^7.0.0",
      "prettier": "^2.0.0",
      "rehype-stringify": "^9.0.0",
      "remark-cli": "^10.0.0",
      "remark-parse": "^10.0.0",
      "remark-preset-wooorm": "^9.0.0",
      "remark-rehype": "^10.0.0",
      "rimraf": "^3.0.0",
      "tape": "^5.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "unist-util-visit": "^4.0.0",
      "xo": "^0.47.0"
    },
    "scripts": {
      "build": "rimraf \"*.d.ts\" && tsc && type-coverage",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node --conditions development test.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov npm run test-api",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-rehype-raw-6.1.1-81bbef3793bd7abacc6bf8335879d1b6c868c9d4-integrity/node_modules/rehype-raw/package.json",
    "readmeFilename": "readme.md",
    "readme": "# rehype-raw\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n**[rehype][]** plugin to parse the tree (and raw nodes) again, keeping\npositional info okay.\n\n## Contents\n\n*   [What is this?](#what-is-this)\n*   [When should I use this?](#when-should-i-use-this)\n*   [Install](#install)\n*   [Use](#use)\n*   [API](#api)\n    *   [`unified().use(rehypeRaw[, options])`](#unifieduserehyperaw-options)\n*   [Types](#types)\n*   [Compatibility](#compatibility)\n*   [Security](#security)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## What is this?\n\nThis package is a [unified][] ([rehype][]) plugin to parse a document again.\nTo understand how it works, requires knowledge of ASTs (specifically, [hast][]).\nThis plugin passes each node and embedded raw HTML through an HTML parser\n([`parse5`][parse5]), to recreate a tree exactly as how a browser would parse\nit, while keeping the original data and positional info intact.\n\n**unified** is a project that transforms content with abstract syntax trees\n(ASTs).\n**rehype** adds support for HTML to unified.\n**hast** is the HTML AST that rehype uses.\nThis is a rehype plugin that parses the tree again.\n\n## When should I use this?\n\nThis plugin is particularly useful when coming from markdown and wanting to\nsupport HTML embedded inside that markdown (which requires passing\n`allowDangerousHtml: true` to `remark-rehype`).\nMarkdown dictates how, say, a list item or emphasis can be parsed.\nWe can use that to turn the markdown syntax tree into an HTML syntax tree.\nBut markdown also dictates that things that look like HTML, are passed through\nuntouched, even when it just looks like XML but doesn‚Äôt really make sense, so we\ncan‚Äôt normally use these strings of ‚ÄúHTML‚Äù to create an HTML syntax tree.\nThis plugin can.\nIt can be used to take those strings of HTML and include them into the syntax\ntree as actual nodes.\n\nIf your final result is HTML and you trust content, then ‚Äústrings‚Äù are fine\n(you can pass `allowDangerousHtml: true` to `rehype-stringify`, which passes\nHTML through untouched).\nBut there are two main cases where a proper syntax tree is preferred:\n\n*   rehype plugins need a proper syntax tree as they operate on actual nodes to\n    inspect or transform things, they can‚Äôt operate on strings of HTML\n*   other output formats (React, MDX, etc) need actual nodes and can‚Äôt handle\n    strings of HTML\n\nThis plugin is built on [`hast-util-raw`][hast-util-raw], which does the work on\nsyntax trees.\nrehype focusses on making it easier to transform content by abstracting such\ninternals away.\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c).\nIn Node.js (version 12.20+, 14.14+, or 16.0+), install with [npm][]:\n\n```sh\nnpm install rehype-raw\n```\n\nIn Deno with [Skypack][]:\n\n```js\nimport rehypeRaw from 'https://cdn.skypack.dev/rehype-raw@6?dts'\n```\n\nIn browsers with [Skypack][]:\n\n```html\n<script type=\"module\">\n  import rehypeRaw from 'https://cdn.skypack.dev/rehype-raw@6?min'\n</script>\n```\n\n## Use\n\nSay we have the following markdown file `example.md`:\n\n```markdown\n<div class=\"note\">\n\nA mix of *markdown* and <em>HTML</em>.\n\n</div>\n```\n\nAnd our module `example.js` looks as follows:\n\n```js\nimport {read} from 'to-vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport rehypeRaw from 'rehype-raw'\nimport rehypeDocument from 'rehype-document'\nimport rehypeFormat from 'rehype-format'\nimport rehypeStringify from 'rehype-stringify'\n\nmain()\n\nasync function main() {\n  const file = await unified()\n    .use(remarkParse)\n    .use(remarkRehype, {allowDangerousHtml: true})\n    .use(rehypeRaw)\n    .use(rehypeDocument, {title: 'üôå'})\n    .use(rehypeFormat)\n    .use(rehypeStringify)\n    .process(await read('example.md'))\n\n  console.log(String(file))\n}\n```\n\nNow running `node example.js` yields:\n\n```html\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>üôå</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <div class=\"note\">\n      <p>A mix of <em>markdown</em> and <em>HTML</em>.</p>\n    </div>\n  </body>\n</html>\n```\n\n## API\n\nThis package exports no identifiers.\nThe default export is `rehypeRaw`.\n\n### `unified().use(rehypeRaw[, options])`\n\nParse the tree (and raw nodes) again, keeping positional info okay.\n\n##### `options`\n\nConfiguration (optional).\n\n###### `options.passThrough`\n\nThis option is a bit advanced as it requires knowledge of ASTs, so we defer\nto the documentation available in [`hast-util-raw`][hast-util-raw].\n\n## Types\n\nThis package is fully typed with [TypeScript][].\nIt exports an `Options` type, which specifies the interface of the accepted\noptions.\n\n## Compatibility\n\nProjects maintained by the unified collective are compatible with all maintained\nversions of Node.js.\nAs of now, that is Node.js 12.20+, 14.14+, and 16.0+.\nOur projects sometimes work with older versions, but this is not guaranteed.\n\nThis plugin works with `rehype-parse` version 1+, `rehype-stringify` version 1+,\n`rehype` version 1+, and `unified` version 4+.\n\n## Security\n\nThe `allowDangerousHtml` option in `remark-rehype` is dangerous, so defer\nto that plugin on how to make it safe.\nOtherwise, this plugin is safe.\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`rehypejs/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] ¬© [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/rehypejs/rehype-raw/workflows/main/badge.svg\n\n[build]: https://github.com/rehypejs/rehype-raw/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/rehypejs/rehype-raw.svg\n\n[coverage]: https://codecov.io/github/rehypejs/rehype-raw\n\n[downloads-badge]: https://img.shields.io/npm/dm/rehype-raw.svg\n\n[downloads]: https://www.npmjs.com/package/rehype-raw\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/rehype-raw.svg\n\n[size]: https://bundlephobia.com/result?p=rehype-raw\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/rehypejs/rehype/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[skypack]: https://www.skypack.dev\n\n[health]: https://github.com/rehypejs/.github\n\n[contributing]: https://github.com/rehypejs/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/rehypejs/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/rehypejs/.github/blob/HEAD/code-of-conduct.md\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[typescript]: https://www.typescriptlang.org\n\n[unified]: https://github.com/unifiedjs/unified\n\n[rehype]: https://github.com/rehypejs/rehype\n\n[hast]: https://github.com/syntax-tree/hast\n\n[hast-util-raw]: https://github.com/syntax-tree/hast-util-raw\n\n[parse5]: https://github.com/inikulin/parse5\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/rehype-raw/-/rehype-raw-6.1.1.tgz#81bbef3793bd7abacc6bf8335879d1b6c868c9d4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/rehype-raw/-/rehype-raw-6.1.1.tgz",
    "hash": "81bbef3793bd7abacc6bf8335879d1b6c868c9d4",
    "integrity": "sha512-d6AKtisSRtDRX4aSPsJGTfnzrX2ZkHQLE5kiUuGOeEoLpbEulFF4hj0mLPbsa+7vmguDKOVVEQdHKDSwoaIDsQ==",
    "registry": "npm",
    "packageName": "rehype-raw",
    "cacheIntegrity": "sha512-d6AKtisSRtDRX4aSPsJGTfnzrX2ZkHQLE5kiUuGOeEoLpbEulFF4hj0mLPbsa+7vmguDKOVVEQdHKDSwoaIDsQ== sha1-gbvvN5O9errMa/gzWHnRtshoydQ="
  },
  "registry": "npm",
  "hash": "81bbef3793bd7abacc6bf8335879d1b6c868c9d4"
}