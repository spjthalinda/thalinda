{
  "manifest": {
    "name": "babel-plugin-transform-async-to-promises",
    "version": "0.8.18",
    "description": "Transform async/await to promise chains",
    "main": "async-to-promises.js",
    "scripts": {
      "prepare": "tsc && node ./generate-helpers-string.js",
      "format": "prettier --write async-to-promises.ts async-to-promises.test.js",
      "test": "jest && prettier -c async-to-promises.ts async-to-promises.test.js",
      "test:coverage": "jest --coverage"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/rpetrich/babel-plugin-transform-async-to-promises.git"
    },
    "keywords": [
      "async",
      "await",
      "optimization",
      "babel",
      "compile",
      "transform",
      "minify"
    ],
    "author": {
      "name": "Ryan Petrich",
      "email": "rpetrich@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/rpetrich/babel-plugin-transform-async-to-promises/issues"
    },
    "homepage": "https://github.com/rpetrich/babel-plugin-transform-async-to-promises#readme",
    "devDependencies": {
      "@babel/core": "^7.16.5",
      "@babel/plugin-external-helpers": "^7.16.5",
      "@babel/plugin-proposal-class-properties": "^7.16.5",
      "@babel/plugin-transform-classes": "^7.16.5",
      "@babel/plugin-transform-modules-commonjs": "^7.16.5",
      "@babel/plugin-transform-modules-systemjs": "^7.16.5",
      "@babel/plugin-transform-parameters": "^7.16.5",
      "@babel/preset-env": "^7.16.5",
      "@babel/traverse": "^7.16.5",
      "@babel/types": "^7.16.0",
      "@types/babel-traverse": "^6.25.7",
      "@types/babel-types": "^7.0.11",
      "@types/node": "^16.11.13",
      "babel-core": "^6.26.3",
      "babel-plugin-external-helpers": "^6.22.0",
      "babel-plugin-transform-class-properties": "^6.24.1",
      "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
      "babel-plugin-transform-es2015-parameters": "^6.24.1",
      "babel-preset-env": "^1.7.0",
      "babel-traverse": "^6.26.0",
      "jest": "^27.4.5",
      "prettier": "2.5.1",
      "typescript": "^4.5.4"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-babel-plugin-transform-async-to-promises-0.8.18-f4dc5980b8afa0fc9c784b8d931afde913413e39-integrity/node_modules/babel-plugin-transform-async-to-promises/package.json",
    "readmeFilename": "README.md",
    "readme": "babel-plugin-transform-async-to-promises\n========================================\n\nBabel plugin to transform `async` functions containing `await` expressions to the equivalent chain of `Promise` calls with use of minimal helper functions.\n\n### Input:\n\n```javascript\nasync function fetchAsObjectURL(url) {\n    const response = await fetch(url);\n    const blob = await response.blob();\n    return URL.createObjectURL(blob);\n}\n```\n\n### Output:\n\n```javascript\nconst fetchAsObjectURL = _async(function(url) {\n\treturn _await(fetch(url), function(response) {\n\t\treturn _await(response.blob(), URL.createObjectURL);\n\t});\n});\n```\n\n### Output with `hoist` enabled:\n\n```javascript\nfunction _response$blob(response) {\n\treturn _await(response.blob(), URL.createObjectURL);\n}\nconst fetchAsObjectURL = _async(function(url) {\n\treturn _await(fetch(url), _response$blob);\n});\n```\n\n### Output with `inlineHelpers` enabled:\n\n```javascript\nconst fetchAsObjectURL = function(url) {\n\ttry {\n\t\treturn Promise.resolve(fetch(url)).then(function(response) {\n\t\t\treturn Promise.resolve(response.blob()).then(URL.createObjectURL);\n\t\t});\n\t} catch(e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n```\n\n### Output with `externalHelpers` enabled:\n\nIn the normal case, helpers are added to the top of the file for the `_async` and `_await` functions (as well as others). This can cause bloat in a codebase due to duplication of helper code in every file. To avoid this, enable `externalHelpers` and those will be imported instead:\n\n```javascript\nimport { _async } from \"babel-plugin-transform-async-to-promises/helpers\";\nimport { _await } from \"babel-plugin-transform-async-to-promises/helpers\";\n\nconst fetchAsObjectURL = _async(function(url) {\n\treturn _await(fetch(url), function(response) {\n\t\treturn _await(response.blob(), URL.createObjectURL);\n\t});\n});\n\nexport default fetchAsObjectURL;\n```\n\n## JavaScript Language Features\n\n### Full Support\n- `async`/`await`\n- `for`/`while`/`do` loops (including loops that would exhaust stack if dispatched recursively)\n- `switch` statements (including fallthrough and `default` cases)\n- conditional expressions\n- logical expressions\n- `try`/`catch`\n- `break`/`continue` statements (on both loops and labeled statements)\n- `throw` expressions\n- Function hoisting\n- Variable hoisting\n- Arrow functions\n- Methods\n- `arguments`\n- `this`\n- Proper member dereference order of operations\n- Standards-compliant event loop scheduling\n\n### Partial Support\n- `Function.length`: `async` functions will often return a length of 0 (when the `_async` wrapper is used)\n- Top level await support is experimental with compatible module bundler. Set `topLevelAwait` option to `return` when using SystemJS.\n\n### No support\n- `eval`: impossible to support without deep hooks into the runtime\n- Async generator functions: not implemented or planned\n- `Function.name`: rewrite pass removes function name instrumentation\n- `new AsyncFunction(...)`: impossible to support without shipping babel and the plugin in the output\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017-2019 Ryan Petrich <rpetrich@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/babel-plugin-transform-async-to-promises/-/babel-plugin-transform-async-to-promises-0.8.18.tgz#f4dc5980b8afa0fc9c784b8d931afde913413e39",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/babel-plugin-transform-async-to-promises/-/babel-plugin-transform-async-to-promises-0.8.18.tgz",
    "hash": "f4dc5980b8afa0fc9c784b8d931afde913413e39",
    "integrity": "sha512-WpOrF76nUHijnNn10eBGOHZmXQC8JYRME9rOLxStOga7Av2VO53ehVFvVNImMksVtQuL2/7ZNxEgxnx7oo/3Hw==",
    "registry": "npm",
    "packageName": "babel-plugin-transform-async-to-promises",
    "cacheIntegrity": "sha512-WpOrF76nUHijnNn10eBGOHZmXQC8JYRME9rOLxStOga7Av2VO53ehVFvVNImMksVtQuL2/7ZNxEgxnx7oo/3Hw== sha1-9NxZgLivoPyceEuNkxr96RNBPjk="
  },
  "registry": "npm",
  "hash": "f4dc5980b8afa0fc9c784b8d931afde913413e39"
}