{
  "manifest": {
    "name": "globrex",
    "version": "0.1.2",
    "description": "Glob to regular expression with support for extended globs",
    "main": "index.js",
    "author": {
      "name": "Terkel Gjervig"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/terkelg/globrex"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "glob",
      "regex",
      "regexp",
      "parser",
      "glob2regx",
      "compiler"
    ],
    "scripts": {
      "test": "tape test/*.js | tap-spec"
    },
    "devDependencies": {
      "tap-spec": "^4.1.1",
      "tape": "^4.8.0"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-globrex-0.1.2-dd5d9ec826232730cd6793a5e33a9302985e6098-integrity/node_modules/globrex/package.json",
    "readmeFilename": "readme.md",
    "readme": "<div align=\"center\">\n  <img src=\"https://github.com/terkelg/globrex/raw/master/globrex.png\" alt=\"globrex\" width=\"500\" />\n</div>\n\n<h1 align=\"center\">globrex</h1>\n\n<div align=\"center\">\n  <a href=\"https://npmjs.org/package/globrex\">\n    <img src=\"https://img.shields.io/npm/v/globrex.svg\" alt=\"version\" />\n  </a>\n  <a href=\"https://travis-ci.org/terkelg/globrex\">\n    <img src=\"https://img.shields.io/travis/terkelg/globrex.svg\" alt=\"travis\" />\n  </a>\n  <a href=\"https://ci.appveyor.com/project/terkelg/globrex\">\n    <img src=\"https://ci.appveyor.com/api/projects/status/ecbnb3whibj5iqcj?svg=true\" alt=\"appveyor\" />\n  </a>\n  <a href=\"https://npmjs.org/package/globrex\">\n    <img src=\"https://img.shields.io/npm/dm/globrex.svg\" alt=\"downloads\" />\n  </a>\n</div>\n\n<div align=\"center\">Simple but powerful glob to regular expression compiler.</div>\n\n<br />\n\n\n## Install\n\n```\nnpm install globrex --save\n```\n\n\n## Core Features\n\n- 💪 **extended globbing:** transform advance `ExtGlob` features\n- 📦 **simple**: no dependencies\n- 🛣️ **paths**: split paths into multiple `RegExp` segments\n\n\n## Usage\n\n```js\nconst globrex = require('globrex');\n\nconst result = globrex('p*uck')\n// => { regex: /^p.*uck$/, string: '^p.*uck$', segments: [ /^p.*uck$/ ] }\n\nresult.regex.test('pluck'); // true\n```\n\n\n## API\n\n### globrex(glob, options)\n\nType: `function`<br>\nReturns: `Object`\n\nTransform globs intp regular expressions.\nReturns object with the following properties:\n\n\n#### regex\n\nType: `RegExp`\n\nJavaScript `RegExp` instance.\n\n> **Note**: Read more about how to use [RegExp](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp) on MDN.\n\n\n#### path\n\nThis property only exists if the option `filepath` is true.\n\n> **Note:** `filepath` is `false` by default\n\n#### path.segments\n\nType: `Array`\n\nArray of `RegExp` instances seperated by `/`. \nThis can be usable when working with file paths or urls. \n\nExample array could be:\n```js\n[ /^foo$/, /^bar$/, /^([^\\/]*)$/, '^baz\\\\.(md|js|txt)$' ]\n```\n\n\n#### path.regex\n\nType: `RegExp`\n\nJavaScript `RegExp` instance build for testign against paths.\nThe regex have different path seperators depending on host OS.\n\n\n### glob\n\nType: `String`\n\nGlob string to transform.\n\n\n### options.extended\n\nType: `Boolean`<br>\nDefault: `false`\n\nEnable all advanced features from `extglob`.\n\nMatching so called \"extended\" globs pattern like single character matching, matching ranges of characters, group matching, etc.\n\n> **Note**: Interprets `[a-d]` as `[abcd]`. To match a literal `-`, include it as first or last character.\n\n\n### options.globstar\n\nType: `Boolean`<br>\nDefault: `false`\n\nWhen globstar is `false` globs like `'/foo/*'` are transformed to the following\n`'^\\/foo\\/.*$'` which will match any string beginning with `'/foo/'`.\n\nWhen the globstar option is `true`, the same `'/foo/*'` glob is transformed to\n`'^\\/foo\\/[^/]*$'` which will match any string beginning with `'/foo/'` that **does not have** a `'/'` to the right of it. `'/foo/*'` will match: `'/foo/bar'`, `'/foo/bar.txt'` but not `'/foo/bar/baz'` or `'/foo/bar/baz.txt'`.\n\n> **Note**: When globstar is `true`, `'/foo/**'` is equivelant to `'/foo/*'` when globstar is `false`.\n\n\n### options.strict\n\nType: `Boolean`<br>\nDefault: `false`\n\nBe forgiving about mutiple slashes, like `///` and make everything after the first `/` optional. This is how bash glob works.\n\n\n### options.flags\n\nType: `String`<br>\nDefault: `''`\n\nRegExp flags (e.g. `'i'` ) to pass to the RegExp constructor.\n\n\n### options.filepath\n\nType: `Boolean`<br>\nDefault: `false`\n\nParse input strings as it was a file path for special path related features. This feature only makes sense if the input is a POSIX path like `/foo/bar/hello.js` or URLs.\n\nWhen `true` the returned object will have an additional `path` object.\n\n- `segment`: Array containing a `RegExp` object for each path segment.\n- `regex`: OS specific file path `RegExp`. Path seperator used is based on the operating system.\n- `globstar`: Regex string used to test for globstars.\n\n> **Note: Please only use forward-slashes in file path glob expressions**\n> Though windows uses either `/` or `\\` as its path separator, only `/`\n> characters are used by this glob implementation.  You must use\n> forward-slashes **only** in glob expressions. Back-slashes will always\n> be interpreted as escape characters, not path separators.\n\n\n## References\n\nLearn more about advanced globbing here\n- [mywiki.wooledge.org/glob](http://mywiki.wooledge.org/glob)\n- [linuxjournal](http://www.linuxjournal.com/content/bash-extended-globbing)\n\n\n## License\n\nMIT © [Terkel Gjervig](https://terkel.com)\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Terkel Gjervig Nielsen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/globrex/-/globrex-0.1.2.tgz#dd5d9ec826232730cd6793a5e33a9302985e6098",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/globrex/-/globrex-0.1.2.tgz",
    "hash": "dd5d9ec826232730cd6793a5e33a9302985e6098",
    "integrity": "sha512-uHJgbwAMwNFf5mLst7IWLNg14x1CkeqglJb/K3doi4dw6q2IvAAmM/Y81kevy83wP+Sst+nutFTYOGg3d1lsxg==",
    "registry": "npm",
    "packageName": "globrex",
    "cacheIntegrity": "sha512-uHJgbwAMwNFf5mLst7IWLNg14x1CkeqglJb/K3doi4dw6q2IvAAmM/Y81kevy83wP+Sst+nutFTYOGg3d1lsxg== sha1-3V2eyCYjJzDNZ5Ol4zqTApheYJg="
  },
  "registry": "npm",
  "hash": "dd5d9ec826232730cd6793a5e33a9302985e6098"
}