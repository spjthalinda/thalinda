"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parse = void 0;
const tslib_1 = require("tslib");
const parser_utils_1 = require("@markuplint/parser-utils");
const create_tree_1 = require("./create-tree");
const flatten_nodes_1 = require("./flatten-nodes");
const is_document_fragment_1 = tslib_1.__importDefault(require("./is-document-fragment"));
const optimize_starts_head_or_body_1 = require("./optimize-starts-head-or-body");
const parse = (rawCode, offsetOffset = 0, offsetLine = 0, offsetColumn = 0, isIgnoringFrontMatter) => {
    if (isIgnoringFrontMatter) {
        rawCode = (0, parser_utils_1.ignoreFrontMatter)(rawCode);
    }
    const isFragment = (0, is_document_fragment_1.default)(rawCode);
    const data = (0, optimize_starts_head_or_body_1.isStartsHeadTagOrBodyTag)(rawCode) ? (0, optimize_starts_head_or_body_1.optimizeStartsHeadTagOrBodyTagSetup)(rawCode) : null;
    if (data === null || data === void 0 ? void 0 : data.code) {
        rawCode = data.code;
    }
    const nodeTree = (0, create_tree_1.createTree)(rawCode, isFragment, offsetOffset, offsetLine, offsetColumn);
    const nodeList = (0, flatten_nodes_1.flattenNodes)(nodeTree, rawCode);
    if (data) {
        (0, optimize_starts_head_or_body_1.optimizeStartsHeadTagOrBodyTagResume)(nodeList, data);
    }
    return {
        nodeList,
        isFragment,
    };
};
exports.parse = parse;
