'use strict';

var fs = require('node:fs');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);

var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};
const plugins = [
  [
    "gifsicle",
    {
      interlaced: true
    }
  ],
  [
    "jpegtran",
    {
      progressive: true
    }
  ],
  ["mozjpeg"],
  [
    "optipng",
    {
      optimizationLevel: 5
    }
  ],
  [
    "pngquant",
    {
      quality: [0.6, 0.8]
    }
  ],
  ["upng"],
  [
    "svgo",
    {
      plugins: [
        {
          name: "preset-default",
          params: {
            overrides: {
              removeViewBox: false
            }
          }
        }
      ]
    }
  ],
  ["webp"]
].map((_0) => __async(undefined, [_0], function* ([name, opts]) {
  return (yield (function (t) { return Promise.resolve().then(function () { return /*#__PURE__*/_interopNamespace(require(t)); }); })(`imagemin-${name}`)).default(opts);
}));
var index = (filename) => __async(undefined, null, function* () {
  return fs__default["default"].promises.writeFile(filename, yield plugins.reduce((acc, it) => __async(this, null, function* () {
    return (yield it)(yield acc);
  }), fs__default["default"].promises.readFile(filename)));
});

module.exports = index;
