{
  "manifest": {
    "name": "@prettier/plugin-xml",
    "version": "2.2.0",
    "description": "prettier plugin for XML",
    "main": "dist/plugin.js",
    "scripts": {
      "lint": "eslint --cache .",
      "prepublishOnly": "tsc -p tsconfig.build.json",
      "print": "prettier --plugin=.",
      "test": "jest"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/prettier/plugin-xml.git"
    },
    "author": {
      "name": "Kevin Newton"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/prettier/plugin-xml/issues"
    },
    "homepage": "https://github.com/prettier/plugin-xml#readme",
    "dependencies": {
      "@xml-tools/parser": "^1.0.11",
      "prettier": ">=2.4.0"
    },
    "devDependencies": {
      "@types/jest": "^27.5.1",
      "@types/node": "^17.0.22",
      "@types/prettier": "^2.3.0",
      "@typescript-eslint/eslint-plugin": "^5.16.0",
      "@typescript-eslint/parser": "^5.16.0",
      "eslint": "^8.5.0",
      "eslint-config-prettier": "^8.0.0",
      "jest": "^28.1.0",
      "ts-jest": "^28.0.2",
      "ts-node": "^10.0.0",
      "typescript": "^4.3.2"
    },
    "eslintConfig": {
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "prettier"
      ],
      "env": {
        "es6": true,
        "jest": true,
        "node": true
      },
      "parser": "@typescript-eslint/parser",
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off"
      }
    },
    "eslintIgnore": [
      "dist"
    ],
    "jest": {
      "preset": "ts-jest",
      "testRegex": ".test.ts$"
    },
    "prettier": {
      "plugins": [
        "."
      ],
      "trailingComma": "none"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-@prettier-plugin-xml-2.2.0-2bc2ae667aa817369fdb939aa7d36ea88105483d-integrity/node_modules/@prettier/plugin-xml/package.json",
    "readmeFilename": "README.md",
    "readme": "<h1 align=\"center\">Prettier for XML</h1>\n\n<p align=\"center\">\n  <a href=\"https://gitter.im/jlongster/prettier\">\n    <img alt=\"Gitter\" src=\"https://img.shields.io/gitter/room/jlongster/prettier.svg?style=flat-square\">\n  </a>\n  <a href=\"https://github.com/prettier/plugin-xml/actions\">\n    <img alt=\"GitHub Actions\" src=\"https://img.shields.io/github/workflow/status/prettier/plugin-xml/Main?style=flat-square\">\n  </a>\n  <a href=\"https://www.npmjs.com/package/@prettier/plugin-xml\">\n    <img alt=\"NPM Version\" src=\"https://img.shields.io/npm/v/@prettier/plugin-xml.svg?style=flat-square\">\n  </a>\n  <a href=\"#badge\">\n    <img alt=\"code style: prettier\" src=\"https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square\">\n  </a>\n  <a href=\"https://twitter.com/PrettierCode\">\n    <img alt=\"Follow+Prettier+on+Twitter\" src=\"https://img.shields.io/twitter/follow/prettiercode.svg?label=follow+prettier&style=flat-square\">\n  </a>\n</p>\n\n`@prettier/plugin-xml` is a [prettier](https://prettier.io/) plugin for XML. `prettier` is an opinionated code formatter that supports multiple languages and integrates with most editors. The idea is to eliminate discussions of style in code review and allow developers to get back to thinking about code design instead.\n\n## Getting started\n\nTo run `prettier` with the XML plugin, you're going to need [`node`](https://nodejs.org/en/download/).\n\nIf you're using the `npm` CLI, then add the plugin by:\n\n```bash\nnpm install --save-dev prettier @prettier/plugin-xml\n```\n\nOr if you're using `yarn`, then add the plugin by:\n\n```bash\nyarn add --dev prettier @prettier/plugin-xml\n```\n\nThe `prettier` executable is now installed and ready for use:\n\n```bash\n./node_modules/.bin/prettier --write '**/*.xml'\n```\n\n## Configuration\n\nBelow are the options (from [`src/plugin.ts`](src/plugin.ts)) that `@prettier/plugin-xml` currently supports:\n\n| API Option                 | CLI Option                     |  Default   | Description                                                                                                   |\n| -------------------------- | ------------------------------ | :--------: | ------------------------------------------------------------------------------------------------------------- |\n| `bracketSameLine`          | `--bracket-same-line`          |   `true`   | Same as in Prettier ([see prettier docs](https://prettier.io/docs/en/options.html#bracket-same-line))         |\n| `printWidth`               | `--print-width`                |    `80`    | Same as in Prettier ([see prettier docs](https://prettier.io/docs/en/options.html#print-width)).              |\n| `singleAttributePerLine`   | `--single-attribute-per-line`  |  `false`   | Same as in Prettier ([see prettier docs](https://prettier.io/docs/en/options.html#single-attribute-per-line)) |\n| `tabWidth`                 | `--tab-width`                  |    `2`     | Same as in Prettier ([see prettier docs](https://prettier.io/docs/en/options.html#tab-width)).                |\n| `xmlSelfClosingSpace`      | `--xml-self-closing-space`     |   `true`   | Adds a space before self-closing tags.                                                                        |\n| `xmlWhitespaceSensitivity` | `--xml-whitespace-sensitivity` | `\"strict\"` | Options are `\"strict\"` and `\"ignore\"`. You may want `\"ignore\"`, [see below](#whitespace).                     |\n\nAny of these can be added to your existing [prettier configuration\nfile](https://prettier.io/docs/en/configuration.html). For example:\n\n```json\n{\n  \"tabWidth\": 4\n}\n```\n\nOr, they can be passed to `prettier` as arguments:\n\n```bash\nprettier --tab-width 4 --write '**/*.xml'\n```\n\n### Whitespace\n\nIn XML, by default, all whitespace inside elements has semantic meaning. For prettier to maintain its contract of not changing the semantic meaning of your program, this means the default for `xmlWhitespaceSensitivity` is `\"strict\"`. When running in this mode, prettier's ability to rearrange your markup is somewhat limited, as it has to maintain the exact amount of whitespace that you input within elements.\n\nIf you're sure that the XML files that you're formatting do not require whitespace sensitivity, you can use the `\"ignore\"` option, as this will produce a standardized amount of whitespace. This will fix any indentation issues, and collapse excess blank lines (max of 1 blank line). For most folks most of the time, this is probably the option that you want.\n\n### Ignore ranges\n\nYou can use two special comments to get prettier to ignore formatting a specific piece of the document, as in the following example:\n\n```xml\n<foo>\n  <!-- prettier-ignore-start -->\n    <this-content-will-not-be-formatted     />\n  <!-- prettier-ignore-end -->\n</foo>\n```\n\n## Contributing\n\nBug reports and pull requests are welcome on GitHub at https://github.com/prettier/plugin-xml.\n\n## License\n\nThe package is available as open source under the terms of the [MIT License](https://opensource.org/licenses/MIT).\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2019-present Kevin Newton\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@prettier/plugin-xml/-/plugin-xml-2.2.0.tgz#2bc2ae667aa817369fdb939aa7d36ea88105483d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@prettier/plugin-xml/-/plugin-xml-2.2.0.tgz",
    "hash": "2bc2ae667aa817369fdb939aa7d36ea88105483d",
    "integrity": "sha512-UWRmygBsyj4bVXvDiqSccwT1kmsorcwQwaIy30yVh8T+Gspx4OlC0shX1y+ZuwXZvgnafmpRYKks0bAu9urJew==",
    "registry": "npm",
    "packageName": "@prettier/plugin-xml",
    "cacheIntegrity": "sha512-UWRmygBsyj4bVXvDiqSccwT1kmsorcwQwaIy30yVh8T+Gspx4OlC0shX1y+ZuwXZvgnafmpRYKks0bAu9urJew== sha1-K8KuZnqoFzaf25Oap9NuqIEFSD0="
  },
  "registry": "npm",
  "hash": "2bc2ae667aa817369fdb939aa7d36ea88105483d"
}