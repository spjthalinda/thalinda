{
  "manifest": {
    "name": "remark-lint-fenced-code-flag",
    "version": "3.1.1",
    "description": "remark-lint rule to warn when fenced code blocks occur without language flag",
    "license": "MIT",
    "keywords": [
      "remark",
      "lint",
      "rule",
      "remark-lint-rule",
      "fenced",
      "code",
      "flag",
      "infostring"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/remarkjs/remark-lint",
      "directory": "packages/remark-lint-fenced-code-flag"
    },
    "bugs": {
      "url": "https://github.com/remarkjs/remark-lint/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "@types/mdast": "^3.0.0",
      "unified": "^10.0.0",
      "unified-lint-rule": "^2.0.0",
      "unist-util-generated": "^2.0.0",
      "unist-util-position": "^4.0.0",
      "unist-util-visit": "^4.0.0"
    },
    "scripts": {
      "build": "rimraf \"*.d.ts\" && tsc && type-coverage"
    },
    "xo": false,
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-remark-lint-fenced-code-flag-3.1.1-b1fccd801a79c302543302dd3041fa325d1bd727-integrity/node_modules/remark-lint-fenced-code-flag/package.json",
    "readmeFilename": "readme.md",
    "readme": "<!--This file is generated-->\n\n# remark-lint-fenced-code-flag\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[`remark-lint`][mono] rule to check that language flags of fenced code are used.\n\n## Contents\n\n*   [What is this?](#what-is-this)\n*   [When should I use this?](#when-should-i-use-this)\n*   [Presets](#presets)\n*   [Install](#install)\n*   [Use](#use)\n*   [API](#api)\n    *   [`unified().use(remarkLintFencedCodeFlag[, config])`](#unifieduseremarklintfencedcodeflag-config)\n*   [Recommendation](#recommendation)\n*   [Examples](#examples)\n*   [Compatibility](#compatibility)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## What is this?\n\nThis package is a [unified][] ([remark][]) plugin, specifically a `remark-lint`\nrule.\nLint rules check markdown code style.\n\n## When should I use this?\n\nYou can use this package to check that language flags of fenced code\nare used and consistent.\n\n## Presets\n\nThis rule is included in the following presets:\n\n| Preset | Setting |\n| - | - |\n| [`remark-preset-lint-markdown-style-guide`](https://github.com/remarkjs/remark-lint/tree/main/packages/remark-preset-lint-markdown-style-guide) | `{ allowEmpty: false }` |\n\n## Install\n\nThis package is [ESM only][esm].\nIn Node.js (version 12.20+, 14.14+, or 16.0+), install with [npm][]:\n\n```sh\nnpm install remark-lint-fenced-code-flag\n```\n\nIn Deno with [Skypack][]:\n\n```js\nimport remarkLintFencedCodeFlag from 'https://cdn.skypack.dev/remark-lint-fenced-code-flag@3?dts'\n```\n\nIn browsers with [Skypack][]:\n\n```html\n<script type=\"module\">\n  import remarkLintFencedCodeFlag from 'https://cdn.skypack.dev/remark-lint-fenced-code-flag@3?min'\n</script>\n```\n\n## Use\n\nOn the API:\n\n```js\nimport {read} from 'to-vfile'\nimport {reporter} from 'vfile-reporter'\nimport {remark} from 'remark'\nimport remarkLint from 'remark-lint'\nimport remarkLintFencedCodeFlag from 'remark-lint-fenced-code-flag'\n\nmain()\n\nasync function main() {\n  const file = await remark()\n    .use(remarkLint)\n    .use(remarkLintFencedCodeFlag)\n    .process(await read('example.md'))\n\n  console.error(reporter(file))\n}\n```\n\nOn the CLI:\n\n```sh\nremark --use remark-lint --use remark-lint-fenced-code-flag example.md\n```\n\nOn the CLI in a config file (here a `package.json`):\n\n```diff\n …\n \"remarkConfig\": {\n   \"plugins\": [\n     …\n     \"remark-lint\",\n+    \"remark-lint-fenced-code-flag\",\n     …\n   ]\n }\n …\n```\n\n## API\n\nThis package exports no identifiers.\nThe default export is `remarkLintFencedCodeFlag`.\n\n### `unified().use(remarkLintFencedCodeFlag[, config])`\n\nThis rule supports standard configuration that all remark lint rules accept\n(such as `false` to turn it off or `[1, options]` to configure it).\n\nThe following options (default: `undefined`) are accepted:\n\n*   `Array<string>`\n    — as if passing `{flags: options}`\n*   `Object` with the following fields:\n    *   `allowEmpty` (`boolean`, default: `false`)\n        — allow language flags to be omitted\n    *   `flags` (`Array<string>` default: `[]`)\n        — specific flags to allow (other flags will result in a warning)\n\n## Recommendation\n\nWhile omitting the language flag is perfectly fine to signal that the code is\nplain text, it *could* point to a mistake.\nIt’s recommended to instead use a certain flag for plain text (such as `txt`)\nand to turn this rule on.\n\n## Examples\n\n##### `ok.md`\n\n###### In\n\n````markdown\n```alpha\nbravo()\n```\n````\n\n###### Out\n\nNo messages.\n\n##### `not-ok.md`\n\n###### In\n\n````markdown\n```\nalpha()\n```\n````\n\n###### Out\n\n```text\n1:1-3:4: Missing code language flag\n```\n\n##### `ok.md`\n\nWhen configured with `{ allowEmpty: true }`.\n\n###### In\n\n````markdown\n```\nalpha()\n```\n````\n\n###### Out\n\nNo messages.\n\n##### `not-ok.md`\n\nWhen configured with `{ allowEmpty: false }`.\n\n###### In\n\n````markdown\n```\nalpha()\n```\n````\n\n###### Out\n\n```text\n1:1-3:4: Missing code language flag\n```\n\n##### `ok.md`\n\nWhen configured with `[ 'alpha' ]`.\n\n###### In\n\n````markdown\n```alpha\nbravo()\n```\n````\n\n###### Out\n\nNo messages.\n\n##### `ok.md`\n\nWhen configured with `{ flags: [ 'alpha' ] }`.\n\n###### In\n\n````markdown\n```alpha\nbravo()\n```\n````\n\n###### Out\n\nNo messages.\n\n##### `not-ok.md`\n\nWhen configured with `[ 'charlie' ]`.\n\n###### In\n\n````markdown\n```alpha\nbravo()\n```\n````\n\n###### Out\n\n```text\n1:1-3:4: Incorrect code language flag\n```\n\n## Compatibility\n\nProjects maintained by the unified collective are compatible with all maintained\nversions of Node.js.\nAs of now, that is Node.js 12.20+, 14.14+, and 16.0+.\nOur projects sometimes work with older versions, but this is not guaranteed.\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`remarkjs/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n[build-badge]: https://github.com/remarkjs/remark-lint/workflows/main/badge.svg\n\n[build]: https://github.com/remarkjs/remark-lint/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/remarkjs/remark-lint.svg\n\n[coverage]: https://codecov.io/github/remarkjs/remark-lint\n\n[downloads-badge]: https://img.shields.io/npm/dm/remark-lint-fenced-code-flag.svg\n\n[downloads]: https://www.npmjs.com/package/remark-lint-fenced-code-flag\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/remark-lint-fenced-code-flag.svg\n\n[size]: https://bundlephobia.com/result?p=remark-lint-fenced-code-flag\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/remarkjs/remark/discussions\n\n[unified]: https://github.com/unifiedjs/unified\n\n[remark]: https://github.com/remarkjs/remark\n\n[mono]: https://github.com/remarkjs/remark-lint\n\n[esm]: https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c\n\n[skypack]: https://www.skypack.dev\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[health]: https://github.com/remarkjs/.github\n\n[contributing]: https://github.com/remarkjs/.github/blob/main/contributing.md\n\n[support]: https://github.com/remarkjs/.github/blob/main/support.md\n\n[coc]: https://github.com/remarkjs/.github/blob/main/code-of-conduct.md\n\n[license]: https://github.com/remarkjs/remark-lint/blob/main/license\n\n[author]: https://wooorm.com\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/remark-lint-fenced-code-flag/-/remark-lint-fenced-code-flag-3.1.1.tgz#b1fccd801a79c302543302dd3041fa325d1bd727",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/remark-lint-fenced-code-flag/-/remark-lint-fenced-code-flag-3.1.1.tgz",
    "hash": "b1fccd801a79c302543302dd3041fa325d1bd727",
    "integrity": "sha512-FFVZmYsBccKIIEgOtgdZEpQdARtAat1LTLBydnIpyNIvcntzWwtrtlj9mtjL8ZoSRre8HtwmEnBFyOfmM/NWaA==",
    "registry": "npm",
    "packageName": "remark-lint-fenced-code-flag",
    "cacheIntegrity": "sha512-FFVZmYsBccKIIEgOtgdZEpQdARtAat1LTLBydnIpyNIvcntzWwtrtlj9mtjL8ZoSRre8HtwmEnBFyOfmM/NWaA== sha1-sfzNgBp5wwJUMwLdMEH6Ml0b1yc="
  },
  "registry": "npm",
  "hash": "b1fccd801a79c302543302dd3041fa325d1bd727"
}