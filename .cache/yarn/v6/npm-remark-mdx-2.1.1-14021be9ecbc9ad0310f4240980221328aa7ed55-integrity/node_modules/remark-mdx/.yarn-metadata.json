{
  "manifest": {
    "name": "remark-mdx",
    "version": "2.1.1",
    "description": "remark plugin to support MDX syntax",
    "license": "MIT",
    "keywords": [
      "unified",
      "remark",
      "remark-plugin",
      "plugin",
      "mdast",
      "markdown",
      "jsx",
      "javascript",
      "xml",
      "mdx"
    ],
    "homepage": "https://mdxjs.com/",
    "repository": {
      "type": "git",
      "url": "https://github.com/mdx-js/mdx",
      "directory": "packages/remark-mdx"
    },
    "bugs": {
      "url": "https://github.com/mdx-js/mdx/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      },
      {
        "name": "Christian Murphy",
        "email": "christian.murphy.42@gmail.com"
      }
    ],
    "type": "module",
    "sideEffects": false,
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "mdast-util-mdx": "^2.0.0",
      "micromark-extension-mdxjs": "^1.0.0"
    },
    "devDependencies": {
      "remark-parse": "^10.0.0",
      "remark-stringify": "^10.0.0",
      "unified": "^10.0.0",
      "unist-builder": "^3.0.0",
      "unist-util-remove-position": "^4.0.0",
      "unist-util-visit": "^4.0.0"
    },
    "scripts": {
      "prepack": "npm run build",
      "build": "rimraf \"test/**/*.d.ts\" \"*.d.ts\" && tsc && type-coverage",
      "test-api": "uvu test \"\\.jsx?$\"",
      "test-coverage": "c8 --check-coverage --100 --reporter lcov npm run test-api",
      "test": "npm run build && npm run test-coverage"
    },
    "xo": false,
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "gitHead": "bf7deab69996449cb99c2217dff75e65855eb2c1",
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-remark-mdx-2.1.1-14021be9ecbc9ad0310f4240980221328aa7ed55-integrity/node_modules/remark-mdx/package.json",
    "readmeFilename": "readme.md",
    "readme": "# remark-mdx\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\nremark plugin to support the MDX syntax (JSX, expressions, import/exports).\n\n<!-- more -->\n\n## Contents\n\n*   [What is this?](#what-is-this)\n*   [When should I use this?](#when-should-i-use-this)\n*   [Install](#install)\n*   [Use](#use)\n*   [API](#api)\n    *   [`unified().use(remarkMdx)`](#unifieduseremarkmdx)\n*   [Syntax](#syntax)\n*   [Syntax tree](#syntax-tree)\n*   [Types](#types)\n*   [Security](#security)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## What is this?\n\nThis package is a remark plugin to support the MDX syntax.\n\n## When should I use this?\n\nThis plugin is useful if you’re dealing with the MDX syntax and integrating\nwith remark, rehype, and the rest of unified.\nSome example use cases are when you want to lint the syntax or compile it to\nsomething other that JavaScript.\n\n**remark** is an AST (abstract syntax tree) based transform project.\nThe layer under remark is called mdast, which is just the syntax tree without\nthe convention on how to transform.\nmdast is useful when transforming to other formats.\nAnother layer underneath is micromark, which is just the parser and has support\nfor concrete tokens.\nmicromark is useful for linting and formatting.\n`remark-mdx` is a small wrapper to integrate all of these.\nIts parts can be used separately.\n\nTypically though, you’d want to move a layer up: `@mdx-js/mdx`.\nThat package is the core compiler for turning MDX into JavaScript which\ngives you the most control.\nOr even higher: if you’re using a bundler (webpack, Rollup, esbuild), or a site\nbuilder (Gatsby, Next.js) or build system (Vite, WMR) which comes with a\nbundler, you’re better off using an integration: see\n[§ Integrations][integrations].\n\n## Install\n\nThis package is [ESM only][esm]:\nNode 12+ is needed to use it and it must be `import`ed instead of `require`d.\n\n[npm][]:\n\n```sh\nnpm install remark-mdx\n```\n\n[yarn][]:\n\n```sh\nyarn add remark-mdx\n```\n\n## Use\n\n```js\nimport {remark} from 'remark'\nimport remarkMdx from 'remark-mdx'\n\nconst file = remark()\n  .use(remarkMdx)\n  .processSync('import a from \"b\"\\n\\na <b /> c {1 + 1} d')\n\nconsole.log(String(file))\n```\n\nYields:\n\n```mdx\nimport a from \"b\"\n\na <b/> c {1 + 1} d\n```\n\n## API\n\nThis package exports no identifiers.\nThe default export is `remarkMdx`.\n\n### `unified().use(remarkMdx)`\n\nConfigures remark so that it can parse and serialize MDX (JSX, expressions,\nimport/exports).\nIt doesn’t do anything with the syntax: you can\n[create your own plugin][create-plugin] to transform them.\n\n## Syntax\n\nThis plugin applies several micromark extensions to parse the syntax.\nSee their readmes for parse details:\n\n*   [`micromark-extension-mdx-expression`](https://github.com/micromark/micromark-extension-mdx-expression#syntax)\n    — expressions (`{1 + 1}`)\n*   [`micromark-extension-mdx-jsx`](https://github.com/micromark/micromark-extension-mdx-jsx#syntax)\n    — JSX (`<div />`)\n*   [`micromark-extension-mdxjs-esm`](https://github.com/micromark/micromark-extension-mdxjs-esm#syntax)\n    — ESM (`export x from 'y'`)\n*   [`micromark-extension-mdx-md`](https://github.com/micromark/micromark-extension-mdx-md#mdxmd)\n    — Turn off HTML, autolinks, and indented code\n\n## Syntax tree\n\nThis plugin applies several mdast utilities to build and serialize the AST.\nSee their readmes for the node types supported in the tree:\n\n*   [`mdast-util-mdx-expression`](https://github.com/syntax-tree/mdast-util-mdx-expression#syntax-tree)\n    — expressions (`{1 + 1}`)\n*   [`mdast-util-mdx-jsx`](https://github.com/syntax-tree/mdast-util-mdx-jsx#syntax-tree)\n    — JSX (`<div />`)\n*   [`mdast-util-mdxjs-esm`](https://github.com/syntax-tree/mdast-util-mdxjs-esm#syntax-tree)\n    — ESM (`export x from 'y'`)\n\n## Types\n\nThis package is fully typed with [TypeScript][].\n\nIf you’re working with the syntax tree, make sure to import this plugin\nsomewhere in your types, as that registers the new node types in the tree.\n\n```js\n/**\n * @typedef {import('remark-mdx')}\n */\n\nimport {visit} from 'unist-util-visit'\n\nexport default function myRemarkPlugin() => {\n  /** @param {import('@types/mdast').Root} tree */\n  return (tree) => {\n    visit(tree, (node) => {\n      // `node` can now be one of the nodes for JSX, expressions, or ESM.\n    })\n  }\n}\n```\n\nAlternatively, in TypeScript, do:\n\n```ts\n/// <reference types=\"remark-mdx\" />\n\nimport type {Root} from '@types/mdast'\nimport {visit} from 'unist-util-visit'\n\nexport default function myRemarkPlugin() => {\n  return (tree: Root) => {\n    visit(tree, (node) => {\n      // `node` can now be one of the nodes for JSX, expressions, or ESM.\n    })\n  }\n}\n```\n\n## Security\n\nSee [§ Security][security] on our website for information.\n\n## Contribute\n\nSee [§ Contribute][contribute] on our website for ways to get started.\nSee [§ Support][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][] © [Titus Wormer][author]\n\n[build-badge]: https://github.com/mdx-js/mdx/workflows/main/badge.svg\n\n[build]: https://github.com/mdx-js/mdx/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/mdx-js/mdx/main.svg\n\n[coverage]: https://codecov.io/github/mdx-js/mdx\n\n[downloads-badge]: https://img.shields.io/npm/dm/remark-mdx.svg\n\n[downloads]: https://www.npmjs.com/package/remark-mdx\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/remark-mdx.svg\n\n[size]: https://bundlephobia.com/result?p=remark-mdx\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/mdx-js/mdx/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[yarn]: https://classic.yarnpkg.com/docs/cli/add/\n\n[contribute]: https://mdxjs.com/community/contribute/\n\n[support]: https://mdxjs.com/community/support/\n\n[coc]: https://github.com/mdx-js/.github/blob/main/code-of-conduct.md\n\n[mit]: https://github.com/mdx-js/mdx/blob/main/packages/remark-mdx/license\n\n[author]: https://wooorm.com\n\n[create-plugin]: https://unifiedjs.com/learn/guide/create-a-plugin/\n\n[integrations]: https://mdxjs.com/getting-started/#integrations\n\n[esm]: https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c\n\n[security]: https://mdxjs.com/getting-started/#security\n\n[typescript]: https://www.typescriptlang.org\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2020 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/remark-mdx/-/remark-mdx-2.1.1.tgz#14021be9ecbc9ad0310f4240980221328aa7ed55",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/remark-mdx/-/remark-mdx-2.1.1.tgz",
    "hash": "14021be9ecbc9ad0310f4240980221328aa7ed55",
    "integrity": "sha512-0wXdEITnFyjLquN3VvACNLzbGzWM5ujzTvfgOkONBZgSFJ7ezLLDaTWqf6H9eUgVITEP8asp6LJ0W/X090dXBg==",
    "registry": "npm",
    "packageName": "remark-mdx",
    "cacheIntegrity": "sha512-0wXdEITnFyjLquN3VvACNLzbGzWM5ujzTvfgOkONBZgSFJ7ezLLDaTWqf6H9eUgVITEP8asp6LJ0W/X090dXBg== sha1-FAIb6ey8mtAxD0JAmAIhMoqn7VU="
  },
  "registry": "npm",
  "hash": "14021be9ecbc9ad0310f4240980221328aa7ed55"
}