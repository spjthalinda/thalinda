{
  "manifest": {
    "name": "micromark-extension-frontmatter",
    "version": "0.2.2",
    "description": "micromark extension to support frontmatter (YAML, TOML, etc)",
    "license": "MIT",
    "keywords": [
      "micromark",
      "micromark-extension",
      "frontmatter",
      "yaml",
      "toml",
      "gfm",
      "markdown",
      "unified"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/micromark/micromark-extension-frontmatter.git"
    },
    "bugs": {
      "url": "https://github.com/micromark/micromark-extension-frontmatter/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "files": [
      "lib/",
      "index.js",
      "html.js"
    ],
    "dependencies": {
      "fault": "^1.0.0"
    },
    "devDependencies": {
      "micromark": "~2.9.0",
      "nyc": "^15.0.0",
      "prettier": "^2.0.0",
      "remark-cli": "^8.0.0",
      "remark-preset-wooorm": "^7.0.0",
      "tape": "^5.0.0",
      "xo": "^0.33.0"
    },
    "scripts": {
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test.js",
      "test": "npm run format && npm run test-coverage"
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-micromark-extension-frontmatter-0.2.2-61b8e92e9213e1d3c13f5a59e7862f5ca98dfa53-integrity/node_modules/micromark-extension-frontmatter/package.json",
    "readmeFilename": "readme.md",
    "readme": "# micromark-extension-frontmatter\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n**[micromark][]** extension to support frontmatter (YAML, TOML, etc).\n\nAs there is no spec for frontmatter in markdown, this extension follows how YAML\nfrontmatter works on github.com.\nFor the HTML part, instead of rendering YAML, it is ignored.\nOther types of frontmatter can be parsed, which will by default also work the\nsame as on github.com.\n\nThis package provides the low-level modules for integrating with the micromark\ntokenizer and the micromark HTML compiler.\n\nYou probably shouldn’t use this package directly, but instead use\n[`mdast-util-frontmatter`][mdast-util-frontmatter] with **[mdast][]** or\n[`remark-frontmatter`][remark-frontmatter] with **[remark][]**.\n\n## Install\n\n[npm][]:\n\n```sh\nnpm install micromark-extension-frontmatter\n```\n\n## API\n\n### `html(options)`\n\n### `syntax(options)`\n\n> Note: `syntax` is the default export of this module, `html` is available at\n> `micromark-extension-frontmatter/html`.\n\nSupport frontmatter (YAML, TOML, and more).\n\nThe exports are functions that can be called with options and return extensions\nfor the micromark parser (to tokenize frontmatter; can be passed in\n`extensions`) and the default HTML compiler (to ignore frontmatter; can be\npassed in `htmlExtensions`).\n\n##### `options`\n\nOne [`preset`][preset] or [`Matter`][matter], or an array of them, defining all\nthe supported frontmatters (default: `'yaml'`).\n\n##### `preset`\n\nEither `'yaml'` or `'toml'`:\n\n*   `'yaml'` — [`matter`][matter] defined as `{type: 'yaml', marker: '-'}`\n*   `'toml'` — [`matter`][matter] defined as `{type: 'toml', marker: '+'}`\n\n##### `Matter`\n\nAn object with a `type` and either a `marker` or a `fence`:\n\n*   `type` (`string`)\n    — Type to tokenize as\n*   `marker` (`string` or `{open: string, close: string}`)\n    — Character used to construct fences.\n    By providing an object with `open` and `close`.\n    different characters can be used for opening and closing fences.\n    For example the character `'-'` will result in `'---'` being used as the\n    fence\n*   `fence` (`string` or `{open: string, close: string}`)\n    — String used as the complete fence.\n    By providing an object with `open` and `close` different values can be used\n    for opening and closing fences.\n    This can be used too if fences contain different characters or lengths other\n    than 3\n*   `anywhere` (`boolean`, default: `false`)\n    – if `true`, matter can be found anywhere in the document.\n    If `false` (default), only matter at the start of the document is recognized\n\n###### Example\n\nFor `{type: 'yaml', marker: '-'}`:\n\n```yaml\n---\nkey: value\n---\n```\n\nFor `{type: 'custom', marker: {open: '<', close: '>'}}`:\n\n```text\n<<<\ndata\n>>>\n```\n\nFor `{type: 'custom', fence: '+=+=+=+'}`:\n\n```text\n+=+=+=+\ndata\n+=+=+=+\n```\n\nFor `{type: 'json', fence: {open: '{', close: '}'}}`:\n\n```json\n{\n  \"key\": \"value\"\n}\n```\n\n## Related\n\n*   [`remarkjs/remark`][remark]\n    — markdown processor powered by plugins\n*   [`micromark/micromark`][micromark]\n    — the smallest commonmark-compliant markdown parser that exists\n*   [`remarkjs/remark-frontmatter`][remark-frontmatter]\n    — remark plugin to support frontmatter\n*   [`syntax-tree/mdast-util-frontmatter`][mdast-util-frontmatter]\n    — mdast utility to support frontmatter\n*   [`syntax-tree/mdast-util-from-markdown`][from-markdown]\n    — mdast parser using `micromark` to create mdast from markdown\n*   [`syntax-tree/mdast-util-to-markdown`][to-markdown]\n    — mdast serializer to create markdown from mdast\n\n## Contribute\n\nSee [`contributing.md` in `micromark/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/micromark/micromark-extension-frontmatter.svg\n\n[build]: https://travis-ci.org/micromark/micromark-extension-frontmatter\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/micromark/micromark-extension-frontmatter.svg\n\n[coverage]: https://codecov.io/github/micromark/micromark-extension-frontmatter\n\n[downloads-badge]: https://img.shields.io/npm/dm/micromark-extension-frontmatter.svg\n\n[downloads]: https://www.npmjs.com/package/micromark-extension-frontmatter\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/micromark-extension-frontmatter.svg\n\n[size]: https://bundlephobia.com/result?p=micromark-extension-frontmatter\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/micromark/unist/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[contributing]: https://github.com/micromark/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/micromark/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/micromark/.github/blob/HEAD/code-of-conduct.md\n\n[micromark]: https://github.com/micromark/micromark\n\n[from-markdown]: https://github.com/syntax-tree/mdast-util-from-markdown\n\n[to-markdown]: https://github.com/syntax-tree/mdast-util-to-markdown\n\n[remark]: https://github.com/remarkjs/remark\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[mdast-util-frontmatter]: https://github.com/syntax-tree/mdast-util-frontmatter\n\n[remark-frontmatter]: https://github.com/remarkjs/remark-frontmatter\n\n[preset]: #preset\n\n[matter]: #matter\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2020 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/micromark-extension-frontmatter/-/micromark-extension-frontmatter-0.2.2.tgz#61b8e92e9213e1d3c13f5a59e7862f5ca98dfa53",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/micromark-extension-frontmatter/-/micromark-extension-frontmatter-0.2.2.tgz",
    "hash": "61b8e92e9213e1d3c13f5a59e7862f5ca98dfa53",
    "integrity": "sha512-q6nPLFCMTLtfsctAuS0Xh4vaolxSFUWUWR6PZSrXXiRy+SANGllpcqdXFv2z07l0Xz/6Hl40hK0ffNCJPH2n1A==",
    "registry": "npm",
    "packageName": "micromark-extension-frontmatter",
    "cacheIntegrity": "sha512-q6nPLFCMTLtfsctAuS0Xh4vaolxSFUWUWR6PZSrXXiRy+SANGllpcqdXFv2z07l0Xz/6Hl40hK0ffNCJPH2n1A== sha1-YbjpLpIT4dPBP1pZ54YvXKmN+lM="
  },
  "registry": "npm",
  "hash": "61b8e92e9213e1d3c13f5a59e7862f5ca98dfa53"
}