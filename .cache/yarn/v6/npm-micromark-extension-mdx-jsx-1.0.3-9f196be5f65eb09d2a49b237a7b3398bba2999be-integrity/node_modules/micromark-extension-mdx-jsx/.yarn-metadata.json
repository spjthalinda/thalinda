{
  "manifest": {
    "name": "micromark-extension-mdx-jsx",
    "version": "1.0.3",
    "description": "micromark extension to support MDX or MDX.js JSX",
    "license": "MIT",
    "keywords": [
      "micromark",
      "micromark-extension",
      "mdx",
      "mdxjs",
      "jsx",
      "js",
      "javascript",
      "es",
      "ecmascript",
      "markdown",
      "unified"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/micromark/micromark-extension-mdx-jsx.git"
    },
    "bugs": {
      "url": "https://github.com/micromark/micromark-extension-mdx-jsx/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "dev/",
      "lib/",
      "index.d.ts",
      "index.js"
    ],
    "exports": {
      "development": "./dev/index.js",
      "default": "./index.js"
    },
    "dependencies": {
      "@types/acorn": "^4.0.0",
      "estree-util-is-identifier-name": "^2.0.0",
      "micromark-factory-mdx-expression": "^1.0.0",
      "micromark-factory-space": "^1.0.0",
      "micromark-util-character": "^1.0.0",
      "micromark-util-symbol": "^1.0.0",
      "micromark-util-types": "^1.0.0",
      "uvu": "^0.5.0",
      "vfile-message": "^3.0.0"
    },
    "devDependencies": {
      "@types/mdast": "^3.0.0",
      "@types/tape": "^4.0.0",
      "acorn": "^8.0.0",
      "acorn-jsx": "^5.0.0",
      "c8": "^7.0.0",
      "mdast-zone": "^5.0.0",
      "micromark": "^3.0.0",
      "micromark-build": "^1.0.0",
      "prettier": "^2.0.0",
      "remark-cli": "^10.0.0",
      "remark-preset-wooorm": "^9.0.0",
      "rimraf": "^3.0.0",
      "tape": "^5.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "xo": "^0.47.0"
    },
    "scripts": {
      "build": "rimraf \"dev/**/*.d.ts\" \"script/**/*.d.ts\" \"test/**/*.d.ts\" && tsc && type-coverage && micromark-build",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node --conditions development test/index.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node --conditions development test/index.js",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "rules": {
        "node/file-extension-in-import": "off",
        "unicorn/no-this-assignment": "off",
        "unicorn/prefer-code-point": "off"
      }
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm",
        "./script/grammar.js"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-micromark-extension-mdx-jsx-1.0.3-9f196be5f65eb09d2a49b237a7b3398bba2999be-integrity/node_modules/micromark-extension-mdx-jsx/package.json",
    "readmeFilename": "readme.md",
    "readme": "# micromark-extension-mdx-jsx\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n**[micromark][]** extension to support [MDX][mdx-js] (or MDX.js) JSX.\n\nThis package provides the low-level modules for integrating with the micromark\ntokenizer but has no handling of compiling to HTML: go to a syntax tree instead.\n\n## When to use this\n\nThis package is already included in [xdm][] and [`mdx-js/mdx` (next)][mdx-js].\n\nYou should probably use [`micromark-extension-mdx`][mdx] or\n[`micromark-extension-mdxjs`][mdxjs] instead, which combine this package with\nother MDX features.\nAlternatively, if you’re using [`micromark`][micromark] or\n[`mdast-util-from-markdown`][from-markdown] and you don’t want all of MDX, use\nthis package.\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c):\nNode 12+ is needed to use it and it must be `import`ed instead of `require`d.\n\n[npm][]:\n\n```sh\nnpm install micromark-extension-mdx-jsx\n```\n\n## Use\n\n```js\nimport {micromark} from 'micromark'\nimport {mdxJsx} from 'micromark-extension-mdx-jsx'\n\nconst output = micromark('a <b c d=\"e\" /> f', {extensions: [mdxJsx()]})\n\nconsole.log(output)\n```\n\nYields:\n\n```html\n<p>a  f</p>\n```\n\n…which is rather useless: go to a syntax tree with\n[`mdast-util-from-markdown`][from-markdown] and\n[`mdast-util-mdx-expression`][util] instead.\n\n## API\n\nThis package exports the following identifiers: `mdxJsx`.\nThere is no default export.\n\nThe export map supports the endorsed\n[`development` condition](https://nodejs.org/api/packages.html#packages_resolving_user_conditions).\nRun `node --conditions development module.js` to get instrumented dev code.\nWithout this condition, production code is loaded.\n\n### `mdxJsx(options?)`\n\nA function that can be called with options that returns an extension for\nmicromark to parse JSX (can be passed in `extensions`).\n\n##### `options`\n\n###### `options.acorn`\n\nAcorn parser to use ([`Acorn`][acorn], optional).\n\n###### `options.acornOptions`\n\nOptions to pass to acorn (`Object`, default: `{ecmaVersion: 2020, sourceType:\n'module'}`).\nAll fields can be set.\nPositional info (`loc`, `range`) is set on ES nodes regardless of acorn options.\n\n###### `options.addResult`\n\nWhether to add an `estree` field to the `mdxTextJsx` and `mdxFlowJsx` tokens\nwith the results from acorn (`boolean`, default: `false`).\n\n## Syntax\n\nThis extensions support both MDX and MDX.js.\nThe first is agnostic to the programming language (it could contain attribute\nexpressions and attribute value expressions with Rust or so), the last is\nspecific to JavaScript (in which case attribute expressions must be spread\nexpressions).\nTo turn on gnostic mode, pass `acorn`.\n\nThe syntax of JSX supported here is described in [W3C Backus–Naur form][w3c-bnf]\nwith the following additions:\n\n1.  **`A - B`** — matches any string that matches `A` but does not match `B`.\n2.  **`'string'`** — same as **`\"string\"`** but with single quotes.\n3.  **`BREAK`** — lookahead match for a block break opportunity (either\n    EOF (end of file), U+000A LINE FEED (LF), U+000D CARRIAGE RETURN (CR), or\n    another JSX tag)\n\nThe syntax is defined as follows, however, do note that interleaving (mixing)\nof markdown and MDX is defined elsewhere, and that the constraints are imposed\nin [`mdast-util-mdx-jsx`][util].\n\n<!--grammar start-->\n\n<pre><code>; Entries\n<a id=x-mdx-flow href=#x-mdx-flow>mdxFlow</a> ::= *<a href=#x-space-or-tab>spaceOrTab</a> <a href=#x-element>element</a> *<a href=#x-space-or-tab>spaceOrTab</a> BREAK\n<a id=x-mdx-text href=#x-mdx-text>mdxText</a> ::= <a href=#x-element>element</a>\n\n<a id=x-element href=#x-element>element</a> ::= <a href=#x-self-closing>selfClosing</a> | <a href=#x-closed>closed</a>\n<a id=x-self-closing href=#x-self-closing>selfClosing</a> ::=\n  ; constraint: tag MUST be named, MUST NOT be closing, and MUST be self-closing\n  <a href=#x-tag>tag</a>\n<a id=x-closed href=#x-closed>closed</a> ::=\n  ; constraint: tag MUST NOT be closing and MUST NOT be self-closing\n  <a href=#x-tag>tag</a>\n  *<a href=#x-data>data</a>\n  ; constraint: tag MUST be closing, MUST NOT be self-closing, MUST NOT have\n  ; attributes, and either both tags MUST have the same name or both tags MUST\n  ; be nameless\n  <a href=#x-tag>tag</a>\n\n<a id=x-data href=#x-data>data</a> ::= <a href=#x-element>element</a> | <a href=#x-text>text</a>\n\n; constraint: markdown whitespace (<a href=#x-space-or-tab>spaceOrTab</a> | '\\r' | '\\n') is NOT\n; allowed directly after `&lt;` in order to allow `1 &lt; 3` in markdown.\n<a id=x-tag href=#x-tag>tag</a> ::=\n  '<' *1<a href=#x-closing>closing</a>\n  *1(*<a href=#x-whitespace>whitespace</a> <a href=#x-name>name</a> *1<a href=#x-attributes-after-identifier>attributesAfterIdentifier</a> *1<a href=#x-closing>closing</a>)\n  *<a href=#x-whitespace>whitespace</a> '>'\n\n<a id=x-attributes-after-identifier href=#x-attributes-after-identifier>attributesAfterIdentifier</a> ::=\n  1*<a href=#x-whitespace>whitespace</a> (<a href=#x-attributes-boolean>attributesBoolean</a> | <a href=#x-attributes-value>attributesValue</a>) |\n  *<a href=#x-whitespace>whitespace</a> <a href=#x-attributes-expression>attributesExpression</a> |\n<a id=x-attributes-after-value href=#x-attributes-after-value>attributesAfterValue</a> ::=\n  *<a href=#x-whitespace>whitespace</a> (<a href=#x-attributes-boolean>attributesBoolean</a> | <a href=#x-attributes-expression>attributesExpression</a> | <a href=#x-attributes-value>attributesValue</a>)\n<a name=attributes-boolean href=#x-attributes-boolean>attributesBoolean</a> ::= <a href=#x-key>key</a> *1<a href=#x-attributes-after-identifier>attributesAfterIdentifier</a>\n; Note: in gnostic mode the value of the expression must instead be a single valid ES spread\n; expression\n<a name=attributes-expression href=#x-attributes-expression>attributesExpression</a> ::= <a href=#x-expression>expression</a> *1<a href=#x-attributes-after-value>attributesAfterValue</a>\n<a name=attributes-value href=#x-attributes-value>attributesValue</a> ::= <a href=#x-key>key</a> <a href=#x-initializer>initializer</a> *1<a href=#x-attributes-after-value>attributesAfterValue</a>\n\n<a id=x-closing href=#x-closing>closing</a> ::= *<a href=#x-whitespace>whitespace</a> '/'\n\n<a id=x-name href=#x-name>name</a> ::= <a href=#x-identifier>identifier</a> *1(<a href=#x-local>local</a> | <a href=#x-members>members</a>)\n<a id=x-key href=#x-key>key</a> ::= <a href=#x-identifier>identifier</a> *1<a href=#x-local>local</a>\n<a id=x-local href=#x-local>local</a> ::= *<a href=#x-whitespace>whitespace</a> ':' *<a href=#x-whitespace>whitespace</a> <a href=#x-identifier>identifier</a>\n<a id=x-members href=#x-members>members</a> ::= <a href=#x-member>member</a> *<a href=#x-member>member</a>\n<a id=x-member href=#x-member>member</a> ::= *<a href=#x-whitespace>whitespace</a> '.' *<a href=#x-whitespace>whitespace</a> <a href=#x-identifier>identifier</a>\n\n<a id=x-identifier href=#x-identifier>identifier</a> ::= <a href=#x-identifier-start>identifierStart</a> *<a href=#x-identifier-part>identifierPart</a>\n<a id=x-initializer href=#x-initializer>initializer</a> ::= *<a href=#x-whitespace>whitespace</a> '=' *<a href=#x-whitespace>whitespace</a> <a href=#x-value>value</a>\n<a id=x-value href=#x-value>value</a> ::= <a href=#x-double-quoted>doubleQuoted</a> | <a href=#x-single-quoted>singleQuoted</a> | <a href=#x-expression>expression</a>\n; Note: in gnostic mode the value must instead be a single valid ES expression\n<a id=x-expression href=#x-expression>expression</a> ::= '{' *(<a href=#x-expression-text>expressionText</a> | <a href=#x-expression>expression</a>) '}'\n\n<a id=x-double-quoted href=#x-double-quoted>doubleQuoted</a> ::= '\"' *<a href=#x-double-quoted-text>doubleQuotedText</a> '\"'\n<a id=x-single-quoted href=#x-single-quoted>singleQuoted</a> ::= \"'\" *<a href=#x-single-quoted-text>singleQuotedText</a> \"'\"\n\n<a id=x-space-or-tab href=#x-space-or-tab>spaceOrTab</a> ::= ' ' | '\\t'\n<a id=x-text href=#x-text>text</a> ::= <a href=#x-character>character</a> - '<' - '{'\n<a id=x-whitespace href=#x-whitespace>whitespace</a> ::= <a href=#x-es-whitespace>esWhitespace</a>\n<a id=x-double-quoted-text href=#x-double-quoted-text>doubleQuotedText</a> ::= <a href=#x-character>character</a> - '\"'\n<a id=x-single-quoted-text href=#x-single-quoted-text>singleQuotedText</a> ::= <a href=#x-character>character</a> - \"'\"\n<a id=x-expression-text href=#x-expression-text>expressionText</a> ::= <a href=#x-character>character</a> - '{' - '}'\n<a id=x-identifier-start href=#x-identifier-start>identifierStart</a> ::= <a href=#x-es-identifier-start>esIdentifierStart</a>\n<a id=x-identifier-part href=#x-identifier-part>identifierPart</a> ::= <a href=#x-es-identifier-part>esIdentifierPart</a> | '-'\n\n; Unicode\n; Any unicode code point\n<a id=x-character href=#x-character>character</a> ::=\n\n; ECMAScript\n; See “IdentifierStart”: &lt;<a href=https://tc39.es/ecma262/#prod-IdentifierStart>https://tc39.es/ecma262/#prod-IdentifierStart</a>>\n<a id=x-es-identifier-start href=#x-es-identifier-start>esIdentifierStart</a> ::=\n; See “IdentifierPart”: &lt;<a href=https://tc39.es/ecma262/#prod-IdentifierPart>https://tc39.es/ecma262/#prod-IdentifierPart</a>>\n<a id=x-es-identifier-part href=#x-es-identifier-part>esIdentifierPart</a> ::=\n; See “Whitespace”: &lt;<a href=https://tc39.es/ecma262/#prod-WhiteSpace>https://tc39.es/ecma262/#prod-WhiteSpace</a>>\n<a id=x-es-whitespace href=#x-es-whitespace>esWhitespace</a> ::=\n</code></pre>\n\n<!--grammar end-->\n\n## Errors\n\nIn gnostic mode, expressions are parsed with\n[`micromark-extension-mdx-expression`][mdx-expression], which also throws\ncertain errors.\n\n### Unexpected end of file $at, expected $expect\n\nThis error occurs for many different reasons if something was opened but not\nclosed (source: `micromark-extension-mdx-jsx`, rule id: `unexpected-eof`).\n\nSome examples are:\n\n```markdown\n<\n</\n<a\n<a:\n<a.\n<a b\n<a b:\n<a b=\n<a b=\"\n<a b='\n<a b={\n<a/\n```\n\n### Unexpected character $at, expected $expect\n\nThis error occurs for many different reasons if an unexpected character is seen\n(source: `micromark-extension-mdx-jsx`, rule id: `unexpected-character`).\n\nSome examples are:\n\n```markdown\n<.>\n</.>\n<a?>\n<a:+>\n<a./>\n<a b!>\n<a b:1>\n<a b=>\n<a/->\n```\n\n## Tokens\n\nMany tokens are used:\n\n*   `mdxJsxFlowTag` for the whole JSX tag (`<a>`)\n*   `mdxJsxTextTag` ^\n*   `mdxJsxFlowTagMarker` for the tag markers (`<`, `>`)\n*   `mdxJsxTextTagMarker` ^\n*   `mdxJsxFlowTagClosingMarker` for the `/` marking a closing tag (`</a>`)\n*   `mdxJsxTextTagClosingMarker` ^\n*   `mdxJsxFlowTagSelfClosingMarker` for the `/` marking a self-closing tag\n    (`<a/>`)\n*   `mdxJsxTextTagSelfClosingMarker` ^\n*   `mdxJsxFlowTagName` for the whole tag name (`a:b` in `<a:b>`)\n*   `mdxJsxTextTagName` ^\n*   `mdxJsxFlowTagNamePrimary` for the first name (`a` in `<a:b>`)\n*   `mdxJsxTextTagNamePrimary` ^\n*   `mdxJsxFlowTagNameMemberMarker` for the `.` marking in members (`<a.b>`)\n*   `mdxJsxTextTagNameMemberMarker` ^\n*   `mdxJsxFlowTagNameMember` for member names (`b` in `<a:b>`)\n*   `mdxJsxTextTagNameMember` ^\n*   `mdxJsxFlowTagNamePrefixMarker` for the `:` between primary and local\n    (`<a:b>`)\n*   `mdxJsxTextTagNamePrefixMarker` ^\n*   `mdxJsxFlowTagNameLocal` for the local name (`b` in `<a:b>`)\n*   `mdxJsxTextTagNameLocal` ^\n*   `mdxJsxFlowTagExpressionAttribute` for whole expression attributes\n    (`<a {...b}>`)\n*   `mdxJsxTextTagExpressionAttribute` ^\n*   `mdxJsxFlowTagExpressionAttributeMarker` for `{`, `}` in expression\n    attributes\n*   `mdxJsxTextTagExpressionAttributeMarker` ^\n*   `mdxJsxFlowTagExpressionAttributeValue` for chunks of what’s inside\n    expression attributes\n*   `mdxJsxTextTagExpressionAttributeValue` ^\n*   `mdxJsxFlowTagAttribute` for a whole normal attribute (`<a b>`)\n*   `mdxJsxTextTagAttribute` ^\n*   `mdxJsxFlowTagAttributeName` for the whole name of an attribute (`b:c` in\n    `<a b:c>`)\n*   `mdxJsxTextTagAttributeName` ^\n*   `mdxJsxFlowTagAttributeNamePrimary` for the first name of an attribute (`b`\n    in `<a b:c>`)\n*   `mdxJsxTextTagAttributeNamePrimary` ^\n*   `mdxJsxFlowTagAttributeNamePrefixMarker` for the `:` between primary and\n    local (`<a b:c>`)\n*   `mdxJsxTextTagAttributeNamePrefixMarker` ^\n*   `mdxJsxFlowTagAttributeNameLocal` for the local name of an attribute (`c`\n    in `<a b:c>`)\n*   `mdxJsxTextTagAttributeNameLocal` ^\n*   `mdxJsxFlowTagAttributeInitializerMarker` for the `=` between an attribute\n    name and value\n*   `mdxJsxTextTagAttributeInitializerMarker` ^\n*   `mdxJsxFlowTagAttributeValueLiteral` for a string attribute value\n    (`<a b=\"\">`)\n*   `mdxJsxTextTagAttributeValueLiteral` ^\n*   `mdxJsxFlowTagAttributeValueLiteralMarker` for the quotes around a string\n    attribute value (`\"` or `'`)\n*   `mdxJsxTextTagAttributeValueLiteralMarker` ^\n*   `mdxJsxFlowTagAttributeValueLiteralValue` for chunks of what’s inside\n    string attribute values\n*   `mdxJsxTextTagAttributeValueLiteralValue` ^\n*   `mdxJsxFlowTagAttributeValueExpression` for an expression attribute value\n    (`<a b={1}>`)\n*   `mdxJsxTextTagAttributeValueExpression` ^\n*   `mdxJsxFlowTagAttributeValueExpressionMarker` for the `{` and `}` of\n    expression attribute values\n*   `mdxJsxTextTagAttributeValueExpressionMarker` ^\n*   `mdxJsxFlowTagAttributeValueExpressionValue` for chunks of what’s inside\n    expression attribute values\n*   `mdxJsxTextTagAttributeValueExpressionValue` ^\n\n## Related\n\n*   [`micromark/micromark`][micromark]\n    — the smallest commonmark-compliant markdown parser that exists\n*   [`micromark/micromark-extension-mdx`][mdx]\n    — micromark extension to support MDX\n*   [`micromark/micromark-extension-mdxjs`][mdxjs]\n    — micromark extension to support MDX.js\n*   [`micromark/micromark-extension-mdx-expression`][mdx-expression]\n    — micromark extension to support MDX (or MDX.js) expressions\n*   [`micromark/micromark-extension-mdx-md`][mdx-md]\n    — micromark extension to support misc MDX changes\n*   [`micromark/micromark-extension-mdxjs-esm`][mdxjs-esm]\n    — micromark extension to support MDX.js import/exports\n*   [`syntax-tree/mdast-util-mdx`][mdast-util-mdx]\n    — mdast utility to support MDX (or MDX.js)\n\n## Contribute\n\nSee [`contributing.md` in `micromark/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/micromark/micromark-extension-mdx-jsx/workflows/main/badge.svg\n\n[build]: https://github.com/micromark/micromark-extension-mdx-jsx/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/micromark/micromark-extension-mdx-jsx.svg\n\n[coverage]: https://codecov.io/github/micromark/micromark-extension-mdx-jsx\n\n[downloads-badge]: https://img.shields.io/npm/dm/micromark-extension-mdx-jsx.svg\n\n[downloads]: https://www.npmjs.com/package/micromark-extension-mdx-jsx\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/micromark-extension-mdx-jsx.svg\n\n[size]: https://bundlephobia.com/result?p=micromark-extension-mdx-jsx\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/micromark/micromark/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[contributing]: https://github.com/micromark/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/micromark/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/micromark/.github/blob/HEAD/code-of-conduct.md\n\n[micromark]: https://github.com/micromark/micromark\n\n[xdm]: https://github.com/wooorm/xdm\n\n[mdx-js]: https://github.com/mdx-js/mdx\n\n[mdx-expression]: https://github.com/micromark/micromark-extension-mdx-expression\n\n[mdx-md]: https://github.com/micromark/micromark-extension-mdx-md\n\n[mdxjs-esm]: https://github.com/micromark/micromark-extension-mdxjs-esm\n\n[mdx]: https://github.com/micromark/micromark-extension-mdx\n\n[mdxjs]: https://github.com/micromark/micromark-extension-mdxjs\n\n[util]: https://github.com/syntax-tree/mdast-util-mdx-jsx\n\n[mdast-util-mdx]: https://github.com/syntax-tree/mdast-util-mdx\n\n[w3c-bnf]: https://www.w3.org/Notation.html\n\n[acorn]: https://github.com/acornjs/acorn\n\n[from-markdown]: https://github.com/syntax-tree/mdast-util-from-markdown\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2020 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/micromark-extension-mdx-jsx/-/micromark-extension-mdx-jsx-1.0.3.tgz#9f196be5f65eb09d2a49b237a7b3398bba2999be",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/micromark-extension-mdx-jsx/-/micromark-extension-mdx-jsx-1.0.3.tgz",
    "hash": "9f196be5f65eb09d2a49b237a7b3398bba2999be",
    "integrity": "sha512-VfA369RdqUISF0qGgv2FfV7gGjHDfn9+Qfiv5hEwpyr1xscRj/CiVRkU7rywGFCO7JwJ5L0e7CJz60lY52+qOA==",
    "registry": "npm",
    "packageName": "micromark-extension-mdx-jsx",
    "cacheIntegrity": "sha512-VfA369RdqUISF0qGgv2FfV7gGjHDfn9+Qfiv5hEwpyr1xscRj/CiVRkU7rywGFCO7JwJ5L0e7CJz60lY52+qOA== sha1-nxlr5fZesJ0qSbI3p7M5i7opmb4="
  },
  "registry": "npm",
  "hash": "9f196be5f65eb09d2a49b237a7b3398bba2999be"
}