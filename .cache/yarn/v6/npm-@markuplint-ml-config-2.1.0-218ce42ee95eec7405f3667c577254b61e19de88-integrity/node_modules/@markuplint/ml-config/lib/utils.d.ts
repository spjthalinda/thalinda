import type { AnyRule } from './types';
export declare function toRegxp(pattern: string): string | RegExp;
export declare function regexSelectorMatches(reg: string, raw: string): {
    [x: string]: string;
} | null;
/**
 * Return undefined if the template doesn't include the variable that is set as a property in data.
 * But return template string without changes if it doesn't have a variable.
 *
 * @param template Mustache template string
 * @param data Captured string for replacement
 */
export declare function provideValue(template: string, data: Record<string, string>): string | undefined;
export declare function exchangeValueOnRule(rule: AnyRule, data: Record<string, string>): AnyRule | undefined;
