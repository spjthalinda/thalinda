"use strict";
var _MLDOMElementCloseTag_tagOpenChar, _MLDOMElementCloseTag_fixedNodeName;
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const string_splice_1 = require("../../utils/string-splice");
const node_1 = tslib_1.__importDefault(require("./node"));
class MLDOMElementCloseTag extends node_1.default {
    constructor(astNode, document, startTag) {
        super(astNode, document);
        this.nodeType = 1;
        this.type = 'ElementCloseTag';
        _MLDOMElementCloseTag_tagOpenChar.set(this, void 0);
        // readonly #tagCloseChar: string;
        _MLDOMElementCloseTag_fixedNodeName.set(this, void 0);
        this.nodeName = astNode.nodeName;
        tslib_1.__classPrivateFieldSet(this, _MLDOMElementCloseTag_fixedNodeName, astNode.nodeName, "f");
        this.startTag = startTag;
        this.isForeignElement = startTag.isForeignElement;
        this.isCustomElement = astNode.isCustomElement;
        tslib_1.__classPrivateFieldSet(this, _MLDOMElementCloseTag_tagOpenChar, astNode.tagOpenChar, "f");
        // this.#tagCloseChar = astNode.tagCloseChar;
    }
    get raw() {
        let fixed = this.originRaw;
        if (this.nodeName !== tslib_1.__classPrivateFieldGet(this, _MLDOMElementCloseTag_fixedNodeName, "f")) {
            fixed = (0, string_splice_1.stringSplice)(fixed, tslib_1.__classPrivateFieldGet(this, _MLDOMElementCloseTag_tagOpenChar, "f").length, this.nodeName.length, tslib_1.__classPrivateFieldGet(this, _MLDOMElementCloseTag_fixedNodeName, "f"));
        }
        return fixed;
    }
    get rule() {
        return this.startTag.rule;
    }
    fixNodeName(name) {
        tslib_1.__classPrivateFieldSet(this, _MLDOMElementCloseTag_fixedNodeName, name, "f");
    }
    getNameLocation() {
        return {
            offset: this.startOffset,
            line: this.startLine,
            col: this.startCol + tslib_1.__classPrivateFieldGet(this, _MLDOMElementCloseTag_tagOpenChar, "f").length,
        };
    }
}
exports.default = MLDOMElementCloseTag;
_MLDOMElementCloseTag_tagOpenChar = new WeakMap(), _MLDOMElementCloseTag_fixedNodeName = new WeakMap();
