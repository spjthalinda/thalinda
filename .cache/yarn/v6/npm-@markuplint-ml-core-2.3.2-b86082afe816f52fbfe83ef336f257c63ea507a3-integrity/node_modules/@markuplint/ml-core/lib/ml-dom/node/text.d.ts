import type { TextNodeType } from './types';
import type { MLASTText } from '@markuplint/ml-ast';
import type { RuleConfigValue } from '@markuplint/ml-config';
import { MLCharacterData } from './character-data';
export declare class MLText<T extends RuleConfigValue, O = null> extends MLCharacterData<T, O, MLASTText> implements Text {
    /**
     * **IT THROWS AN ERROR WHEN CALLING THIS.**
     *
     * @unsupported
     * @implements DOM API: `Text`
     */
    get assignedSlot(): HTMLSlotElement;
    /**
     * Returns a string appropriate for the type of node as `Text`
     *
     * @see https://dom.spec.whatwg.org/#ref-for-attr%E2%91%A4
     */
    get nodeName(): "#text";
    /**
     * Returns a number appropriate for the type of `Text`
     */
    get nodeType(): TextNodeType;
    get textContent(): string | null;
    /**
     * **IT THROWS AN ERROR WHEN CALLING THIS.**
     *
     * @unsupported
     * @implements DOM API: `Text`
     * @see https://dom.spec.whatwg.org/#ref-for-dom-text-splittext%E2%91%A0
     */
    get wholeText(): string;
    /**
     * Returns `true` if a parent element is `<script>` or `<style>`
     *
     * @implements `@markuplint/ml-core` API: `MLText`
     * @see https://html.spec.whatwg.org/multipage/syntax.html#raw-text-elements
     */
    isRawTextElementContent(): boolean;
    /**
     * @implements `@markuplint/ml-core` API: `MLText`
     */
    isWhitespace(): boolean;
    /**
     * **IT THROWS AN ERROR WHEN CALLING THIS.**
     *
     * @unsupported
     * @implements DOM API: `Text`
     * @see https://dom.spec.whatwg.org/#ref-for-dom-text-wholetext%E2%91%A0
     */
    splitText(offset: number): Text;
}
