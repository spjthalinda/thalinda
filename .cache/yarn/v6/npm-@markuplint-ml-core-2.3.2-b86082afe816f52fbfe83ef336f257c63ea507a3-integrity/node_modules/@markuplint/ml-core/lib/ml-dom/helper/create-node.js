"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createNode = void 0;
const tslib_1 = require("tslib");
const tokens_1 = require("../tokens");
const preprocessor_specific_block_1 = tslib_1.__importDefault(require("../tokens/preprocessor-specific-block"));
function createNode(astNode, document, pearNode) {
    const _astNode = astNode;
    switch (_astNode.type) {
        case 'doctype': {
            return new tokens_1.MLDOMDoctype(_astNode, document);
        }
        case 'starttag': {
            return new tokens_1.MLDOMElement(_astNode, document);
        }
        case 'endtag': {
            return new tokens_1.MLDOMElementCloseTag(_astNode, document, pearNode);
        }
        case 'psblock': {
            return new preprocessor_specific_block_1.default(_astNode, document);
        }
        case 'comment': {
            return new tokens_1.MLDOMComment(_astNode, document);
        }
        case 'text': {
            return new tokens_1.MLDOMText(_astNode, document);
        }
        case 'omittedtag': {
            return new tokens_1.MLDOMOmittedElement(_astNode, document);
        }
    }
    throw new TypeError(`Invalid AST node typs "${astNode.type}"`);
}
exports.createNode = createNode;
