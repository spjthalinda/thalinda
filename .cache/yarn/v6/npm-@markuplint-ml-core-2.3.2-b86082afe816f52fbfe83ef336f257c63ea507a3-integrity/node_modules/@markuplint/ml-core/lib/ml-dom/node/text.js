"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MLText = void 0;
const tslib_1 = require("tslib");
const character_data_1 = require("./character-data");
const unexpected_call_error_1 = tslib_1.__importDefault(require("./unexpected-call-error"));
/**
 * Raw text elements
 *
 * @see https://html.spec.whatwg.org/multipage/syntax.html#raw-text-elements
 */
const rawTextElements = ['script', 'style'];
class MLText extends character_data_1.MLCharacterData {
    /**
     * **IT THROWS AN ERROR WHEN CALLING THIS.**
     *
     * @unsupported
     * @implements DOM API: `Text`
     */
    get assignedSlot() {
        throw new unexpected_call_error_1.default('Not supported  "assignedSlot" property');
    }
    /**
     * Returns a string appropriate for the type of node as `Text`
     *
     * @see https://dom.spec.whatwg.org/#ref-for-attr%E2%91%A4
     */
    get nodeName() {
        return '#text';
    }
    /**
     * Returns a number appropriate for the type of `Text`
     */
    get nodeType() {
        return this.TEXT_NODE;
    }
    get textContent() {
        return this.nodeValue;
    }
    /**
     * **IT THROWS AN ERROR WHEN CALLING THIS.**
     *
     * @unsupported
     * @implements DOM API: `Text`
     * @see https://dom.spec.whatwg.org/#ref-for-dom-text-splittext%E2%91%A0
     */
    get wholeText() {
        throw new unexpected_call_error_1.default('Not supported "wholeText" property');
    }
    /**
     * Returns `true` if a parent element is `<script>` or `<style>`
     *
     * @implements `@markuplint/ml-core` API: `MLText`
     * @see https://html.spec.whatwg.org/multipage/syntax.html#raw-text-elements
     */
    isRawTextElementContent() {
        return this.parentElement ? rawTextElements.includes(this.parentElement.nodeName.toLowerCase()) : false;
    }
    /**
     * @implements `@markuplint/ml-core` API: `MLText`
     */
    isWhitespace() {
        return /^\s+$/.test(this.raw);
    }
    /**
     * **IT THROWS AN ERROR WHEN CALLING THIS.**
     *
     * @unsupported
     * @implements DOM API: `Text`
     * @see https://dom.spec.whatwg.org/#ref-for-dom-text-wholetext%E2%91%A0
     */
    splitText(offset) {
        throw new unexpected_call_error_1.default('Not supported "splitText" method');
    }
}
exports.MLText = MLText;
