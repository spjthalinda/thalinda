"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MLDocumentType = void 0;
const child_node_methods_1 = require("../manipulations/child-node-methods");
const node_1 = require("./node");
class MLDocumentType extends node_1.MLNode {
    constructor(astNode, document) {
        super(astNode, document);
        this.name = astNode.name;
        this.publicId = astNode.publicId;
        this.systemId = astNode.systemId;
    }
    /**
     * Returns a string appropriate for the type of node as `DocumentType`
     *
     * @see https://dom.spec.whatwg.org/#ref-for-documenttype%E2%91%A0%E2%93%AA
     */
    get nodeName() {
        return this.name;
    }
    /**
     * Returns a number appropriate for the type of `DocumentType`
     */
    get nodeType() {
        return this.DOCUMENT_TYPE_NODE;
    }
    /**
     * @implements DOM API: `CharacterData`
     */
    after(...nodes) {
        (0, child_node_methods_1.after)(this, ...nodes);
    }
    /**
     * @implements DOM API: `CharacterData`
     */
    before(...nodes) {
        (0, child_node_methods_1.before)(this, ...nodes);
    }
    /**
     * @implements DOM API: `CharacterData`
     */
    remove() {
        (0, child_node_methods_1.remove)(this);
    }
    /**
     * @implements DOM API: `CharacterData`
     */
    replaceWith(...nodes) {
        (0, child_node_methods_1.replaceWith)(this, ...nodes);
    }
}
exports.MLDocumentType = MLDocumentType;
