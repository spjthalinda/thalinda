import type { MLToken as MLASTToken } from '@markuplint/ml-ast';
export declare class MLToken<A extends MLASTToken = MLASTToken> {
    #private;
    readonly uuid: string;
    protected readonly _astToken: A;
    /**
     * @implements `@markuplint/ml-core` API: `MLDOMToken`
     */
    get endCol(): number;
    /**
     * @implements `@markuplint/ml-core` API: `MLDOMToken`
     */
    get endLine(): number;
    /**
     * @implements `@markuplint/ml-core` API: `MLDOMToken`
     */
    get endOffset(): number;
    /**
     * @implements `@markuplint/ml-core` API: `MLDOMToken`
     */
    get originRaw(): string;
    /**
     * @implements `@markuplint/ml-core` API: `MLDOMToken`
     */
    get raw(): string;
    /**
     * @implements `@markuplint/ml-core` API: `MLDOMToken`
     */
    get startCol(): number;
    /**
     * @implements `@markuplint/ml-core` API: `MLDOMToken`
     */
    get startLine(): number;
    /**
     * @implements `@markuplint/ml-core` API: `MLDOMToken`
     */
    get startOffset(): number;
    constructor(astToken: A);
    /**
     * @implements `@markuplint/ml-core` API: `MLDOMToken`
     */
    fix(raw: string): void;
    /**
     * @implements `@markuplint/ml-core` API: `MLDOMToken`
     */
    toString(): string;
}
