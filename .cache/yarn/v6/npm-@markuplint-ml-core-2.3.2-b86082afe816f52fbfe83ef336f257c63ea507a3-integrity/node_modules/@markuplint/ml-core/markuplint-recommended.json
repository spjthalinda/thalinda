{
	"rules": {
		"attr-duplication": true,
		"attr-equal-space-after": false,
		"attr-equal-space-before": false,
		"attr-spacing": false,
		"attr-value-quotes": false,
		"case-sensitive-attr-name": false,
		"case-sensitive-tag-name": false,
		"character-reference": true,
		"class-naming": false,
		"deprecated-attr": true,
		"deprecated-element": true,
		"disallowed-element": ["hgroup"],
		"doctype": true,
		"end-tag": false,
		"id-duplication": true,
		"indentation": false,
		"ineffective-attr": true,
		"invalid-attr": {
			"option": {
				"attrs": {
					"autofocus": {
						"disallowed": true
					},
					"accesskey": {
						"disallowed": true
					},
					"tabindex": {
						"enum": ["-1", "0"]
					}
				}
			}
		},
		"landmark-roles": true,
		"no-boolean-attr-value": true,
		"no-default-value": false,
		"no-hard-code-id": false,
		"no-refer-to-non-existent-id": true,
		"no-use-event-handler-attr": false,
		"permitted-contents": true,
		"require-accessible-name": true,
		"required-attr": true,
		"required-element": false,
		"required-h1": true,
		"use-list": false,
		"wai-aria": true
	},
	"nodeRules": [
		{
			"selector": ":where(html)",
			"rules": {
				"required-attr": ["lang"]
			}
		},
		{
			"selector": ":where(head)",
			"rules": {
				"required-element": ["meta[charset=\"UTF-8\" i]"]
			}
		},
		{
			"selector": ":where(meta[property])",
			"rules": {
				"invalid-attr": {
					"option": {
						"attrs": {
							"property": {
								"pattern": "/^og:[a-z_]+/"
							},
							"content": {
								"type": "NoEmptyAny"
							}
						}
					}
				},
				"required-attr": false
			}
		},
		{
			"selector": ":where(meta[itemprop])",
			"rules": {
				"invalid-attr": {
					"option": {
						"attrs": {
							"content": {
								"type": "NoEmptyAny"
							}
						}
					}
				}
			}
		},
		{
			"selector": ":where(script[src]:not([type=module]))",
			"rules": {
				"required-attr": ["defer"]
			}
		},
		{
			"selector": "h1, h2, h3, h4, h5, h6",
			"rules": {
				"disallowed-element": {
					"value": ["small"],
					"reason": "The small element must not be used for subheadings. https://html.spec.whatwg.org/multipage/text-level-semantics.html#the-small-element"
				}
			}
		},
		{
			"selector": ":where(img)",
			"rules": {
				"required-attr": [
					"width",
					"height",
					"alt",
					{
						"name": "decoding",
						"value": "async"
					}
				]
			}
		},
		{
			"selector": ":where(iframe)",
			"rules": {
				"required-attr": [
					"title",
					{
						"name": "loading",
						"value": "lazy"
					}
				]
			}
		},
		{
			"selector": ":where(a[target=_blank], area[target=_blank])",
			"rules": {
				"required-attr": {
					"value": [
						{
							"name": "rel",
							"value": "/(?<![^\\s]+)noreferrer(?![^\\s]+)/"
						}
					],
					"reason": "The \"rel\" attribute should be required with \"noreferrer\" if the \"a\" element has the \"target=_blank\""
				}
			}
		},
		{
			"selector": ":where(abbr)",
			"rules": {
				"required-attr": ["title"]
			}
		},
		{
			"selector": ":where(video, audio)",
			"rules": {
				"required-element": ["track"]
			}
		},
		{
			"selector": ":where(video[autoplay])",
			"rules": {
				"required-attr": ["muted"]
			}
		},
		{
			"selector": ":where(th, td)",
			"rules": {
				"invalid-attr": {
					"option": {
						"attrs": {
							"span": {
								"disallowed": false
							}
						}
					}
				}
			}
		},
		{
			"selector": ":where(body :not(button))",
			"rules": {
				"invalid-attr": {
					"option": {
						"attrs": {
							"onclick": {
								"disallowed": false
							}
						}
					}
				}
			}
		}
	]
}
