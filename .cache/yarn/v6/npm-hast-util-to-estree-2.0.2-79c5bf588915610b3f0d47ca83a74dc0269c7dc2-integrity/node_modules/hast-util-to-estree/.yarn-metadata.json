{
  "manifest": {
    "name": "hast-util-to-estree",
    "version": "2.0.2",
    "description": "hast utility to transform to estree (JavaScript AST) JSX",
    "license": "MIT",
    "keywords": [
      "unist",
      "hast",
      "hast-util",
      "util",
      "utility",
      "html",
      "change",
      "transform",
      "rehype",
      "estree",
      "babel",
      "jsx",
      "javascript",
      "ecmascript",
      "mdx"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/syntax-tree/hast-util-to-estree.git"
    },
    "bugs": {
      "url": "https://github.com/syntax-tree/hast-util-to-estree/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "@types/estree-jsx": "^0.0.1",
      "@types/hast": "^2.0.0",
      "@types/unist": "^2.0.0",
      "comma-separated-tokens": "^2.0.0",
      "estree-util-attach-comments": "^2.0.0",
      "estree-util-is-identifier-name": "^2.0.0",
      "hast-util-whitespace": "^2.0.0",
      "mdast-util-mdx-expression": "^1.0.0",
      "mdast-util-mdxjs-esm": "^1.0.0",
      "property-information": "^6.0.0",
      "space-separated-tokens": "^2.0.0",
      "style-to-object": "^0.3.0",
      "unist-util-position": "^4.0.0",
      "zwitch": "^2.0.0"
    },
    "devDependencies": {
      "@babel/core": "^7.0.0",
      "@babel/generator": "^7.0.0",
      "@babel/plugin-transform-react-jsx": "^7.0.0",
      "@types/babel__core": "^7.0.0",
      "@types/tape": "^4.0.0",
      "@vue/babel-plugin-jsx": "^1.0.0",
      "acorn": "^8.0.0",
      "acorn-jsx": "^5.0.0",
      "c8": "^7.0.0",
      "estree-to-babel": "^3.0.0",
      "estree-util-build-jsx": "^2.0.0",
      "hast-util-from-parse5": "^7.0.0",
      "hastscript": "^7.0.0",
      "mdast-util-from-markdown": "^1.0.0",
      "mdast-util-mdx": "^1.0.0",
      "mdast-util-to-hast": "^11.0.0",
      "micromark-extension-mdxjs": "^1.0.0",
      "parse5": "^6.0.0",
      "prettier": "^2.0.0",
      "recast": "^0.20.0",
      "remark-cli": "^10.0.0",
      "remark-preset-wooorm": "^9.0.0",
      "rimraf": "^3.0.0",
      "tape": "^5.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "unist-util-visit": "^4.0.0",
      "vfile": "^5.0.0",
      "xo": "^0.44.0"
    },
    "scripts": {
      "prepack": "npm run build && npm run format",
      "build": "rimraf \"*.d.ts\" && tsc && type-coverage",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node test.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node test.js",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true,
      "#": "needed any",
      "ignoreFiles": [
        "index.d.ts"
      ]
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-hast-util-to-estree-2.0.2-79c5bf588915610b3f0d47ca83a74dc0269c7dc2-integrity/node_modules/hast-util-to-estree/package.json",
    "readmeFilename": "readme.md",
    "readme": "# hast-util-to-estree\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n**[hast][]** utility to transform a *[tree][]* to **[estree][]** JSX.\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c):\nNode 12+ is needed to use it and it must be `import`ed instead of `require`d.\n\n[npm][]:\n\n```sh\nnpm install hast-util-to-estree\n```\n\n## Use\n\nSay we have the following HTML file, `example.html`:\n\n```html\n<!doctype html>\n<html lang=en>\n<title>Hi!</title>\n<link rel=stylesheet href=index.css>\n<h1>Hello, world!</h1>\n<a download style=\"width:1;height:10px\"></a>\n<!--commentz-->\n<svg xmlns=\"http://www.w3.org/2000/svg\">\n  <title>SVG `&lt;ellipse&gt;` element</title>\n  <ellipse\n    cx=\"120\"\n    cy=\"70\"\n    rx=\"100\"\n    ry=\"50\"\n  />\n</svg>\n<script src=\"index.js\"></script>\n```\n\nAnd our script, `example.js`, is:\n\n```js\nimport fs from 'node:fs'\nimport parse5 from 'parse5'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toEstree} from 'hast-util-to-estree'\nimport recast from 'recast'\n\nconst hast = fromParse5(parse5.parse(String(fs.readFileSync('example.html'))))\n\nconst estree = toEstree(hast)\n\nestree.comments = null // `recast` doesn’t like comments on the root.\nconsole.log(recast.prettyPrint(estree).code)\n```\n\nNow, `node example` (and prettier), yields:\n\n```jsx\n;<>\n  <html lang=\"en\">\n    <head>\n      <title>{'Hi!'}</title>\n      {'\\n'}\n      <link rel=\"stylesheet\" href=\"index.css\" />\n      {'\\n'}\n    </head>\n    <body>\n      <h1>{'Hello, world!'}</h1>\n      {'\\n'}\n      <a\n        download\n        style={{\n          width: '1',\n          height: '10px'\n        }}\n      />\n      {'\\n'}\n      {/*commentz*/}\n      {'\\n'}\n      <svg xmlns=\"http://www.w3.org/2000/svg\">\n        {'\\n  '}\n        <title>{'SVG `<ellipse>` element'}</title>\n        {'\\n  '}\n        <ellipse cx=\"120\" cy=\"70\" rx=\"100\" ry=\"50\" />\n        {'\\n'}\n      </svg>\n      {'\\n'}\n      <script src=\"index.js\" />\n      {'\\n'}\n    </body>\n  </html>\n</>\n```\n\n## API\n\nThis package exports the following identifiers: `toEstree`.\nThere is no default export.\n\n### `toEstree(tree, options?)`\n\nTransform a **[hast][]** *[tree][]* to an **[estree][]** (JSX).\n\n##### `options`\n\n*   `space` (enum, `'svg'` or `'html'`, default: `'html'`)\n    — Whether node is in the `'html'` or `'svg'` space.\n    If an `svg` element is found when inside the HTML space, `toEstree`\n    automatically switches to the SVG space when entering the element, and\n    switches back when exiting\n\n###### Returns\n\n**[estree][]** — a *[Program][]* node, whose last child in `body` is most\nlikely an `ExpressionStatement` whose expression is a `JSXFragment` or a\n`JSXElement`.\n\nTypically, there is only one node in `body`, however, this utility also supports\nembedded MDX nodes in the HTML (when [`mdast-util-mdx`][mdast-util-mdx] is used\nwith mdast to parse markdown before passing its nodes through to hast).\nWhen MDX ESM import/exports are used, those nodes are added before the fragment\nor element in body.\n\n###### Note\n\nComments are both attached to the tree in their neighbouring nodes (recast and\nbabel style), and added as a `comments` array on the program node (espree\nstyle).\nYou may have to do `program.comments = null` for certain compilers.\n\nThere aren’t many great estree serializers out there that support JSX.\n[recast][] does a fine job.\nOr use [`estree-util-build-jsx`][build-jsx] to turn JSX into function\ncalls and then serialize with whatever (astring, escodegen).\n\n## Security\n\nYou’re working with JavaScript.\nIt’s not safe.\n\n## Related\n\n*   [`hastscript`][hastscript]\n    — Hyperscript compatible interface for creating nodes\n*   [`hast-util-from-dom`](https://github.com/syntax-tree/hast-util-from-dom)\n    — Transform a DOM tree to hast\n*   [`unist-builder`](https://github.com/syntax-tree/unist-builder)\n    — Create any unist tree\n*   [`xastscript`](https://github.com/syntax-tree/xastscript)\n    — Create a xast tree\n*   [`estree-util-build-jsx`][build-jsx]\n    — Transform JSX to function calls\n\n## Contribute\n\nSee [`contributing.md` in `syntax-tree/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/syntax-tree/hast-util-to-estree/workflows/main/badge.svg\n\n[build]: https://github.com/syntax-tree/hast-util-to-estree/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/syntax-tree/hast-util-to-estree.svg\n\n[coverage]: https://codecov.io/github/syntax-tree/hast-util-to-estree\n\n[downloads-badge]: https://img.shields.io/npm/dm/hast-util-to-estree.svg\n\n[downloads]: https://www.npmjs.com/package/hast-util-to-estree\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/hast-util-to-estree.svg\n\n[size]: https://bundlephobia.com/result?p=hast-util-to-estree\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/syntax-tree/unist/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[contributing]: https://github.com/syntax-tree/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/syntax-tree/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/syntax-tree/.github/blob/HEAD/code-of-conduct.md\n\n[hastscript]: https://github.com/syntax-tree/hastscript\n\n[tree]: https://github.com/syntax-tree/unist#tree\n\n[hast]: https://github.com/syntax-tree/hast\n\n[estree]: https://github.com/estree/estree\n\n[program]: https://github.com/estree/estree/blob/master/es5.md#programs\n\n[recast]: https://github.com/benjamn/recast\n\n[mdast-util-mdx]: https://github.com/syntax-tree/mdast-util-mdx\n\n[build-jsx]: https://github.com/wooorm/estree-util-build-jsx\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/hast-util-to-estree/-/hast-util-to-estree-2.0.2.tgz#79c5bf588915610b3f0d47ca83a74dc0269c7dc2",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/hast-util-to-estree/-/hast-util-to-estree-2.0.2.tgz",
    "hash": "79c5bf588915610b3f0d47ca83a74dc0269c7dc2",
    "integrity": "sha512-UQrZVeBj6A9od0lpFvqHKNSH9zvDrNoyWKbveu1a2oSCXEDUI+3bnd6BoiQLPnLrcXXn/jzJ6y9hmJTTlvf8lQ==",
    "registry": "npm",
    "packageName": "hast-util-to-estree",
    "cacheIntegrity": "sha512-UQrZVeBj6A9od0lpFvqHKNSH9zvDrNoyWKbveu1a2oSCXEDUI+3bnd6BoiQLPnLrcXXn/jzJ6y9hmJTTlvf8lQ== sha1-ecW/WIkVYQs/DUfKg6dNwCacfcI="
  },
  "registry": "npm",
  "hash": "79c5bf588915610b3f0d47ca83a74dc0269c7dc2"
}