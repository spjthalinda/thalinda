"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const idl_attributes_1 = require("./idl-attributes");
it('basic', () => {
    expect((0, idl_attributes_1.searchIDLAttribute)('class')).toStrictEqual({
        idlPropName: 'className',
        contentAttrName: 'class',
    });
    expect((0, idl_attributes_1.searchIDLAttribute)('for')).toStrictEqual({
        idlPropName: 'htmlFor',
        contentAttrName: 'for',
    });
    expect((0, idl_attributes_1.searchIDLAttribute)('className')).toStrictEqual({
        idlPropName: 'className',
        contentAttrName: 'class',
    });
    expect((0, idl_attributes_1.searchIDLAttribute)('htmlFor')).toStrictEqual({
        idlPropName: 'htmlFor',
        contentAttrName: 'for',
    });
    expect((0, idl_attributes_1.searchIDLAttribute)('tabindex')).toStrictEqual({
        idlPropName: 'tabIndex',
        contentAttrName: 'tabindex',
    });
    expect((0, idl_attributes_1.searchIDLAttribute)('tab-index')).toStrictEqual({
        idlPropName: 'tabIndex',
        contentAttrName: 'tabindex',
    });
    expect((0, idl_attributes_1.searchIDLAttribute)('TabIndex')).toStrictEqual({
        idlPropName: 'tabIndex',
        contentAttrName: 'tabindex',
    });
    expect((0, idl_attributes_1.searchIDLAttribute)('x')).toStrictEqual({
        idlPropName: 'x',
        contentAttrName: 'x',
    });
    expect((0, idl_attributes_1.searchIDLAttribute)('y')).toStrictEqual({
        idlPropName: 'y',
        contentAttrName: 'y',
    });
    expect((0, idl_attributes_1.searchIDLAttribute)('attribute-name')).toStrictEqual({
        idlPropName: 'attributeName',
        contentAttrName: 'attributeName',
    });
});
