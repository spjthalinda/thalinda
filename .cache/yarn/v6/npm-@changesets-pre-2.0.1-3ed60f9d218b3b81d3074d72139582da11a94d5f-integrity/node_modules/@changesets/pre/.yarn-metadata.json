{
  "manifest": {
    "name": "@changesets/pre",
    "version": "2.0.1",
    "description": "Utils to make a Changesets repo enter and exit pre mode",
    "main": "dist/changesets-pre.cjs.js",
    "module": "dist/changesets-pre.esm.js",
    "exports": {
      ".": {
        "types": {
          "import": "./dist/changesets-pre.cjs.mjs",
          "default": "./dist/changesets-pre.cjs.js"
        },
        "module": "./dist/changesets-pre.esm.js",
        "import": "./dist/changesets-pre.cjs.mjs",
        "default": "./dist/changesets-pre.cjs.js"
      },
      "./package.json": "./package.json"
    },
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/changesets/changesets/tree/main/packages/pre"
    },
    "dependencies": {
      "@changesets/errors": "^0.2.0",
      "@changesets/types": "^6.0.0",
      "@manypkg/get-packages": "^1.1.3",
      "fs-extra": "^7.0.1"
    },
    "devDependencies": {
      "@changesets/test-utils": "*"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-@changesets-pre-2.0.1-3ed60f9d218b3b81d3074d72139582da11a94d5f-integrity/node_modules/@changesets/pre/package.json",
    "readmeFilename": "README.md",
    "readme": "# @changesets/pre\n\n[![View changelog](https://img.shields.io/badge/changelogs.xyz-Explore%20Changelog-brightgreen)](https://changelogs.xyz/@changesets/pre)\n\nEnter and exit pre mode in a Changesets repo.\n\n## Usage\n\n```ts\nimport { enterPre, exitPre } from \"@changesets/pre\";\n\nawait enterPre(cwd, tag);\n\nlet preState = await readPreState(cwd);\n\n// version packages with @changesets/cli or get a release plan and apply it\nawait exitPre(cwd);\n```\n\nThis package is used by internally by Changesets to enter and exit pre mode along with reading the pre state for the `publish` and `version` commands, you should only need it if you're using `@changesets/assemble-release-plan`, implementing Changesets or want to enter or exit pre mode programmatically.\n\n## Types\n\n```ts\nimport { PreState } from \"@changesets/types\";\n\nexport function enterPre(cwd: string, tag: string): Promise<void>;\nexport function exitPre(cwd: string): Promise<void>;\nexport function readPreState(cwd: string): Promise<PreState>;\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@changesets/pre/-/pre-2.0.1.tgz#3ed60f9d218b3b81d3074d72139582da11a94d5f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@changesets/pre/-/pre-2.0.1.tgz",
    "hash": "3ed60f9d218b3b81d3074d72139582da11a94d5f",
    "integrity": "sha512-vvBJ/If4jKM4tPz9JdY2kGOgWmCowUYOi5Ycv8dyLnEE8FgpYYUo1mgJZxcdtGGP3aG8rAQulGLyyXGSLkIMTQ==",
    "registry": "npm",
    "packageName": "@changesets/pre",
    "cacheIntegrity": "sha512-vvBJ/If4jKM4tPz9JdY2kGOgWmCowUYOi5Ycv8dyLnEE8FgpYYUo1mgJZxcdtGGP3aG8rAQulGLyyXGSLkIMTQ== sha1-PtYPnSGLO4HTB01yE5WC2hGpTV8="
  },
  "registry": "npm",
  "hash": "3ed60f9d218b3b81d3074d72139582da11a94d5f"
}