{
  "manifest": {
    "name": "unified-message-control",
    "version": "4.0.0",
    "description": "Enable, disable, and ignore messages from unified processors",
    "license": "MIT",
    "keywords": [
      "unified",
      "unified-plugin",
      "comment",
      "message",
      "marker",
      "control"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/unifiedjs/unified-message-control.git"
    },
    "bugs": {
      "url": "https://github.com/unifiedjs/unified-message-control/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      },
      {
        "name": "Christian Murphy",
        "email": "christian.murphy.42@gmail.com",
        "url": "https://github.com/ChristianMurphy"
      },
      {
        "name": "Thomas 'zemnmez' Shadwell",
        "url": "https://github.com/zemnmez"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "@types/unist": "^2.0.0",
      "unist-util-is": "^5.0.0",
      "unist-util-visit": "^3.0.0",
      "vfile": "^5.0.0",
      "vfile-location": "^4.0.0",
      "vfile-message": "^3.0.0"
    },
    "devDependencies": {
      "@types/tape": "^4.0.0",
      "c8": "^7.0.0",
      "mdast-comment-marker": "^2.0.0",
      "prettier": "^2.0.0",
      "remark": "^13.0.0",
      "remark-cli": "^9.0.0",
      "remark-preset-wooorm": "^8.0.0",
      "remark-toc": "^7.0.0",
      "rimraf": "^3.0.0",
      "tape": "^5.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "unified": "^10.0.0",
      "xo": "^0.39.0"
    },
    "scripts": {
      "build": "rimraf \"*.d.ts\" && tsc && type-coverage",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node --conditions development test.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node --conditions development test.js",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-unified-message-control-4.0.0-7cd313df526fc660f218b19a56377bb6957019a8-integrity/node_modules/unified-message-control/package.json",
    "readmeFilename": "readme.md",
    "readme": "# unified-message-control\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\nEnable, disable, and ignore messages with [**unified**][unified].\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c):\nNode 12+ is needed to use it and it must be `import`ed instead of `require`d.\n\n[npm][]:\n\n```sh\nnpm install unified-message-control\n```\n\n## Use\n\nSay we have the following file, `example.md`:\n\n```markdown\n<!--foo ignore-->\n\n## Heading\n```\n\nAnd our script, `example.js`, looks as follows:\n\n```js\nimport {toVFile} from 'to-vfile'\nimport {reporter} from 'vfile-reporter'\nimport {commentMarker} from 'mdast-comment-marker'\nimport {unified} from 'unified'\nimport unifiedMessageControl from 'unified-message-control'\nimport remarkParse from 'remark-parse'\nimport remarkStringify from 'remark-stringify'\n\ntoVFile.read('example.md').then((file) => {\n  unified()\n    .use(remarkParse)\n    .use(remarkStringify)\n    .use(() => (tree, file) => {\n      file.message('Whoops!', tree.children[1], 'foo:thing')\n    })\n    .use(unifiedMessageControl, {\n      name: 'foo',\n      marker: commentMarker,\n      test: 'html'\n    })\n    .process(file)\n    .then((file) => {\n      console.error(reporter(file))\n    })\n})\n```\n\nNow, running `node example` yields:\n\n```markdown\nexample.md: no issues found\n```\n\n## API\n\nThis package exports the following identifiers: `messageControl`.\nThere is no default export.\n\n### `unified().use(messageControl, options)`\n\nLet comment markers control messages from certain sources.\n\n##### `options`\n\n###### `options.name`\n\nName of markers that can control the message sources (`string`).\n\nFor example, `{name: 'alpha'}` controls `alpha` markers:\n\n```markdown\n<!--alpha ignore-->\n```\n\n###### `options.test`\n\nTest for possible markers (`Function`, `string`, `Object`, or `Array.<Test>`).\nSee [`unist-util-is`][test].\n\n###### `options.marker`\n\nParse a possible marker to a [comment marker object][marker] (`Function`).\nIf the possible marker actually isn’t a marker, should return `null`.\n\n###### `options.known`\n\nList of allowed `ruleId`s (`Array.<string>`, optional).\nWhen given, a warning is shown when someone tries to control an unknown rule.\n\nFor example, `{name: 'alpha', known: ['bravo']}` results in a warning if\n`charlie` is configured:\n\n```markdown\n<!--alpha ignore charlie-->\n```\n\n###### `options.reset`\n\nWhether to treat all messages as turned off initially (`boolean`, default:\n`false`).\n\n###### `options.enable`\n\nList of `ruleId`s to initially turn on if `reset: true`\n(`Array.<string>`, optional).\nBy default (`reset: false`), all rules are turned on.\n\n###### `options.disable`\n\nList of `ruleId`s to turn on if `reset: false` (`Array.<string>`, optional).\n\n###### `options.sources`\n\nSources that can be controlled with `name` markers (`string` or\n`Array.<string>`, default: `options.name`)\n\n### Markers\n\n###### `disable`\n\nThe **disable** keyword turns off all messages of the given rule identifiers.\nWhen without identifiers, all messages are turned off.\n\nFor example, to turn off certain messages:\n\n```markdown\n<!--lint disable list-item-bullet-indent strong-marker-->\n\n*   **foo**\n\nA paragraph, and now another list.\n\n  * __bar__\n```\n\n###### `enable`\n\nThe **enable** keyword turns on all messages of the given rule identifiers.\nWhen without identifiers, all messages are turned on.\n\nFor example, to enable certain messages:\n\n```markdown\n<!--lint enable strong-marker-->\n\n**foo** and __bar__.\n```\n\n###### `ignore`\n\nThe **ignore** keyword turns off all messages of the given `ruleId`s occurring\nin the following node.\nWhen without `ruleId`s, all messages are ignored.\n\nAfter the end of the following node, messages are turned on again.\n\nFor example, to turn off certain messages for the next node:\n\n```markdown\n<!--lint ignore list-item-bullet-indent strong-marker-->\n\n*   **foo**\n    * __bar__\n```\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`unifiedjs/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/unifiedjs/unified-message-control/workflows/main/badge.svg\n\n[build]: https://github.com/unifiedjs/unified-message-control/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/unifiedjs/unified-message-control.svg\n\n[coverage]: https://codecov.io/github/unifiedjs/unified-message-control\n\n[downloads-badge]: https://img.shields.io/npm/dm/unified-message-control.svg\n\n[downloads]: https://www.npmjs.com/package/unified-message-control\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/unified-message-control.svg\n\n[size]: https://bundlephobia.com/result?p=unified-message-control\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/unifiedjs/unified/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[health]: https://github.com/unifiedjs/.github\n\n[contributing]: https://github.com/unifiedjs/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/unifiedjs/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/unifiedjs/.github/blob/HEAD/code-of-conduct.md\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[marker]: https://github.com/syntax-tree/mdast-comment-marker#marker\n\n[unified]: https://github.com/unifiedjs/unified\n\n[test]: https://github.com/syntax-tree/unist-util-is#api\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/unified-message-control/-/unified-message-control-4.0.0.tgz#7cd313df526fc660f218b19a56377bb6957019a8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/unified-message-control/-/unified-message-control-4.0.0.tgz",
    "hash": "7cd313df526fc660f218b19a56377bb6957019a8",
    "integrity": "sha512-1b92N+VkPHftOsvXNOtkJm4wHlr+UDmTBF2dUzepn40oy9NxanJ9xS1RwUBTjXJwqr2K0kMbEyv1Krdsho7+Iw==",
    "registry": "npm",
    "packageName": "unified-message-control",
    "cacheIntegrity": "sha512-1b92N+VkPHftOsvXNOtkJm4wHlr+UDmTBF2dUzepn40oy9NxanJ9xS1RwUBTjXJwqr2K0kMbEyv1Krdsho7+Iw== sha1-fNMT31JvxmDyGLGaVjd7tpVwGag="
  },
  "registry": "npm",
  "hash": "7cd313df526fc660f218b19a56377bb6957019a8"
}