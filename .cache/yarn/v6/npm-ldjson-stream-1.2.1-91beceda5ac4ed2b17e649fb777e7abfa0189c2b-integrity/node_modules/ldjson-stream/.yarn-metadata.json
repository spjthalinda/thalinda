{
  "manifest": {
    "name": "ldjson-stream",
    "version": "1.2.1",
    "description": "streaming line delimited json parser + serializer",
    "main": "index.js",
    "scripts": {
      "test": "tape test.js"
    },
    "author": {
      "name": "max ogden"
    },
    "license": "BSD",
    "dependencies": {
      "split2": "^0.2.1",
      "through2": "^0.6.1"
    },
    "devDependencies": {
      "tape": "^2.13.3"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/maxogden/ldjson-stream.git"
    },
    "bugs": {
      "url": "https://github.com/maxogden/ldjson-stream/issues"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-ldjson-stream-1.2.1-91beceda5ac4ed2b17e649fb777e7abfa0189c2b-integrity/node_modules/ldjson-stream/package.json",
    "readmeFilename": "readme.md",
    "readme": "# ldjson-stream\n\n#### streaming line delimited json parser + serializer\n\n[![NPM](https://nodei.co/npm/ldjson-stream.png)](https://nodei.co/npm/ldjson-stream/)\n\n## usage\n\n```\nvar ldj = require('ldjson-stream')\n```\n\n#### ldj.parse()\n\nreturns a transform stream that accepts newline delimited json and emits objects\n\nexample newline delimited json:\n\n`data.txt`:\n\n```\n{\"foo\": \"bar\"}\n{\"hello\": \"world\"}\n```\n\nIf you want to discard non-valid JSON messages, you can call `ldj.parse({strict: false})`\n\nusage:\n\n```js\nfs.createReadStream('data.txt')\n  .pipe(ldj.parse())\n  .on('data', function(obj) {\n    // obj is a javascript object\n  })\n```\n\n#### ldj.serialize()\n\nreturns a transform stream that accepts json objects and emits newline delimited json\n\nexample usage:\n\n```js\nvar serialize = ldj.serialize()\nserialize.on('data', function(line) {\n  // line is a line of stringified JSON with a newline delimiter at the end\n})\nserialize.write({\"foo\": \"bar\"})\nserialize.end()\n```\n\n### license\n\nBSD\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/ldjson-stream/-/ldjson-stream-1.2.1.tgz#91beceda5ac4ed2b17e649fb777e7abfa0189c2b",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/ldjson-stream/-/ldjson-stream-1.2.1.tgz",
    "hash": "91beceda5ac4ed2b17e649fb777e7abfa0189c2b",
    "integrity": "sha1-kb7O2lrE7SsX5kn7d356v6AYnCs=",
    "registry": "npm",
    "packageName": "ldjson-stream",
    "cacheIntegrity": "sha512-xw/nNEXafuPSLu8NjjG3+atVVw+8U1APZAQylmwQn19Hgw6rC7QjHvP6MupnHWCrzSm9m0xs5QWkCLuRvBPjgQ== sha1-kb7O2lrE7SsX5kn7d356v6AYnCs="
  },
  "registry": "npm",
  "hash": "91beceda5ac4ed2b17e649fb777e7abfa0189c2b"
}