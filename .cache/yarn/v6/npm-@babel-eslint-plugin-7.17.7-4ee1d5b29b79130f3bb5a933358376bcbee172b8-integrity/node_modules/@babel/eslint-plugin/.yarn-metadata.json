{
  "manifest": {
    "name": "@babel/eslint-plugin",
    "version": "7.17.7",
    "description": "Companion rules for @babel/eslint-parser",
    "main": "./lib/index.cjs",
    "type": "commonjs",
    "exports": {
      ".": "./lib/index.cjs",
      "./package.json": "./package.json"
    },
    "publishConfig": {
      "access": "public"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/babel/babel.git",
      "directory": "eslint/babel-eslint-plugin"
    },
    "keywords": [
      "babel",
      "eslint",
      "eslintplugin",
      "eslint-plugin",
      "babel-eslint"
    ],
    "author": {
      "name": "The Babel Team",
      "url": "https://babel.dev/team"
    },
    "license": "MIT",
    "engines": {
      "node": "^10.13.0 || ^12.13.0 || >=14.0.0"
    },
    "bugs": {
      "url": "https://github.com/babel/babel/issues"
    },
    "homepage": "https://babel.dev/",
    "peerDependencies": {
      "@babel/eslint-parser": ">=7.11.0",
      "eslint": ">=7.5.0"
    },
    "dependencies": {
      "eslint-rule-composer": "^0.3.0"
    },
    "devDependencies": {
      "clone-deep": "^4.0.1",
      "eslint": "^7.27.0"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-@babel-eslint-plugin-7.17.7-4ee1d5b29b79130f3bb5a933358376bcbee172b8-integrity/node_modules/@babel/eslint-plugin/package.json",
    "readmeFilename": "README.md",
    "readme": "# @babel/eslint-plugin\n\nCompanion rules for `@babel/eslint-parser`. `@babel/eslint-parser` does a great job at adapting `eslint`\nfor use with Babel, but it can't change the built-in rules to support experimental features.\n`@babel/eslint-plugin` re-implements problematic rules so they do not give false positives or negatives.\n\n> Requires Node 10.13 or greater\n\n### Install\n\n```sh\nnpm install @babel/eslint-plugin --save-dev\n```\n\nLoad the plugin in your `.eslintrc.json` file:\n\n```json\n{\n  \"plugins\": [\"@babel\"]\n}\n```\n\nFinally enable all the rules you would like to use (remember to disable the\noriginal ones as well!).\n\n```json\n{\n  \"rules\": {\n    \"@babel/new-cap\": \"error\",\n    \"@babel/no-invalid-this\": \"error\",\n    \"@babel/no-unused-expressions\": \"error\",\n    \"@babel/object-curly-spacing\": \"error\",\n    \"@babel/semi\": \"error\"\n  }\n}\n```\n\n### Rules\n\nEach rule corresponds to a core `eslint` rule and has the same options.\n\nðŸ› : means it's autofixable with `--fix`.\n\n- `@babel/new-cap`: handles decorators (`@Decorator`)\n- `@babel/no-invalid-this`: handles class fields and private class methods (`class A { a = this.b; }`)\n- `@babel/no-unused-expressions`: handles `do` expressions\n- `@babel/object-curly-spacing`: handles `export * as x from \"mod\";` (ðŸ› )\n- `@babel/semi`: Handles class properties (ðŸ› )\n\n## TypeScript\n\nWhile [`@babel/eslint-parser`](https://github.com/babel/babel/tree/main/eslint/babel-eslint-parser) can parse TypeScript, we don't currently support linting TypeScript using the rules in [`@babel/eslint-plugin`](https://github.com/babel/babel/tree/main/eslint/babel-eslint-plugin). This is because the TypeScript community has centered around [`@typescript-eslint`](https://github.com/typescript-eslint/typescript-eslint) and we want to avoid duplicate work. Additionally, since [`@typescript-eslint`](https://github.com/typescript-eslint/typescript-eslint) uses TypeScript under the hood, its rules can be made type-aware, which is something Babel doesn't have the ability to do.\n",
    "licenseText": "Copyright (c) 2014-2015 Jason Quense <jason@quense.me>\nOriginal work by respective rule authors; copywrites noted in files.\n\nMIT License\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@babel/eslint-plugin/-/eslint-plugin-7.17.7.tgz#4ee1d5b29b79130f3bb5a933358376bcbee172b8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@babel/eslint-plugin/-/eslint-plugin-7.17.7.tgz",
    "hash": "4ee1d5b29b79130f3bb5a933358376bcbee172b8",
    "integrity": "sha512-JATUoJJXSgwI0T8juxWYtK1JSgoLpIGUsCHIv+NMXcUDA2vIe6nvAHR9vnuJgs/P1hOFw7vPwibixzfqBBLIVw==",
    "registry": "npm",
    "packageName": "@babel/eslint-plugin",
    "cacheIntegrity": "sha512-JATUoJJXSgwI0T8juxWYtK1JSgoLpIGUsCHIv+NMXcUDA2vIe6nvAHR9vnuJgs/P1hOFw7vPwibixzfqBBLIVw== sha1-TuHVspt5Ew87takzNYN2vL7hcrg="
  },
  "registry": "npm",
  "hash": "4ee1d5b29b79130f3bb5a933358376bcbee172b8"
}