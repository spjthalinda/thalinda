{
  "manifest": {
    "name": "cosmiconfig-typescript-loader",
    "version": "2.0.0",
    "description": "TypeScript loader for cosmiconfig",
    "author": {
      "name": "Alex Miller",
      "email": "codex.nz@gmail.com"
    },
    "license": "MIT",
    "main": "dist/index.js",
    "types": "dist/index.d.ts",
    "files": [
      "dist/**/*"
    ],
    "homepage": "https://github.com/Codex-/cosmiconfig-typescript-loader#readme",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/Codex-/cosmiconfig-typescript-loader.git"
    },
    "bugs": {
      "url": "https://github.com/Codex-/cosmiconfig-typescript-loader/issues"
    },
    "scripts": {
      "build": "tsc",
      "format:check": "prettier --check \"{**/*,*}.{js,ts}\"",
      "format:write": "npm run format:check -- --write",
      "lint": "eslint --ext \".js,.ts\" .",
      "lint:fix": "npm run lint -- --fix",
      "release": "release-it",
      "test": "jest"
    },
    "engines": {
      "node": ">=12",
      "npm": ">=6"
    },
    "peerDependencies": {
      "@types/node": "*",
      "cosmiconfig": ">=7",
      "typescript": ">=3"
    },
    "dependencies": {
      "cosmiconfig": "^7",
      "ts-node": "^10.7.0"
    },
    "devDependencies": {
      "@types/jest": "^27.4.1",
      "@typescript-eslint/eslint-plugin": "^5.21.0",
      "eslint": "^8.14.0",
      "eslint-config-airbnb-typescript": "^17.0.0",
      "eslint-config-prettier": "^8.5.0",
      "eslint-plugin-import": "^2.26.0",
      "eslint-plugin-prettier": "^4.0.0",
      "jest": "^27.5.1",
      "prettier": "^2.6.2",
      "release-it": "^14.14.2",
      "ts-jest": "^27.1.4",
      "typescript": "^4.6.4"
    },
    "keywords": [
      "cosmiconfig",
      "typescript"
    ],
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-cosmiconfig-typescript-loader-2.0.0-bc4f5bfcaa11a353714ecdef00c4f2226ef191b8-integrity/node_modules/cosmiconfig-typescript-loader/package.json",
    "readmeFilename": "README.md",
    "readme": "# cosmiconfig-typescript-loader\n\n> ‚öôÔ∏èüöÄ TypeScript config file support for cosmiconfig\n\n[![build](https://github.com/Codex-/cosmiconfig-typescript-loader/actions/workflows/build.yml/badge.svg)](https://github.com/Codex-/cosmiconfig-typescript-loader/actions/workflows/build.yml)\n[![codecov](https://codecov.io/gh/Codex-/cosmiconfig-typescript-loader/branch/main/graph/badge.svg?token=WWGNIPC249)](https://codecov.io/gh/Codex-/cosmiconfig-typescript-loader)\n[![npm](https://img.shields.io/npm/v/cosmiconfig-typescript-loader.svg)](https://www.npmjs.com/package/cosmiconfig-typescript-loader)\n\n## `@endemolshinegroup/cosmiconfig-typescript-loader`\n\nThis package serves as a drop in replacement for `@endemolshinegroup/cosmiconfig-typescript-loader`. At the time of publishing this, `endemolshinegroup` is not maintaining the original package. I can only assume this is to do with the fact that Endemol Shine Group [was purchased and absorbed by another business](https://en.wikipedia.org/wiki/Endemol_Shine_Group#Sale_to_Banijay). This discontinuation of development efforts towards the original package left any open issues and pull requests unresolved.\n\nThis new package resolves the following original issues:\n\n- [`#134`](https://github.com/EndemolShineGroup/cosmiconfig-typescript-loader/issues/134): \"Doesn't work with Cosmiconfig sync API\"\n- [`#147`](https://github.com/EndemolShineGroup/cosmiconfig-typescript-loader/issues/147): \"doesn't provide typescript, requested by ts-node\"\n- [`#155`](https://github.com/EndemolShineGroup/cosmiconfig-typescript-loader/issues/155): \"Misleading TypeScriptCompileError when user's tsconfig.json \"module\" is set to \"es2015\"\"\n\n## Usage\n\nSimply add `TypeScriptLoader` to the list of loaders for the `.ts` file type:\n\n```ts\nimport { cosmiconfig } from \"cosmiconfig\";\nimport TypeScriptLoader from \"cosmiconfig-typescript-loader\";\n\nconst moduleName = \"module\";\nconst explorer = cosmiconfig(\"test\", {\n  searchPlaces: [\n    \"package.json\",\n    `.${moduleName}rc`,\n    `.${moduleName}rc.json`,\n    `.${moduleName}rc.yaml`,\n    `.${moduleName}rc.yml`,\n    `.${moduleName}rc.js`,\n    `.${moduleName}rc.ts`,\n    `.${moduleName}rc.cjs`,\n    `${moduleName}.config.js`,\n    `${moduleName}.config.ts`,\n    `${moduleName}.config.cjs`,\n  ],\n  loaders: {\n    \".ts\": TypeScriptLoader(),\n  },\n});\n\nconst cfg = explorer.load(\"./\");\n```\n\nOr more simply if you only support loading of a TypeScript based configuration file:\n\n```ts\nimport { cosmiconfig } from \"cosmiconfig\";\nimport TypeScriptLoader from \"cosmiconfig-typescript-loader\";\n\nconst moduleName = \"module\";\nconst explorer = cosmiconfig(\"test\", {\n  loaders: {\n    \".ts\": TypeScriptLoader(),\n  },\n});\n\nconst cfg = explorer.load(\"./amazing.config.ts\");\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/cosmiconfig-typescript-loader/-/cosmiconfig-typescript-loader-2.0.0.tgz#bc4f5bfcaa11a353714ecdef00c4f2226ef191b8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/cosmiconfig-typescript-loader/-/cosmiconfig-typescript-loader-2.0.0.tgz",
    "hash": "bc4f5bfcaa11a353714ecdef00c4f2226ef191b8",
    "integrity": "sha512-2NlGul/E3vTQEANqPziqkA01vfiuUU8vT0jZAuUIjEW8u3eCcnCQWLggapCjhbF76s7KQF0fM0kXSKmzaDaG1g==",
    "registry": "npm",
    "packageName": "cosmiconfig-typescript-loader",
    "cacheIntegrity": "sha512-2NlGul/E3vTQEANqPziqkA01vfiuUU8vT0jZAuUIjEW8u3eCcnCQWLggapCjhbF76s7KQF0fM0kXSKmzaDaG1g== sha1-vE9b/KoRo1NxTs3vAMTyIm7xkbg="
  },
  "registry": "npm",
  "hash": "bc4f5bfcaa11a353714ecdef00c4f2226ef191b8"
}