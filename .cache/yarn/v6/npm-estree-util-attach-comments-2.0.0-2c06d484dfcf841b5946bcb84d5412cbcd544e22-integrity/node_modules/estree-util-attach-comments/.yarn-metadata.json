{
  "manifest": {
    "name": "estree-util-attach-comments",
    "version": "2.0.0",
    "description": "Attach comments to estree nodes",
    "license": "MIT",
    "keywords": [
      "estree",
      "ast",
      "ecmascript",
      "javascript",
      "tree",
      "comment",
      "acorn",
      "espree",
      "recast"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/wooorm/estree-util-attach-comments.git"
    },
    "bugs": {
      "url": "https://github.com/wooorm/estree-util-attach-comments/issues"
    },
    "funding": {
      "type": "github",
      "url": "https://github.com/sponsors/wooorm"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "@types/estree": "^0.0.46"
    },
    "devDependencies": {
      "@types/acorn": "^4.0.0",
      "@types/tape": "^4.0.0",
      "acorn": "^8.0.0",
      "c8": "^7.0.0",
      "estree-util-visit": "^1.0.0",
      "prettier": "^2.0.0",
      "recast": "^0.20.0",
      "remark-cli": "^9.0.0",
      "remark-preset-wooorm": "^8.0.0",
      "rimraf": "^3.0.0",
      "tape": "^5.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "xo": "^0.38.0"
    },
    "scripts": {
      "prepack": "npm run build && npm run format",
      "build": "rimraf \"*.d.ts\" && tsc && type-coverage",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node test.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node test.js",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "rules": {
        "no-var": "off",
        "prefer-arrow-callback": "off",
        "guard-for-in": "off",
        "max-depth": "off",
        "unicorn/explicit-length-check": "off",
        "unicorn/prefer-number-properties": "off"
      }
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-estree-util-attach-comments-2.0.0-2c06d484dfcf841b5946bcb84d5412cbcd544e22-integrity/node_modules/estree-util-attach-comments/package.json",
    "readmeFilename": "readme.md",
    "readme": "# estree-util-attach-comments\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n\nAttach semistandard [estree][] comment nodes (such as from [espree][] or\n[acorn][] with a couple lines of code) to the nodes in that tree.\n\nThis is useful because certain estree parsers give you an array (espree and\nacorn) whereas other estree tools expect comments to be embedded on nodes in the\ntree.\n\n## Install\n\nThis package is ESM only: Node 12+ is needed to use it and it must be `import`ed\ninstead of `require`d.\n\n[npm][]:\n\n```sh\nnpm install estree-util-attach-comments\n```\n\n## Use\n\nSay we have this weird `code`:\n\n```js\n/* 1 */ function /* 2 */ a /* 3 */ (/* 4 */b) /* 5 */ { /* 6 */ return /* 7 */ b + /* 8 */ 1 /* 9 */ }\n```\n\nAnd our script, `example.js`, looks as follows:\n\n```js\nimport * as acorn from 'acorn'\nimport recast from 'recast'\nimport {attachComments} from 'estree-util-attach-comments'\n\nvar comments = []\nvar tree = acorn.parse(code, {ecmaVersion: 2020, onComment: comments})\n\nattachComments(tree, comments)\n\nconsole.log(recast.print(tree).code)\n```\n\nYields:\n\n```js\n/* 1 */\nfunction /* 2 */\na(\n    /* 3 */\n    /* 4 */\n    b\n) /* 5 */\n{\n    /* 6 */\n    return (\n        /* 7 */\n        b + /* 8 */\n        1\n    );\n}/* 9 */\n```\n\nNote that the lines are added by `recast` in this case.\nAnd, some of these weird comments are off, but they’re pretty close.\n\n## API\n\nThis package exports the following identifiers: `attachComment`.\nThere is no default export.\n\n### `attachComment(tree, comments)`\n\nAttach semistandard estree comment nodes to the tree.\n\nThis mutates the given [`tree`][estree] ([`Program`][program]).\nIt takes `comments`, walks the tree, and adds comments as close as possible\nto where they originated.\n\nComment nodes are given two boolean fields: `leading` (`true` for `/* a */ b`)\nand `trailing` (`true` for `a /* b */`).\nBoth fields are `false` for dangling comments: `[/* a */]`.\nThis is what `recast` uses too, and is somewhat similar to Babel, which is not\nestree but instead uses `leadingComments`, `trailingComments`, and\n`innerComments` arrays on nodes.\n\nThe algorithm checks any node: even recent (or future) proposals or nonstandard\nsyntax such as JSX, because it ducktypes to find nodes instead of having a list\nof visitor keys.\n\nThe algorithm supports `loc` fields (line/column), `range` fields (offsets),\nand direct `start` / `end` fields.\n\n###### Returns\n\n`Node` — The given `tree`.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/wooorm/estree-util-attach-comments/workflows/main/badge.svg\n\n[build]: https://github.com/wooorm/estree-util-attach-comments/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/estree-util-attach-comments.svg\n\n[coverage]: https://codecov.io/github/wooorm/estree-util-attach-comments\n\n[downloads-badge]: https://img.shields.io/npm/dm/estree-util-attach-comments.svg\n\n[downloads]: https://www.npmjs.com/package/estree-util-attach-comments\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/estree-util-attach-comments.svg\n\n[size]: https://bundlephobia.com/result?p=estree-util-attach-comments\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[acorn]: https://github.com/acornjs/acorn\n\n[estree]: https://github.com/estree/estree\n\n[espree]: https://github.com/eslint/espree\n\n[program]: https://github.com/estree/estree/blob/master/es5.md#programs\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2020 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/estree-util-attach-comments/-/estree-util-attach-comments-2.0.0.tgz#2c06d484dfcf841b5946bcb84d5412cbcd544e22",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/estree-util-attach-comments/-/estree-util-attach-comments-2.0.0.tgz",
    "hash": "2c06d484dfcf841b5946bcb84d5412cbcd544e22",
    "integrity": "sha512-kT9YVRvlt2ewPp9BazfIIgXMGsXOEpOm57bK8aa4F3eOEndMml2JAETjWaG3SZYHmC6axSNIzHGY718dYwIuVg==",
    "registry": "npm",
    "packageName": "estree-util-attach-comments",
    "cacheIntegrity": "sha512-kT9YVRvlt2ewPp9BazfIIgXMGsXOEpOm57bK8aa4F3eOEndMml2JAETjWaG3SZYHmC6axSNIzHGY718dYwIuVg== sha1-LAbUhN/PhBtZRry4TVQSy81UTiI="
  },
  "registry": "npm",
  "hash": "2c06d484dfcf841b5946bcb84d5412cbcd544e22"
}