{
  "manifest": {
    "name": "imagemin-pngquant",
    "version": "9.0.2",
    "description": "Imagemin plugin for `pngquant`",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/imagemin/imagemin-pngquant.git"
    },
    "engines": {
      "node": ">=10"
    },
    "scripts": {
      "test": "xo && ava && tsd"
    },
    "files": [
      "index.js",
      "index.d.ts"
    ],
    "keywords": [
      "compress",
      "image",
      "imageminplugin",
      "minify",
      "optimize",
      "png",
      "pngquant"
    ],
    "dependencies": {
      "execa": "^4.0.0",
      "is-png": "^2.0.0",
      "is-stream": "^2.0.0",
      "ow": "^0.17.0",
      "pngquant-bin": "^6.0.0"
    },
    "devDependencies": {
      "@types/node": "^12.0.3",
      "ava": "^3.8.0",
      "get-stream": "^5.1.0",
      "tsd": "^0.11.0",
      "xo": "^0.30.0"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-imagemin-pngquant-9.0.2-38155702b0cc4f60f671ba7c2b086ea3805d9567-integrity/node_modules/imagemin-pngquant/package.json",
    "readmeFilename": "readme.md",
    "readme": "# imagemin-pngquant ![GitHub Actions Status](https://github.com/imagemin/imagemin-pngquant/workflows/test/badge.svg?branch=master)\n\n> [Imagemin](https://github.com/imagemin/imagemin) plugin for [`pngquant`](https://github.com/kornelski/pngquant)\n\n\n## Install\n\n```\n$ npm install imagemin-pngquant\n```\n\n\n## Usage\n\n```js\nconst imagemin = require('imagemin');\nconst imageminPngquant = require('imagemin-pngquant');\n\n(async () => {\n\tawait imagemin(['images/*.png'], {\n\t\tdestination: 'build/images',\n\t\tplugins: [\n\t\t\timageminPngquant()\n\t\t]\n\t});\n\n\tconsole.log('Images optimized');\n})();\n```\n\n\n## API\n\n### imageminPngquant(options?)(input)\n\nReturns `Promise<Buffer>`.\n\n#### options\n\nType: `object`\n\n##### speed\n\nType: `number`<br>\nDefault: `4`<br>\nValues: `1` (brute-force) to `11` (fastest)\n\nSpeed `10` has 5% lower quality, but is about 8 times faster than the default. Speed `11` disables dithering and lowers compression level.\n\n##### strip\n\nType: `boolean`<br>\nDefault: `false`\n\nRemove optional metadata.\n\n##### quality\n\nType: `Array<min: number, max: number>`<br>\nValues: `Array<0...1, 0...1>`<br>\nExample: `[0.3, 0.5]`\n\nInstructs pngquant to use the least amount of colors required to meet or exceed\nthe max quality. If conversion results in quality below the min quality the\nimage won't be saved.\n\nMin and max are numbers in range 0 (worst) to 1 (perfect), similar to JPEG.\n\n##### dithering\n\nType: `number | boolean`<br>\nDefault: `1` (full)<br>\nValues: `0...1`\n\nSet the dithering level using a fractional number between 0 (none) and 1 (full).\n\nPass in `false` to disable dithering.\n\n##### posterize\n\nType: `number`\n\nTruncate number of least significant bits of color (per channel). Use this when image will be output on low-depth displays (e.g. 16-bit RGB). pngquant will make almost-opaque pixels fully opaque and will reduce amount of semi-transparent colors.\n\n##### verbose\n\nType: `boolean`<br>\nDefault: `false`\n\nPrint verbose status messages.\n\n#### input\n\nType: `Buffer | Stream`\n\nBuffer or stream to optimize.\n",
    "licenseText": "MIT License\n\nCopyright (c) Imagemin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/imagemin-pngquant/-/imagemin-pngquant-9.0.2.tgz#38155702b0cc4f60f671ba7c2b086ea3805d9567",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/imagemin-pngquant/-/imagemin-pngquant-9.0.2.tgz",
    "hash": "38155702b0cc4f60f671ba7c2b086ea3805d9567",
    "integrity": "sha512-cj//bKo8+Frd/DM8l6Pg9pws1pnDUjgb7ae++sUX1kUVdv2nrngPykhiUOgFeE0LGY/LmUbCf4egCHC4YUcZSg==",
    "registry": "npm",
    "packageName": "imagemin-pngquant",
    "cacheIntegrity": "sha512-cj//bKo8+Frd/DM8l6Pg9pws1pnDUjgb7ae++sUX1kUVdv2nrngPykhiUOgFeE0LGY/LmUbCf4egCHC4YUcZSg== sha1-OBVXArDMT2D2cbp8Kwhuo4BdlWc="
  },
  "registry": "npm",
  "hash": "38155702b0cc4f60f671ba7c2b086ea3805d9567"
}