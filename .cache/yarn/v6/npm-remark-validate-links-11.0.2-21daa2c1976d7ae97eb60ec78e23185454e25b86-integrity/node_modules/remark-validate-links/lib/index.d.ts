/**
 * Plugin to validate that Markdown links and images reference existing local
 * files and headings.
 *
 * @type {import('unified').Plugin<[Options?, FileSet?]|[Options?]|void[], Root>}
 */
export default function remarkValidateLinks(
  options: void | Options | undefined,
  fileSet: void | import('unified-engine/lib/file-set').FileSet | undefined
):
  | void
  | import('unified').Transformer<import('mdast').Root, import('mdast').Root>
export type Root = import('mdast').Root
export type VFile = import('vfile').VFile
export type FileSet = import('unified-engine').FileSet
export type Callback = import('trough').Callback
/**
 * Hosted Git info
 */
export type UrlConfig = {
  /**
   * Domain of URLs (example: `'github.com'`, `'bitbucket.org'`).
   */
  hostname?: string | undefined
  /**
   * Path prefix before files (example:
   * `'/remarkjs/remark-validate-links/blob/'`,
   * `'/remarkjs/remark-validate-links/src/'`).
   */
  prefix?: string | undefined
  /**
   * Prefix of headings (example: `'#'`, `'#markdown-header-'`).
   */
  headingPrefix?: string | undefined
  /**
   * Hash to top of readme (example: `#readme`).
   */
  topAnchor?: string | undefined
  /**
   * Whether lines in files can be linked.
   */
  lines?: boolean | undefined
}
/**
 * Configuration.
 */
export type Options = {
  /**
   * URL to hosted Git.
   * If `repository` is nullish, the Git origin remote is detected.
   * If the repository resolves to something npm understands as a Git host such
   * as GitHub, GitLab, or Bitbucket, full URLs to that host (say,
   * `https://github.com/remarkjs/remark-validate-links/readme.md#install`) can
   * also be checked.
   * If youâ€™re not in a Git repository, you must pass `repository: false`
   * explicitly.
   */
  repository?: string | false | undefined
  /**
   * A `root` (`string?`) can also be passed, referencing the local Git root
   * directory (the folder that contains `.git`).
   * If both `root` and `repository` are nullish, the Git root is detected.
   * If `root` is not given but `repository` is, `file.cwd` is used.
   */
  root?: string | undefined
  /**
   * If your project is hosted on `github.com`, `gitlab.com`, or `bitbucket.org`,
   * this plugin can automatically detect the url configuration.
   * Otherwise, use `urlConfig` to specify this manually.
   */
  urlConfig?: UrlConfig | undefined
}
