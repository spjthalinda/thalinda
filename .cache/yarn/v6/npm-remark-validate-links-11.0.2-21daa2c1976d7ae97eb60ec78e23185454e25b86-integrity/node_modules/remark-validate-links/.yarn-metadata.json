{
  "manifest": {
    "name": "remark-validate-links",
    "version": "11.0.2",
    "description": "remark plugin to validate links to headings and files",
    "license": "MIT",
    "keywords": [
      "unified",
      "remark",
      "remark-plugin",
      "plugin",
      "mdast",
      "markdown",
      "validate",
      "link",
      "reference",
      "file",
      "heading"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/remarkjs/remark-validate-links.git"
    },
    "bugs": {
      "url": "https://github.com/remarkjs/remark-validate-links/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      },
      {
        "name": "Diogo Nunes",
        "email": "dialex.nunes@gmail.com"
      },
      {
        "name": "Jonathan Haines",
        "email": "jonno.haines@gmail.com"
      },
      {
        "name": "Merlijn Vos",
        "email": "merlijn@soverin.net"
      },
      {
        "name": "Andrew Petro",
        "email": "andrew.w.petro@gmail.com"
      },
      {
        "name": "wangshijun",
        "email": "wangshijun2010@gmail.com"
      },
      {
        "name": "Anton Rybochkin",
        "email": "anton.rybochkin@axibase.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "lib/",
      "index.d.ts",
      "index.js"
    ],
    "browser": {
      "./lib/check/check-files.js": "./lib/check/check-files.browser.js",
      "./lib/find/find-repo.js": "./lib/find/find-repo.browser.js"
    },
    "dependencies": {
      "@types/mdast": "^3.0.0",
      "github-slugger": "^1.0.0",
      "hosted-git-info": "^4.0.0",
      "mdast-util-to-string": "^3.0.0",
      "propose": "0.0.5",
      "to-vfile": "^7.0.0",
      "trough": "^2.0.0",
      "unified": "^10.0.0",
      "unified-engine": "^9.0.0",
      "unist-util-visit": "^4.0.0",
      "vfile": "^5.0.0"
    },
    "devDependencies": {
      "@types/github-slugger": "^1.0.0",
      "@types/hast": "^2.0.0",
      "@types/hosted-git-info": "^3.0.0",
      "@types/rimraf": "^3.0.1",
      "@types/tape": "^4.0.0",
      "c8": "^7.0.0",
      "prettier": "^2.0.0",
      "remark": "^14.0.0",
      "remark-cli": "^10.0.0",
      "remark-preset-wooorm": "^9.0.0",
      "rimraf": "^3.0.0",
      "strip-ansi": "^7.0.0",
      "tape": "^5.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "vfile-sort": "^3.0.0",
      "xo": "^0.45.0"
    },
    "scripts": {
      "build": "rimraf \"lib/**/*.d.ts\" \"test/**/*.d.ts\" \"*.d.ts\" && tsc && type-coverage",
      "format": "remark . -qfo --ignore-pattern test/ && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node --conditions development test/index.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov npm run test-api",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-remark-validate-links-11.0.2-21daa2c1976d7ae97eb60ec78e23185454e25b86-integrity/node_modules/remark-validate-links/package.json",
    "readmeFilename": "readme.md",
    "readme": "# remark-validate-links\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[**remark**][remark] plugin to check that markdown links and images point to\nexisting local files and headings in a Git repo.\n\nFor example, this document does not have a heading named `Hello`.\nSo if we’d link to it (`[welcome](#hello)`), we’d get a warning.\nLinks to headings in other markdown documents (`examples/foo.md#hello`) and\nlinks to files (`license` or `index.js`) are also checked.\n\n## Contents\n\n*   [What is this?](#what-is-this)\n*   [When should I use this?](#when-should-i-use-this)\n*   [Install](#install)\n*   [Use](#use)\n*   [API](#api)\n    *   [`unified().use(remarkValidateLinks[, options])`](#unifieduseremarkvalidatelinks-options)\n*   [Examples](#examples)\n    *   [Example: CLI](#example-cli)\n    *   [Example: CLI in npm scripts](#example-cli-in-npm-scripts)\n*   [Integration](#integration)\n*   [Types](#types)\n*   [Compatibility](#compatibility)\n*   [Security](#security)\n*   [Related](#related)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## What is this?\n\nThis package is a [unified][] ([remark][]) plugin to check local links in a Git\nrepo.\n\n**unified** is a project that transforms content with abstract syntax trees\n(ASTs).\n**remark** adds support for markdown to unified.\n**mdast** is the markdown AST that remark uses.\nThis is a remark plugin that inspects mdast.\n\n## When should I use this?\n\nThis project is useful if you have a Git repo, such as this one, with docs in\nmarkdown and links to headings and other files, and want to check whether\nthey’re correct.\nCompared to other links checkers, this project can work offline (making it fast\nen prone to fewer false positives), and is specifically made for local links in\nGit repos.\nThis plugin does not check external URLs (see\n[`remark-lint-no-dead-urls`][no-dead-urls]) or undefined references\n(see [`remark-lint-no-undefined-references`][no-undef-refs]).\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c).\nIn Node.js (version 12.20+, 14.14+, or 16.0+), install with [npm][]:\n\n```sh\nnpm install remark-validate-links\n```\n\nIn Deno with [Skypack][]:\n\n```js\nimport remarkValidateLinks from 'https://cdn.skypack.dev/remark-validate-links@11?dts'\n```\n\nIn browsers with [Skypack][]:\n\n```html\n<script type=\"module\">\n  import remarkValidateLinks from 'https://cdn.skypack.dev/remark-validate-links@11?min'\n</script>\n```\n\n## Use\n\nSay we have the following file, `example.md`:\n\n```markdown\n# Alpha\n\nLinks are checked:\n\nThis [exists](#alpha).\nThis [one does not](#does-not).\n\n# Bravo\n\nHeadings in `readme.md` are [checked](readme.md#no-such-heading).\nAnd [missing files are reported](missing-example.js).\n\nDefinitions are also checked:\n\n[alpha]: #alpha\n[charlie]: #charlie\n\nReferences w/o definitions are not checked: [delta]\n```\n\nAnd a module, `example.js`:\n\n```js\nimport {read} from 'to-vfile'\nimport {remark} from 'remark'\nimport remarkValidateLinks from 'remark-validate-links'\n\nmain()\n\nasync function main() {\n  const file = await remark()\n    .use(remarkValidateLinks)\n    .process(await read('example.md'))\n\n  console.log(reporter(file))\n}\n```\n\nNow, running `node example` yields:\n\n```markdown\nexample.md\n    6:6-6:31  warning  Link to unknown heading: `does-not`         missing-heading  remark-validate-links\n  11:5-11:53  warning  Link to unknown file: `missing-example.js`  missing-file     remark-validate-links\n  16:1-16:20  warning  Link to unknown heading: `charlie`          missing-heading  remark-validate-links\n\n⚠ 3 warnings\n```\n\n(Note that `readme.md#no-such-heading` is not warned about, because the API does\nnot check headings in other Markdown files).\n\n## API\n\nThis package exports no identifiers.\nThe default export is `remarkValidateLinks`.\n\n### `unified().use(remarkValidateLinks[, options])`\n\nCheck that markdown links and images point to existing local files and headings\nin a Git repo.\n\n> ⚠️ **Important**: The API in Node.js checks links to headings and files but\n> whether headings in other files exist.\n> The API in browsers only checks links to headings in the same file.\n> The CLI can check everything.\n\n##### `options`\n\nTypically, you don’t need to configure `remark-validate-links`, as it detects\nlocal Git repositories.\n\n###### `options.repository`\n\nURL to hosted Git (`string?` or `false`).\nIf `repository` is nullish, the Git origin remote is detected.\nIf the repository resolves to something [npm understands][package-repository] as\na Git host such as GitHub, GitLab, or Bitbucket, then full URLs to that host\n(say, `https://github.com/remarkjs/remark-validate-links/readme.md#install`) can\nalso be checked.\nIf you’re not in a Git repository, you must pass `repository: false`\nexplicitly.\n\n###### `options.root`\n\nA `root` (`string?`) can also be passed, referencing the local Git root\ndirectory (the folder that contains `.git`).\nIf both `root` and `repository` are nullish, the Git root is detected.\nIf `root` is not given but `repository` is, [`file.cwd`][cwd] is used.\n\n###### `options.urlConfig`\n\nIf your project is hosted on `github.com`, `gitlab.com`, or `bitbucket.org`,\nthis plugin can automatically detect the url configuration.\nOtherwise, use `urlConfig` to specify this manually.\nFor this repository (`remarkjs/remark-validate-links` on GitHub) `urlConfig`\nlooks as follows:\n\n```js\n{\n  // Domain of URLs:\n  hostname: 'github.com',\n  // Path prefix before files:\n  prefix: '/remarkjs/remark-validate-links/blob/',\n  // Prefix of headings:\n  headingPrefix: '#',\n  // Hash to top of markdown documents:\n  topAnchor: '#readme',\n  // Whether lines in files can be linked:\n  lines: true\n}\n```\n\nIf this project were hosted on Bitbucket, it would be:\n\n```js\n{\n  hostname: 'bitbucket.org',\n  prefix: '/remarkjs/remark-validate-links/src/',\n  headingPrefix: '#markdown-header-',\n  lines: false\n}\n```\n\n## Examples\n\n### Example: CLI\n\nIt’s recommended to use `remark-validate-links` on the CLI with\n[`remark-cli`][cli].\nInstall both with [npm][]:\n\n```sh\nnpm install remark-cli remark-validate-links --save-dev\n```\n\nLet’s say we have a `readme.md` (this current document) and an `example.md`\nwith the following text:\n\n```markdown\n# Hello\n\nRead more [whoops, this does not exist](#world).\n\nThis doesn’t exist either [whoops!](readme.md#foo).\n\nBut this does exist: [license](license).\n\nSo does this: [readme](readme.md#install).\n```\n\nNow, running `./node_modules/.bin/remark --use remark-validate-links .` yields:\n\n```txt\nexample.md\n  3:11-3:48  warning  Link to unknown heading: `world`               missing-heading          remark-validate-links\n  5:27-5:51  warning  Link to unknown heading in `readme.md`: `foo`  missing-heading-in-file  remark-validate-links\n\nreadme.md: no issues found\n\n⚠ 2 warnings\n```\n\n### Example: CLI in npm scripts\n\nYou can use `remark-validate-links` and [`remark-cli`][cli] in an npm script to\ncheck and format markdown in your project.\nInstall both with [npm][]:\n\n```sh\nnpm install remark-cli remark-validate-links --save-dev\n```\n\nThen, add a format script and configuration to `package.json`:\n\n```js\n{\n  // …\n  \"scripts\": {\n    // …\n    \"format\": \"remark . --quiet --frail --output\",\n    // …\n  },\n  \"remarkConfig\": {\n    \"plugins\": [\n      \"remark-validate-links\"\n    ]\n  },\n  // …\n}\n```\n\n> 💡 **Tip**: Add other tools such as prettier or ESLint to check and format\n> other files.\n>\n> 💡 **Tip**: Run `./node_modules/.bin/remark --help` for help with\n> `remark-cli`.\n\nNow you check and format markdown in your project with:\n\n```sh\nnpm run format\n```\n\n## Integration\n\n`remark-validate-links` can detect anchors on nodes through several properties\non nodes:\n\n*   `node.data.hProperties.name` — Used by\n    [`mdast-util-to-hast`][mdast-util-to-hast]\n    to create a `name` attribute, which anchors can link to\n*   `node.data.hProperties.id` — Used by\n    [`mdast-util-to-hast`][mdast-util-to-hast]\n    to create an `id` attribute, which anchors can link to\n*   `node.data.id` — Used potentially in the future by other tools to signal\n    unique identifiers on nodes\n\n## Types\n\nThis package is fully typed with [TypeScript][].\nIt exports an `Options` type, which specifies the interface of the accepted\noptions, and an `UrlConfig` type, which specifies the interface of its\ncorresponding option.\n\n## Compatibility\n\nProjects maintained by the unified collective are compatible with all maintained\nversions of Node.js.\nAs of now, that is Node.js 12.20+, 14.14+, and 16.0+.\nOur projects sometimes work with older versions, but this is not guaranteed.\n\nThis plugin works with `unified` version 6+, `remark` version 7+, and\n`remark-cli` version 8+.\n\n## Security\n\n`remark-validate-links`, in Node, accesses the file system based on user\ncontent, and this may be dangerous.\nIn Node `git remote` and `git rev-parse` also runs for processed files.\n\nThe tree is not modified, so there are no openings for\n[cross-site scripting (XSS)][xss] attacks.\n\n## Related\n\n*   [`remark-lint`][remark-lint]\n    — markdown code style linter\n*   [`remark-lint-no-dead-urls`][no-dead-urls]\n    — check that external links are alive\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`remarkjs/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/remarkjs/remark-validate-links/workflows/main/badge.svg\n\n[build]: https://github.com/remarkjs/remark-validate-links/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/remarkjs/remark-validate-links.svg\n\n[coverage]: https://codecov.io/github/remarkjs/remark-validate-links\n\n[downloads-badge]: https://img.shields.io/npm/dm/remark-validate-links.svg\n\n[downloads]: https://www.npmjs.com/package/remark-validate-links\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/remark-validate-links.svg\n\n[size]: https://bundlephobia.com/result?p=remark-validate-links\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/remarkjs/remark/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[skypack]: https://www.skypack.dev\n\n[health]: https://github.com/remarkjs/.github\n\n[contributing]: https://github.com/remarkjs/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/remarkjs/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/remarkjs/.github/blob/HEAD/code-of-conduct.md\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[unified]: https://github.com/unifiedjs/unified\n\n[remark]: https://github.com/remarkjs/remark\n\n[typescript]: https://www.typescriptlang.org\n\n[cli]: https://github.com/remarkjs/remark/tree/HEAD/packages/remark-cli#readme\n\n[remark-lint]: https://github.com/remarkjs/remark-lint\n\n[mdast-util-to-hast]: https://github.com/syntax-tree/mdast-util-to-hast#notes\n\n[no-dead-urls]: https://github.com/davidtheclark/remark-lint-no-dead-urls\n\n[no-undef-refs]: https://github.com/remarkjs/remark-lint/tree/master/packages/remark-lint-no-undefined-references\n\n[package-repository]: https://docs.npmjs.com/files/package.json#repository\n\n[cwd]: https://github.com/vfile/vfile#vfilecwd\n\n[xss]: https://en.wikipedia.org/wiki/Cross-site_scripting\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2015 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/remark-validate-links/-/remark-validate-links-11.0.2.tgz#21daa2c1976d7ae97eb60ec78e23185454e25b86",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/remark-validate-links/-/remark-validate-links-11.0.2.tgz",
    "hash": "21daa2c1976d7ae97eb60ec78e23185454e25b86",
    "integrity": "sha512-SfVDWgF/Albdou1TmrCpq4AvJyvMnPflnaLLPUuFFxKO4Jp1o7fK2sinqPt+WW0DXS4JmtXPXm2FOkB8FJ08tQ==",
    "registry": "npm",
    "packageName": "remark-validate-links",
    "cacheIntegrity": "sha512-SfVDWgF/Albdou1TmrCpq4AvJyvMnPflnaLLPUuFFxKO4Jp1o7fK2sinqPt+WW0DXS4JmtXPXm2FOkB8FJ08tQ== sha1-IdqiwZdteul+tg7HjiMYVFTiW4Y="
  },
  "registry": "npm",
  "hash": "21daa2c1976d7ae97eb60ec78e23185454e25b86"
}