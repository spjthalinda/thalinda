{
  "manifest": {
    "name": "babel-preset-proposal-typescript",
    "version": "3.0.0",
    "type": "module",
    "description": "Yet another Babel preset for TypeScript, only transforms proposals which TypeScript does not support now.",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/rx-ts/babel-preset-proposal-typescript.git"
    },
    "author": {
      "name": "JounQin",
      "email": "admin@1stg.me"
    },
    "license": "MIT",
    "engines": {
      "node": ">=6.9.0"
    },
    "main": "lib/index.cjs",
    "module": "lib/index.js",
    "exports": {
      "types": "./lib/index.d.ts",
      "es2015": "./lib/index.es2015.mjs",
      "fesm2015": "./lib/index.es2015.mjs",
      "import": "./lib/index.js",
      "require": "./lib/index.cjs"
    },
    "types": "lib",
    "files": [
      "lib",
      "!*.tsbuildinfo"
    ],
    "keywords": [
      "babel-preset",
      "babel-preset-ts",
      "babel-preset-typescript",
      "@babel/preset-ts",
      "@babel/preset-typescript",
      "babel-typescript",
      "typescript"
    ],
    "peerDependencies": {
      "@babel/core": "^7.15.0",
      "typescript": "^4.7.0"
    },
    "dependencies": {
      "@babel/helper-plugin-utils": "^7.18.9",
      "@babel/plugin-proposal-async-do-expressions": "^7.18.6",
      "@babel/plugin-proposal-do-expressions": "^7.18.6",
      "@babel/plugin-proposal-function-bind": "^7.18.9",
      "@babel/plugin-proposal-function-sent": "^7.18.6",
      "@babel/plugin-proposal-json-strings": "^7.18.6",
      "@babel/plugin-proposal-optional-chaining": "^7.18.9",
      "@babel/plugin-proposal-partial-application": "^7.18.9",
      "@babel/plugin-proposal-pipeline-operator": "^7.18.9",
      "@babel/plugin-proposal-private-property-in-object": "^7.18.6",
      "@babel/plugin-proposal-record-and-tuple": "^7.18.6",
      "@babel/plugin-proposal-throw-expressions": "^7.18.6",
      "@babel/plugin-syntax-decorators": "^7.18.6",
      "@babel/plugin-syntax-typescript": "^7.18.6",
      "@bloomberg/record-tuple-polyfill": "^0.0.4",
      "compare-versions": "^4.1.3"
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-babel-preset-proposal-typescript-3.0.0-8e0270143470456eca33a000e1195fb55941acf8-integrity/node_modules/babel-preset-proposal-typescript/package.json",
    "readmeFilename": "README.md",
    "readme": "# babel-preset-proposal-typescript\n\n[![GitHub Actions](https://github.com/un-ts/babel-preset-proposal-typescript/workflows/CI/badge.svg)](https://github.com/un-ts/babel-preset-proposal-typescript/actions/workflows/ci.yml)\n[![Codecov](https://img.shields.io/codecov/c/github/un-ts/babel-preset-proposal-typescript.svg)](https://codecov.io/gh/un-ts/babel-preset-proposal-typescript)\n[![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/un-ts/babel-preset-proposal-typescript.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/un-ts/babel-preset-proposal-typescript/context:javascript)\n[![npm](https://img.shields.io/npm/v/babel-preset-proposal-typescript.svg)](https://www.npmjs.com/package/babel-preset-proposal-typescript)\n[![GitHub Release](https://img.shields.io/github/release/un-ts/babel-preset-proposal-typescript)](https://github.com/un-ts/babel-preset-proposal-typescript/releases)\n\n[![Conventional Commits](https://img.shields.io/badge/conventional%20commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n[![Renovate enabled](https://img.shields.io/badge/renovate-enabled-brightgreen.svg)](https://renovatebot.com)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n[![Code Style: Prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![changesets](https://img.shields.io/badge/maintained%20with-changesets-176de3.svg)](https://github.com/atlassian/changesets)\n\nYet another Babel preset for TypeScript, only transforms proposals which TypeScript does not support now.\n\nSo that you can use babel to transform proposals which are current in stage 0-2 and TypeScript team [will not implement them temporarily](https://github.com/Microsoft/TypeScript/issues/19044#event-1293164503).\n\n## TOC <!-- omit in toc -->\n\n- [Enabled proposal plugins](#enabled-proposal-plugins)\n- [Install](#install)\n- [Options](#options)\n- [Usage](#usage)\n  - [Via `.babelrc` (Recommended)](#via-babelrc-recommended)\n  - [Via CLI](#via-cli)\n  - [Via Node API](#via-node-api)\n  - [Via webpack](#via-webpack)\n- [Changelog](#changelog)\n- [License](#license)\n\n## Enabled proposal plugins\n\n1.  [async-do-expressions](https://www.npmjs.com/package/@babel/plugin-proposal-async-do-expressions)\n2.  [do-expressions](https://www.npmjs.com/package/@babel/plugin-proposal-do-expressions)\n3.  [function-bind](https://www.npmjs.com/package/@babel/plugin-proposal-function-bind)\n4.  [function-sent](https://www.npmjs.com/package/@babel/plugin-proposal-function-sent)\n5.  [json-strings](https://www.npmjs.com/package/@babel/plugin-proposal-json-strings)\n6.  [partial-application](https://www.npmjs.com/package/@babel/plugin-proposal-partial-application)\n7.  [pipeline-operator](https://www.npmjs.com/package/@babel/plugin-proposal-pipeline-operator)\n8.  [record-and-tuple](https://www.npmjs.com/package/@babel/plugin-proposal-record-and-tuple)\n9.  [throw-expressions](https://www.npmjs.com/package/@babel/plugin-proposal-throw-expressions)\n10. [v8intrinsic](./src/v8intrinsic.ts) - [Further Detail](https://babeljs.io/blog/2019/09/05/7.6.0#v8-intrinsic-runtime-functions-parsing-10148httpsgithubcombabelbabelpull10148)\n\n## Install\n\n```sh\n# yarn\nyarn add -D babel-preset-proposal-typescript\n\n# npm\nnpm i -D babel-preset-proposal-typescript\n```\n\n## Options\n\n| option                   | description                                                                                              | defaults                                                                |\n| ------------------------ | -------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------- |\n| `decoratorsBeforeExport` | See [Babel Document](https://babeljs.io/docs/en/babel-plugin-proposal-decorators#decoratorsbeforeexport) | `undefined`                                                             |\n| `decoratorsLegacy`       | whether to use legacy decorators semantic                                                                | `true`                                                                  |\n| `isTSX`                  | whether to enable `jsx` plugin with `typescript`                                                         | `false`, but `true` for `/\\.[jt]sx$/`                                   |\n| `pipelineOperator`       | implementation of pipeline operator, `minimal`, `smart` or `fsharp`                                      | `minimal`                                                               |\n| `recordTuplePolyfill`    | whether to enable import `record-tuple` plugin and polyfill, or specific the polyfill module name        | `true` for Node>=14.6, it represents `@bloomberg/record-tuple-polyfill` |\n| `recordTupleSyntaxType`  | record-tuple syntax, `hash` or `bar`                                                                     | `hash`                                                                  |\n\n## Usage\n\nNote that unlike plugins, the presets are applied in an order of last to first (<https://babeljs.io/docs/en/presets/#preset-ordering>), so please make sure `proposal-typescript` is used at the last.\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\"proposal-typescript\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel input.ts --presets proposal-typescript > output.ts\n```\n\n### Via Node API\n\n```js\nrequire('@babel/core').transform('code', {\n  presets: ['proposal-typescript'],\n})\n```\n\n### Via webpack\n\nPipe codes through `babel-loader`.\n\n```js\nloader = {\n  test: /\\.[jt]sx?$/,\n  loader: 'babel-loader',\n  options: {\n    presets: ['@babel/typescript', 'proposal-typescript'],\n  },\n}\n\n// if you prefer `ts-loader` or `awesome-typescript-loader`\nloader = {\n  test: /\\.tsx?$/,\n  use: [\n    {\n      loader: 'ts-loader',\n    },\n    {\n      loader: 'babel-loader',\n      options: {\n        presets: ['proposal-typescript'],\n      },\n    },\n  ],\n}\n```\n\n## Changelog\n\nDetailed changes for each release are documented in [CHANGELOG.md](./CHANGELOG.md).\n\n## License\n\n[MIT][] Â© [JounQin][]@[1stG.me][]\n\n[1stg.me]: https://www.1stg.me\n[jounqin]: https://GitHub.com/JounQin\n[mit]: http://opensource.org/licenses/MIT\n",
    "licenseText": "MIT License\n\nCopyright (c) 2017 JounQin\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/babel-preset-proposal-typescript/-/babel-preset-proposal-typescript-3.0.0.tgz#8e0270143470456eca33a000e1195fb55941acf8",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/babel-preset-proposal-typescript/-/babel-preset-proposal-typescript-3.0.0.tgz",
    "hash": "8e0270143470456eca33a000e1195fb55941acf8",
    "integrity": "sha512-J+PczSpvWjLT0l6BvGyuXoM2wssQODSymYo64jvM+jailkkHDoxFd5SgyMaMMoEBPZnZvvbx4X2kvYUghC7bnQ==",
    "registry": "npm",
    "packageName": "babel-preset-proposal-typescript",
    "cacheIntegrity": "sha512-J+PczSpvWjLT0l6BvGyuXoM2wssQODSymYo64jvM+jailkkHDoxFd5SgyMaMMoEBPZnZvvbx4X2kvYUghC7bnQ== sha1-jgJwFDRwRW7KM6AA4RlftVlBrPg="
  },
  "registry": "npm",
  "hash": "8e0270143470456eca33a000e1195fb55941acf8"
}