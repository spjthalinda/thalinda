{
  "manifest": {
    "name": "unist-util-to-list-of-char",
    "version": "0.1.3",
    "author": {
      "name": "LaySent",
      "email": "laysent@gmail.com"
    },
    "bugs": {
      "url": "https://github.com/laysent/remark-lint-plugins/issues"
    },
    "homepage": "https://github.com/laysent/remark-lint-plugins",
    "description": "functionality that helps generating list of characters in all visible text inside give node tree",
    "keywords": [
      "unist",
      "remark",
      "helper",
      "util"
    ],
    "main": "index.js",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/laysent/remark-lint-plugins.git"
    },
    "dependencies": {
      "unist-util-generated": "^1.1.6",
      "unist-util-visit": "^1.4.0"
    },
    "devDependencies": {
      "eslint": "5.3.0",
      "eslint-config-airbnb-base": "13.1.0",
      "eslint-plugin-import": "^2.14.0",
      "jest": "^24.1.0",
      "remark": "^10.0.1"
    },
    "scripts": {
      "test": "jest",
      "lint": "eslint *.js",
      "prepublish": "npm run lint && npm run lint"
    },
    "gitHead": "98d8e8c6f688d8fc8c94fef1c7762ea082056836",
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-unist-util-to-list-of-char-0.1.3-e441fb060c047948c1a00257d73e2591407f8e04-integrity/node_modules/unist-util-to-list-of-char/package.json",
    "readmeFilename": "README.md",
    "readme": "# unist-util-to-list-of-char\n\nProvide API to provide list of each character inside [unist](https://github.com/syntax-tree/unist) node tree.\n\n## Installation\n\n```bash\nnpm install unist-util-to-list-of-char\n```\n\n## Usage\n\n```javascript\nvar remark = require('remark');\nvar toList = require('unist-util-to-list-of-char');\n\nvar tree = remark().parse('Some _emphasis_, **importance**, and `code`.');\n\nfunction callback(list) {\n  console.log(list);\n}\n\ntoList(tree, 'root', callback);\n```\n\nYields\n\n```javascript\n[\n  { value: 'S', line: 1, column: 1, offset: 0 },\n  { value: 'o', line: 1, column: 2, offset: 1 },\n  { value: 'm', line: 1, column: 3, offset: 2 },\n  { value: 'e', line: 1, column: 4, offset: 3 },\n  { value: ' ', line: 1, column: 5, offset: 4 },\n  { value: 'e', line: 1, column: 7, offset: 6 },\n  { value: 'm', line: 1, column: 8, offset: 7 },\n  { value: 'p', line: 1, column: 9, offset: 8 },\n  { value: 'h', line: 1, column: 10, offset: 9 },\n  { value: 'a', line: 1, column: 11, offset: 10 },\n  { value: 's', line: 1, column: 12, offset: 11 },\n  { value: 'i', line: 1, column: 13, offset: 12 },\n  { value: 's', line: 1, column: 14, offset: 13 },\n  { value: ',', line: 1, column: 16, offset: 15 },\n  { value: ' ', line: 1, column: 17, offset: 16 },\n  { value: 'i', line: 1, column: 20, offset: 19 },\n  { value: 'm', line: 1, column: 21, offset: 20 },\n  { value: 'p', line: 1, column: 22, offset: 21 },\n  { value: 'o', line: 1, column: 23, offset: 22 },\n  { value: 'r', line: 1, column: 24, offset: 23 },\n  { value: 't', line: 1, column: 25, offset: 24 },\n  { value: 'a', line: 1, column: 26, offset: 25 },\n  { value: 'n', line: 1, column: 27, offset: 26 },\n  { value: 'c', line: 1, column: 28, offset: 27 },\n  { value: 'e', line: 1, column: 29, offset: 28 },\n  { value: ',', line: 1, column: 32, offset: 31 },\n  { value: ' ', line: 1, column: 33, offset: 32 },\n  { value: 'a', line: 1, column: 34, offset: 33 },\n  { value: 'n', line: 1, column: 35, offset: 34 },\n  { value: 'd', line: 1, column: 36, offset: 35 },\n  { value: ' ', line: 1, column: 37, offset: 36 },\n  { value: 'c', line: 1, column: 38, offset: 37 },\n  { value: 'o', line: 1, column: 39, offset: 38 },\n  { value: 'd', line: 1, column: 40, offset: 39 },\n  { value: 'e', line: 1, column: 41, offset: 40 },\n  { value: '.', line: 1, column: 44, offset: 43 },\n]\n```\n\n## API\n\n`toList(tree[, test], callback)`\n\nThis function will iterate through given tree to generate list of characters from text.\n\nIf `test` is provided, only subset of tree will be used. `callback` might be triggered multiple\ntimes if there are multiple sub-trees.\n\n`callback` function will be triggered by given a list of nodes with following structure:\n\n```javascript\n{\n  value: 'c', // current character\n  column: 1,  // column number of this character\n  line: 1,    // line number of this character\n  offset: 1,  // offset number of this character\n}\n```\n\n## License\n\n[MIT](https://github.com/laysent/remark-lint-plugins/blob/master/LICENSE) Â© [LaySent](https://github.com/laysent)\n",
    "licenseText": "MIT License\n\nCopyright (c) 2019-present, LaySent <laysent@gmail.com> (github.com/laysent)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/unist-util-to-list-of-char/-/unist-util-to-list-of-char-0.1.3.tgz#e441fb060c047948c1a00257d73e2591407f8e04",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/unist-util-to-list-of-char/-/unist-util-to-list-of-char-0.1.3.tgz",
    "hash": "e441fb060c047948c1a00257d73e2591407f8e04",
    "integrity": "sha512-f8GrLHdhBKfaW6mzJc25BKeUOqhsuiRXlGrXBtb3pmRT3QCuYS+jH4g7Uf52hjV7TLQN4PGnjzrTFMFXAQaprA==",
    "registry": "npm",
    "packageName": "unist-util-to-list-of-char",
    "cacheIntegrity": "sha512-f8GrLHdhBKfaW6mzJc25BKeUOqhsuiRXlGrXBtb3pmRT3QCuYS+jH4g7Uf52hjV7TLQN4PGnjzrTFMFXAQaprA== sha1-5EH7BgwEeUjBoAJX1z4lkUB/jgQ="
  },
  "registry": "npm",
  "hash": "e441fb060c047948c1a00257d73e2591407f8e04"
}