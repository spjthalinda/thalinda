{
  "manifest": {
    "name": "remark-lint-no-undefined-references",
    "version": "4.1.1",
    "description": "remark-lint rule to warn when references to undefined definitions are found",
    "license": "MIT",
    "keywords": [
      "remark",
      "lint",
      "rule",
      "remark-lint-rule",
      "reference",
      "definition"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/remarkjs/remark-lint",
      "directory": "packages/remark-lint-no-undefined-references"
    },
    "bugs": {
      "url": "https://github.com/remarkjs/remark-lint/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "@types/mdast": "^3.0.0",
      "micromark-util-normalize-identifier": "^1.0.0",
      "unified": "^10.0.0",
      "unified-lint-rule": "^2.0.0",
      "unist-util-generated": "^2.0.0",
      "unist-util-position": "^4.0.0",
      "unist-util-visit": "^4.0.0",
      "vfile-location": "^4.0.0"
    },
    "scripts": {
      "build": "rimraf \"*.d.ts\" && tsc && type-coverage"
    },
    "xo": false,
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-remark-lint-no-undefined-references-4.1.1-66c8049da8a72c5dc758562b85bb3019bd396fc1-integrity/node_modules/remark-lint-no-undefined-references/package.json",
    "readmeFilename": "readme.md",
    "readme": "<!--This file is generated-->\n\n# remark-lint-no-undefined-references\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n[`remark-lint`][mono] rule to warn when undefined definitions are referenced.\n\n## Contents\n\n*   [What is this?](#what-is-this)\n*   [When should I use this?](#when-should-i-use-this)\n*   [Presets](#presets)\n*   [Install](#install)\n*   [Use](#use)\n*   [API](#api)\n    *   [`unified().use(remarkLintNoUndefinedReferences[, config])`](#unifieduseremarklintnoundefinedreferences-config)\n*   [Recommendation](#recommendation)\n*   [Examples](#examples)\n*   [Compatibility](#compatibility)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## What is this?\n\nThis package is a [unified][] ([remark][]) plugin, specifically a `remark-lint`\nrule.\nLint rules check markdown code style.\n\n## When should I use this?\n\nYou can use this package to check that referenced definitions are defined.\n\n## Presets\n\nThis rule is included in the following presets:\n\n| Preset | Setting |\n| - | - |\n| [`remark-preset-lint-recommended`](https://github.com/remarkjs/remark-lint/tree/main/packages/remark-preset-lint-recommended) | |\n\n## Install\n\nThis package is [ESM only][esm].\nIn Node.js (version 12.20+, 14.14+, or 16.0+), install with [npm][]:\n\n```sh\nnpm install remark-lint-no-undefined-references\n```\n\nIn Deno with [Skypack][]:\n\n```js\nimport remarkLintNoUndefinedReferences from 'https://cdn.skypack.dev/remark-lint-no-undefined-references@4?dts'\n```\n\nIn browsers with [Skypack][]:\n\n```html\n<script type=\"module\">\n  import remarkLintNoUndefinedReferences from 'https://cdn.skypack.dev/remark-lint-no-undefined-references@4?min'\n</script>\n```\n\n## Use\n\nOn the API:\n\n```js\nimport {read} from 'to-vfile'\nimport {reporter} from 'vfile-reporter'\nimport {remark} from 'remark'\nimport remarkLint from 'remark-lint'\nimport remarkLintNoUndefinedReferences from 'remark-lint-no-undefined-references'\n\nmain()\n\nasync function main() {\n  const file = await remark()\n    .use(remarkLint)\n    .use(remarkLintNoUndefinedReferences)\n    .process(await read('example.md'))\n\n  console.error(reporter(file))\n}\n```\n\nOn the CLI:\n\n```sh\nremark --use remark-lint --use remark-lint-no-undefined-references example.md\n```\n\nOn the CLI in a config file (here a `package.json`):\n\n```diff\n …\n \"remarkConfig\": {\n   \"plugins\": [\n     …\n     \"remark-lint\",\n+    \"remark-lint-no-undefined-references\",\n     …\n   ]\n }\n …\n```\n\n## API\n\nThis package exports no identifiers.\nThe default export is `remarkLintNoUndefinedReferences`.\n\n### `unified().use(remarkLintNoUndefinedReferences[, config])`\n\nThis rule supports standard configuration that all remark lint rules accept\n(such as `false` to turn it off or `[1, options]` to configure it).\n\nThe following options (default: `undefined`) are accepted:\n\n*   `Object` with the following fields:\n    *   `allow` (`Array<string>`, default: `[]`)\n        — text that you want to allowed between `[` and `]` even though it’s\n        undefined\n\n## Recommendation\n\nShortcut references use an implicit syntax that could also occur as plain\ntext.\nFor example, it is reasonable to expect an author adding `[…]` to abbreviate\nsome text somewhere in a document:\n\n```markdown\n> Some […] quote.\n```\n\nThis isn’t a problem, but it might become one when an author later adds a\ndefinition:\n\n```markdown\nSome text. […][]\n\n[…] #read-more \"Read more\"\n```\n\nThe second author might expect only their newly added text to form a link,\nbut their changes also result in a link for the first author’s text.\n\n## Examples\n\n##### `ok.md`\n\n###### In\n\n```markdown\n[foo][]\n\nJust a [ bracket.\n\nTypically, you’d want to use escapes (with a backslash: \\\\) to escape what\ncould turn into a \\[reference otherwise].\n\nJust two braces can’t link: [].\n\n[foo]: https://example.com\n```\n\n###### Out\n\nNo messages.\n\n##### `not-ok.md`\n\n###### In\n\n```markdown\n[bar]\n\n[baz][]\n\n[text][qux]\n\nSpread [over\nlines][]\n\n> in [a\n> block quote][]\n\n[asd][a\n\nCan include [*emphasis*].\n\nMultiple pairs: [a][b][c].\n```\n\n###### Out\n\n```text\n1:1-1:6: Found reference to undefined definition\n3:1-3:8: Found reference to undefined definition\n5:1-5:12: Found reference to undefined definition\n7:8-8:9: Found reference to undefined definition\n10:6-11:17: Found reference to undefined definition\n13:1-13:6: Found reference to undefined definition\n15:13-15:25: Found reference to undefined definition\n17:17-17:23: Found reference to undefined definition\n17:23-17:26: Found reference to undefined definition\n```\n\n##### `ok-allow.md`\n\nWhen configured with `{ allow: [ '...', '…' ] }`.\n\n###### In\n\n```markdown\n> Eliding a portion of a quoted passage […] is acceptable.\n```\n\n###### Out\n\nNo messages.\n\n## Compatibility\n\nProjects maintained by the unified collective are compatible with all maintained\nversions of Node.js.\nAs of now, that is Node.js 12.20+, 14.14+, and 16.0+.\nOur projects sometimes work with older versions, but this is not guaranteed.\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`remarkjs/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n[build-badge]: https://github.com/remarkjs/remark-lint/workflows/main/badge.svg\n\n[build]: https://github.com/remarkjs/remark-lint/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/remarkjs/remark-lint.svg\n\n[coverage]: https://codecov.io/github/remarkjs/remark-lint\n\n[downloads-badge]: https://img.shields.io/npm/dm/remark-lint-no-undefined-references.svg\n\n[downloads]: https://www.npmjs.com/package/remark-lint-no-undefined-references\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/remark-lint-no-undefined-references.svg\n\n[size]: https://bundlephobia.com/result?p=remark-lint-no-undefined-references\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/remarkjs/remark/discussions\n\n[unified]: https://github.com/unifiedjs/unified\n\n[remark]: https://github.com/remarkjs/remark\n\n[mono]: https://github.com/remarkjs/remark-lint\n\n[esm]: https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c\n\n[skypack]: https://www.skypack.dev\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[health]: https://github.com/remarkjs/.github\n\n[contributing]: https://github.com/remarkjs/.github/blob/main/contributing.md\n\n[support]: https://github.com/remarkjs/.github/blob/main/support.md\n\n[coc]: https://github.com/remarkjs/.github/blob/main/code-of-conduct.md\n\n[license]: https://github.com/remarkjs/remark-lint/blob/main/license\n\n[author]: https://wooorm.com\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/remark-lint-no-undefined-references/-/remark-lint-no-undefined-references-4.1.1.tgz#66c8049da8a72c5dc758562b85bb3019bd396fc1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/remark-lint-no-undefined-references/-/remark-lint-no-undefined-references-4.1.1.tgz",
    "hash": "66c8049da8a72c5dc758562b85bb3019bd396fc1",
    "integrity": "sha512-J20rKfTGflLiTI3T5JlLZSmINk6aDGmZi1y70lpU69LDfAyHAKgDK6sSW9XDeFmCPPdm8Ybxe5Gf2a70k+GcVQ==",
    "registry": "npm",
    "packageName": "remark-lint-no-undefined-references",
    "cacheIntegrity": "sha512-J20rKfTGflLiTI3T5JlLZSmINk6aDGmZi1y70lpU69LDfAyHAKgDK6sSW9XDeFmCPPdm8Ybxe5Gf2a70k+GcVQ== sha1-ZsgEnainLF3HWFYrhbswGb05b8E="
  },
  "registry": "npm",
  "hash": "66c8049da8a72c5dc758562b85bb3019bd396fc1"
}