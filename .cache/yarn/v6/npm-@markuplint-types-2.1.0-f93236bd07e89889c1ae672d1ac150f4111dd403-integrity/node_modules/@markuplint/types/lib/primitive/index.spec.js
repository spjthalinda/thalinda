"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _1 = require(".");
test('int', () => {
    expect((0, _1.isInt)('0')).toBe(true);
    expect((0, _1.isInt)('1')).toBe(true);
    expect((0, _1.isInt)('-0')).toBe(true);
    expect((0, _1.isInt)('-1')).toBe(true);
    expect((0, _1.isInt)('10')).toBe(true);
    expect((0, _1.isInt)('100')).toBe(true);
    expect((0, _1.isInt)('1.00')).toBe(false);
    expect((0, _1.isInt)('.001')).toBe(false);
    expect((0, _1.isInt)(' 1 ')).toBe(false);
    expect((0, _1.isInt)('- 1')).toBe(false);
});
test('uint', () => {
    expect((0, _1.isUint)('0')).toBe(true);
    expect((0, _1.isUint)('1')).toBe(true);
    expect((0, _1.isUint)('10')).toBe(true);
    expect((0, _1.isUint)('100')).toBe(true);
    expect((0, _1.isUint)('-0')).toBe(false);
    expect((0, _1.isUint)('-1')).toBe(false);
    expect((0, _1.isUint)('1.00')).toBe(false);
    expect((0, _1.isUint)('.001')).toBe(false);
    expect((0, _1.isUint)(' 1 ')).toBe(false);
    expect((0, _1.isUint)('- 1')).toBe(false);
});
test('float', () => {
    expect((0, _1.isFloat)('0')).toBe(true);
    expect((0, _1.isFloat)('1')).toBe(true);
    expect((0, _1.isFloat)('10')).toBe(true);
    expect((0, _1.isFloat)('100')).toBe(true);
    expect((0, _1.isFloat)('-0')).toBe(true);
    expect((0, _1.isFloat)('-1')).toBe(true);
    expect((0, _1.isFloat)('1.00')).toBe(true);
    expect((0, _1.isFloat)('.001')).toBe(true);
    expect((0, _1.isFloat)(' 1 ')).toBe(false);
    expect((0, _1.isFloat)('- 1')).toBe(false);
});
test('nonZeroUint', () => {
    expect((0, _1.isNonZeroUint)('0')).toBe(false);
    expect((0, _1.isNonZeroUint)('1')).toBe(true);
    expect((0, _1.isNonZeroUint)('10')).toBe(true);
    expect((0, _1.isNonZeroUint)('100')).toBe(true);
    expect((0, _1.isNonZeroUint)('-0')).toBe(false);
    expect((0, _1.isNonZeroUint)('-1')).toBe(false);
    expect((0, _1.isNonZeroUint)('1.00')).toBe(false);
    expect((0, _1.isNonZeroUint)('.001')).toBe(false);
    expect((0, _1.isNonZeroUint)(' 1 ')).toBe(false);
    expect((0, _1.isNonZeroUint)('- 1')).toBe(false);
});
test('quantity', () => {
    expect((0, _1.isQuantity)('0px', ['px', 'em'])).toBe(true);
    expect((0, _1.isQuantity)('.5px', ['px', 'em'])).toBe(true);
    expect((0, _1.isQuantity)('1.5em', ['px', 'em'])).toBe(true);
    expect((0, _1.isQuantity)('1.5cm', ['px', 'em'])).toBe(false);
    expect((0, _1.isQuantity)('1.5px', ['px', 'em'], 'int')).toBe(false);
    expect((0, _1.isQuantity)('-5px', ['px', 'em'], 'int')).toBe(true);
    expect((0, _1.isQuantity)('-5px', ['px', 'em'], 'uint')).toBe(false);
    expect((0, _1.isQuantity)('1.12e+21px', ['px', 'em'], 'float')).toBe(true);
    expect((0, _1.isQuantity)('1.12e+21px', ['px', 'em'], 'int')).toBe(false);
});
