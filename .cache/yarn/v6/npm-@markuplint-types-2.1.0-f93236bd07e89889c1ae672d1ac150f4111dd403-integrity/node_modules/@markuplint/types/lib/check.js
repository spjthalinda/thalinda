"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isCustomSyntax = exports.isCSSSyntax = exports.isNumber = exports.isEnum = exports.isList = exports.isKeyword = exports.check = void 0;
const debug_1 = require("./debug");
const enum_1 = require("./enum");
const keyword_type_1 = require("./keyword-type");
const list_1 = require("./list");
const number_1 = require("./number");
function check(value, type, ref, cache = true) {
    if (isKeyword(type)) {
        (0, debug_1.log)('Check keyword: %s', type);
        return (0, keyword_type_1.checkKeywordType)(value, type, cache);
    }
    if (isList(type)) {
        (0, debug_1.log)('Check list: %O', type);
        return (0, list_1.checkList)(value, type, ref, cache);
    }
    if (isEnum(type)) {
        (0, debug_1.log)('Check enum: %O', type);
        return (0, enum_1.checkEnum)(value, type, ref);
    }
    (0, debug_1.log)('Check number: %O', type);
    return (0, number_1.checkNumber)(value, type, ref);
}
exports.check = check;
function isKeyword(type) {
    return typeof type === 'string';
}
exports.isKeyword = isKeyword;
function isList(type) {
    return typeof type !== 'string' && 'token' in type;
}
exports.isList = isList;
function isEnum(type) {
    return typeof type !== 'string' && 'enum' in type;
}
exports.isEnum = isEnum;
function isNumber(type) {
    return typeof type !== 'string' && 'enum' in type;
}
exports.isNumber = isNumber;
function isCSSSyntax(type) {
    return typeof type === 'string' || 'syntax' in type;
}
exports.isCSSSyntax = isCSSSyntax;
function isCustomSyntax(type) {
    return !isCSSSyntax(type);
}
exports.isCustomSyntax = isCustomSyntax;
