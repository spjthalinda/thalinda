{
  "manifest": {
    "name": "stringify-entities",
    "version": "4.0.2",
    "description": "Serialize (encode) HTML character references",
    "license": "MIT",
    "keywords": [
      "stringify",
      "encode",
      "escape",
      "html",
      "character",
      "reference",
      "entity",
      "entities"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/wooorm/stringify-entities.git"
    },
    "bugs": {
      "url": "https://github.com/wooorm/stringify-entities/issues"
    },
    "funding": {
      "type": "github",
      "url": "https://github.com/sponsors/wooorm"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "lib/",
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "character-entities-html4": "^2.0.0",
      "character-entities-legacy": "^3.0.0"
    },
    "devDependencies": {
      "@types/tape": "^4.0.0",
      "c8": "^7.0.0",
      "character-entities": "^2.0.0",
      "prettier": "^2.0.0",
      "remark-cli": "^10.0.0",
      "remark-preset-wooorm": "^9.0.0",
      "rimraf": "^3.0.0",
      "tape": "^5.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "xo": "^0.46.0"
    },
    "scripts": {
      "generate": "node build",
      "prepublishOnly": "npm run build && npm run format",
      "build": "rimraf \"lib/**/*.d.ts\" \"*.d.ts\" && tsc && type-coverage",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node --conditions development test.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov npm run test-api",
      "test": "npm run generate && npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "rules": {
        "unicorn/numeric-separators-style": "off"
      }
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-stringify-entities-4.0.2-13d113dc7449dc8ae4cb22c28883ee3fff8753e3-integrity/node_modules/stringify-entities/package.json",
    "readmeFilename": "readme.md",
    "readme": "# stringify-entities\n\n[![Build Status][build-badge]][build]\n[![Coverage Status][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n\nSerialize (encode) HTML character references.\n\n## Contents\n\n*   [What is this?](#what-is-this)\n*   [When should I use this?](#when-should-i-use-this)\n*   [Install](#install)\n*   [Use](#use)\n*   [API](#api)\n    *   [`stringifyEntities(value[, options])`](#stringifyentitiesvalue-options)\n*   [Algorithm](#algorithm)\n*   [Types](#types)\n*   [Compatibility](#compatibility)\n*   [Security](#security)\n*   [Related](#related)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## What is this?\n\nThis is a small and powerful encoder of HTML character references (often called\nentities).\nThis one has either all the options you need for a minifier/formatter, or a\ntiny size when using `stringifyEntitiesLight`.\n\n## When should I use this?\n\nYou can use this for spec-compliant encoding of character references.\nIt’s small and fast enough to do that well.\nYou can also use this when making an HTML formatter or minifier, because there\nare different ways to produce pretty or tiny output.\nThis package is reliable: ``'`'`` characters are encoded to ensure no scripts\nrun in Internet Explorer 6 to 8.\nAdditionally, only named references recognized by HTML 4 are encoded, meaning\nthe infamous `&apos;` (which people think is a [virus][]) won’t show up.\n\n## Install\n\nThis package is [ESM only][esm].\nIn Node.js (version 12.20+, 14.14+, or 16.0+), install with [npm][]:\n\n```sh\nnpm install stringify-entities\n```\n\nIn Deno with [Skypack][]:\n\n```js\nimport {stringifyEntities} from 'https://cdn.skypack.dev/stringify-entities@4?dts'\n```\n\nIn browsers with [Skypack][]:\n\n```html\n<script type=\"module\">\n  import {stringifyEntities} from 'https://cdn.skypack.dev/stringify-entities@4?min'\n</script>\n```\n\n## Use\n\n```js\nimport {stringifyEntities} from 'stringify-entities'\n\nstringifyEntities('alpha © bravo ≠ charlie 𝌆 delta')\n// => 'alpha &#xA9; bravo &#x2260; charlie &#x1D306; delta'\n\nstringifyEntities('alpha © bravo ≠ charlie 𝌆 delta', {useNamedReferences: true})\n// => 'alpha &copy; bravo &ne; charlie &#x1D306; delta'\n```\n\n## API\n\nThis package exports the following identifiers: `stringifyEntities`,\n`stringifyEntitiesLight`.\nThere is no default export.\n\n### `stringifyEntities(value[, options])`\n\nEncode special characters in `value`.\n\n##### Core options\n\n###### `options.escapeOnly`\n\nWhether to only escape possibly dangerous characters (`boolean`, default:\n`false`).\nThose characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n\n###### `options.subset`\n\nWhether to only escape the given subset of characters (`Array.<string>`).\nNote that only BMP characters are supported here (so no emoji).\n\n##### Formatting options\n\nIf you do not care about the following options, use `stringifyEntitiesLight`,\nwhich always outputs hexadecimal character references.\n\n###### `options.useNamedReferences`\n\nPrefer named character references (`&amp;`) where possible (`boolean?`, default:\n`false`).\n\n###### `options.useShortestReferences`\n\nPrefer the shortest possible reference, if that results in less bytes\n(`boolean?`, default: `false`).\n\n> ⚠️ **Note**: `useNamedReferences` can be omitted when using\n> `useShortestReferences`.\n\n###### `options.omitOptionalSemicolons`\n\nWhether to omit semicolons when possible (`boolean?`, default: `false`).\n\n> ⚠️ **Note**: This creates what HTML calls “parse errors” but is otherwise\n> still valid HTML — don’t use this except when building a minifier.\n> Omitting semicolons is possible for certain named and numeric references in\n> some cases.\n\n###### `options.attribute`\n\nCreate character references which don’t fail in attributes (`boolean?`, default:\n`false`).\n\n> ⚠️ **Note**: `attribute` only applies when operating dangerously with\n> `omitOptionalSemicolons: true`.\n\n#### Returns\n\n`string` — encoded value.\n\n## Algorithm\n\nBy default, all dangerous, non-ASCII, and non-printable ASCII characters are\nencoded.\nA [subset][] of characters can be given to encode just those characters.\nAlternatively, pass [`escapeOnly`][escapeonly] to escape just the dangerous\ncharacters (`\"`, `'`, `<`, `>`, `&`, `` ` ``).\nBy default, hexadecimal character references are used.\nPass [`useNamedReferences`][named] to use named character references when\npossible, or [`useShortestReferences`][short] to use whichever is shortest:\ndecimal, hexadecimal, or named.\nThere is also a `stringifyEntitiesLight` export, which works just like\n`stringifyEntities` but without the formatting options: it’s much smaller but\nalways outputs hexadecimal character references.\n\n## Types\n\nThis package is fully typed with [TypeScript][].\nAdditional `Options` and `LightOptions` types, that model their respective\nvalues, are exported.\n\n## Compatibility\n\nThis package is at least compatible with all maintained versions of Node.js.\nAs of now, that is Node.js 12.20+, 14.14+, and 16.0+.\nIt also works in Deno and modern browsers.\n\n## Security\n\nThis package is safe.\n\n## Related\n\n*   [`parse-entities`](https://github.com/wooorm/parse-entities)\n    — parse (decode) HTML character references\n*   [`wooorm/character-entities`](https://github.com/wooorm/character-entities)\n    — info on character references\n*   [`wooorm/character-entities-html4`](https://github.com/wooorm/character-entities-html4)\n    — info on HTML 4 character references\n*   [`wooorm/character-entities-legacy`](https://github.com/wooorm/character-entities-legacy)\n    — info on legacy character references\n*   [`wooorm/character-reference-invalid`](https://github.com/wooorm/character-reference-invalid)\n    — info on invalid numeric character references\n\n## Contribute\n\nYes please!\nSee [How to Contribute to Open Source][contribute].\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/wooorm/stringify-entities/workflows/main/badge.svg\n\n[build]: https://github.com/wooorm/stringify-entities/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/stringify-entities.svg\n\n[coverage]: https://codecov.io/github/wooorm/stringify-entities\n\n[downloads-badge]: https://img.shields.io/npm/dm/stringify-entities.svg\n\n[downloads]: https://www.npmjs.com/package/stringify-entities\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/stringify-entities.svg\n\n[size]: https://bundlephobia.com/result?p=stringify-entities\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[skypack]: https://www.skypack.dev\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[esm]: https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c\n\n[typescript]: https://www.typescriptlang.org\n\n[contribute]: https://opensource.guide/how-to-contribute/\n\n[virus]: https://www.telegraph.co.uk/technology/advice/10516839/Why-do-some-apostrophes-get-replaced-with-andapos.html\n\n[subset]: #optionssubset\n\n[escapeonly]: #optionsescapeonly\n\n[named]: #optionsusenamedreferences\n\n[short]: #optionsuseshortestreferences\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2015 Titus Wormer <mailto:tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/stringify-entities/-/stringify-entities-4.0.2.tgz#13d113dc7449dc8ae4cb22c28883ee3fff8753e3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/stringify-entities/-/stringify-entities-4.0.2.tgz",
    "hash": "13d113dc7449dc8ae4cb22c28883ee3fff8753e3",
    "integrity": "sha512-MTxTVcEkorNtBbNpoFJPEh0kKdM6+QbMjLbaxmvaPMmayOXdr/AIVIIJX7FReUVweRBFJfZepK4A4AKgwuFpMQ==",
    "registry": "npm",
    "packageName": "stringify-entities",
    "cacheIntegrity": "sha512-MTxTVcEkorNtBbNpoFJPEh0kKdM6+QbMjLbaxmvaPMmayOXdr/AIVIIJX7FReUVweRBFJfZepK4A4AKgwuFpMQ== sha1-E9ET3HRJ3IrkyyLCiIPuP/+HU+M="
  },
  "registry": "npm",
  "hash": "13d113dc7449dc8ae4cb22c28883ee3fff8753e3"
}