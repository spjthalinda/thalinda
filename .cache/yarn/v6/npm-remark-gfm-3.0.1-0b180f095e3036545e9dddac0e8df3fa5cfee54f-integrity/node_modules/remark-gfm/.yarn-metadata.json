{
  "manifest": {
    "name": "remark-gfm",
    "version": "3.0.1",
    "description": "remark plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists)",
    "license": "MIT",
    "keywords": [
      "unified",
      "remark",
      "remark-plugin",
      "plugin",
      "mdast",
      "markdown",
      "table",
      "strikethrough",
      "tasklist",
      "autolink",
      "footnote",
      "github",
      "gfm"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/remarkjs/remark-gfm.git"
    },
    "bugs": {
      "url": "https://github.com/remarkjs/remark-gfm/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "@types/mdast": "^3.0.0",
      "mdast-util-gfm": "^2.0.0",
      "micromark-extension-gfm": "^2.0.0",
      "unified": "^10.0.0"
    },
    "devDependencies": {
      "@types/tape": "^4.0.0",
      "c8": "^7.0.0",
      "is-hidden": "^2.0.0",
      "prettier": "^2.0.0",
      "remark": "^14.0.0",
      "remark-cli": "^10.0.0",
      "remark-preset-wooorm": "^9.0.0",
      "rimraf": "^3.0.0",
      "string-width": "^5.0.0",
      "tape": "^5.0.0",
      "to-vfile": "^7.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "xo": "^0.46.0"
    },
    "scripts": {
      "build": "rimraf \"test/**/*.d.ts\" \"*.d.ts\" && tsc && type-coverage",
      "format": "remark . -qfo --ignore-pattern test/ && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node --conditions development test/index.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov npm run test-api",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-remark-gfm-3.0.1-0b180f095e3036545e9dddac0e8df3fa5cfee54f-integrity/node_modules/remark-gfm/package.json",
    "readmeFilename": "readme.md",
    "readme": "# remark-gfm\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n**[remark][]** plugin to support [GFM][] (autolink literals, footnotes,\nstrikethrough, tables, tasklists).\n\n## Contents\n\n*   [What is this?](#what-is-this)\n*   [When should I use this?](#when-should-i-use-this)\n*   [Install](#install)\n*   [Use](#use)\n*   [API](#api)\n    *   [`unified().use(remarkGfm[, options])`](#unifieduseremarkgfm-options)\n*   [Examples](#examples)\n    *   [Example: `singleTilde`](#example-singletilde)\n    *   [Example: `stringLength`](#example-stringlength)\n*   [Types](#types)\n*   [Compatibility](#compatibility)\n*   [Security](#security)\n*   [Related](#related)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## What is this?\n\nThis package is a [unified][] ([remark][]) plugin to enable the extensions to\nmarkdown that GitHub adds: autolink literals (`www.x.com`), footnotes (`[^1]`),\nstrikethrough (`~~stuff~~`), tables (`| cell |…`), and tasklists (`* [x]`).\nYou can use this plugin to add support for parsing and serializing them.\nThese extensions by GitHub to CommonMark are called [GFM][] (GitHub Flavored\nMarkdown).\n\n**unified** is a project that transforms content with abstract syntax trees\n(ASTs).\n**remark** adds support for markdown to unified.\n**mdast** is the markdown AST that remark uses.\nThis is a remark plugin that transforms mdast.\n\n## When should I use this?\n\nThis project is useful when you want to support the same features that GitHub\ndoes in files in a repo, Gists, and several other places.\nUsers frequently believe that some of these extensions, specifically autolink\nliterals and tables, are part of normal markdown, so using `remark-gfm` will\nhelp match your implementation to their understanding of markdown.\nThere are several edge cases where GitHub’s implementation works in unexpected\nways or even different than described in their spec, so *writing* in GFM is not\nalways the best choice.\n\nThis plugin does not handle how markdown is turned to HTML.\nThat’s done by [`remark-rehype`][remark-rehype].\nIf your content is not in English and uses footnotes, you should configure that\nplugin.\nWhen generating HTML, you might also want to enable [`rehype-slug`][rehype-slug]\nto add `id`s on headings.\n\nA different plugin, [`remark-frontmatter`][remark-frontmatter], adds support for\nfrontmatter.\nGitHub supports YAML frontmatter for files in repos and Gists but they don’t\ntreat it as part of GFM.\n\nAnother plugin, [`remark-github`][remark-github], adds support for how markdown\nworks in relation to a certain GitHub repo in comments, issues, PRs, and\nreleases, by linking references to commits, issues, and users.\n\nYet another plugin, [`remark-breaks`][remark-breaks], turns soft line endings\n(enters) into hard breaks (`<br>`s).\nGitHub does this in a few places (comments, issues, PRs, and releases).\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c).\nIn Node.js (version 12.20+, 14.14+, or 16.0+), install with [npm][]:\n\n```sh\nnpm install remark-gfm\n```\n\nIn Deno with [Skypack][]:\n\n```js\nimport remarkGfm from 'https://cdn.skypack.dev/remark-gfm@3?dts'\n```\n\nIn browsers with [Skypack][]:\n\n```html\n<script type=\"module\">\n  import remarkGfm from 'https://cdn.skypack.dev/remark-gfm@3?min'\n</script>\n```\n\n## Use\n\nSay we have the following file `example.md`:\n\n```markdown\n# GFM\n\n## Autolink literals\n\nwww.example.com, https://example.com, and contact@example.com.\n\n## Footnote\n\nA note[^1]\n\n[^1]: Big note.\n\n## Strikethrough\n\n~one~ or ~~two~~ tildes.\n\n## Table\n\n| a | b  |  c |  d  |\n| - | :- | -: | :-: |\n\n## Tasklist\n\n* [ ] to do\n* [x] done\n```\n\nAnd our module `example.js` looks as follows:\n\n```js\nimport {read} from 'to-vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkGfm from 'remark-gfm'\nimport remarkRehype from 'remark-rehype'\nimport rehypeStringify from 'rehype-stringify'\n\nmain()\n\nasync function main() {\n  const file = await unified()\n    .use(remarkParse)\n    .use(remarkGfm)\n    .use(remarkRehype)\n    .use(rehypeStringify)\n    .process(await read('example.md'))\n\n  console.log(String(file))\n}\n```\n\nNow running `node example` yields:\n\n```html\n<h1>GFM</h1>\n<h2>Autolink literals</h2>\n<p><a href=\"http://www.example.com\">www.example.com</a>, <a href=\"https://example.com\">https://example.com</a>, and <a href=\"mailto:contact@example.com\">contact@example.com</a>.</p>\n<h2>Footnote</h2>\n<p>A note<sup><a href=\"#user-content-fn-1\" id=\"user-content-fnref-1\" data-footnote-ref aria-describedby=\"footnote-label\">1</a></sup></p>\n<h2>Strikethrough</h2>\n<p><del>one</del> or <del>two</del> tildes.</p>\n<h2>Table</h2>\n<table>\n<thead>\n<tr>\n<th>a</th>\n<th align=\"left\">b</th>\n<th align=\"right\">c</th>\n<th align=\"center\">d</th>\n</tr>\n</thead>\n</table>\n<h2>Tasklist</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> to do</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" checked disabled> done</li>\n</ul>\n<section data-footnotes class=\"footnotes\"><h2 id=\"footnote-label\" class=\"sr-only\">Footnotes</h2>\n<ol>\n<li id=\"user-content-fn-1\">\n<p>Big note. <a href=\"#user-content-fnref-1\" data-footnote-backref class=\"data-footnote-backref\" aria-label=\"Back to content\">↩</a></p>\n</li>\n</ol>\n</section>\n```\n\n## API\n\nThis package exports no identifiers.\nThe default export is `remarkGfm`.\n\n### `unified().use(remarkGfm[, options])`\n\nPlugin to support [GFM][] (autolink literals, footnotes, strikethrough, tables,\ntasklists).\n\n##### `options`\n\nConfiguration (optional).\n\n###### `options.singleTilde`\n\nWhether to parse strikethrough with a single tilde (`boolean`, default:\n`true`).\nSingle tildes work on github.com, but are technically prohibited by the GFM\nspec.\n\n###### `options.tableCellPadding`\n\nSerialize tables with a space between delimiters (`|`) and cell content\n(`boolean`, default: `true`).\n\n###### `options.tablePipeAlign`\n\nSerialize by aligning the delimiters (`|`) between table cells so that they all\nalign nicely and form a grid (`boolean`, default: `true`).\n\n###### `options.stringLength`\n\nFunction to detect the length of table cell content (`Function`, default:\n`s => s.length`).\nThis is used when aligning the delimiters (`|`) between table cells.\nFull-width characters and emoji mess up delimiter alignment when viewing the\nmarkdown source.\nTo fix this, you can pass this function, which receives the cell content and\nreturns its “visible” size.\nNote that what is and isn’t visible depends on where the text is displayed.\n\n## Examples\n\n### Example: `singleTilde`\n\nTo turn off support for parsing strikethrough with single tildes, pass\n`singleTilde: false`:\n\n```js\n// …\n\nconst file = await unified()\n  .use(remarkParse)\n  .use(remarkGfm, {singleTilde: false})\n  .use(remarkRehype)\n  .use(rehypeStringify)\n  .process('~one~ and ~~two~~')\n\nconsole.log(String(file))\n```\n\nYields:\n\n```html\n<p>~one~ and <del>two</del></p>\n```\n\n### Example: `stringLength`\n\nIt’s possible to align tables based on the visual width of cells.\nFirst, let’s show the problem:\n\n```js\nimport {remark} from 'remark'\nimport remarkGfm from 'remark-gfm'\n\nmain()\n\nasync function main() {\n  const input = `| Alpha | Bravo |\n| - | - |\n| 中文 | Charlie |\n| 👩‍❤️‍👩 | Delta |`\n\n  const file = await remark()\n    .use(remarkGfm)\n    .process(input)\n\n  console.log(String(file))\n}\n```\n\nThe above code shows how remark can be used to format markdown.\nThe output is as follows:\n\n```markdown\n| Alpha    | Bravo   |\n| -------- | ------- |\n| 中文       | Charlie |\n| 👩‍❤️‍👩 | Delta   |\n```\n\nTo improve the alignment of these full-width characters and emoji, pass a\n`stringLength` function that calculates the visual width of cells.\nOne such algorithm is [`string-width`][string-width].\nIt can be used like so:\n\n```diff\n@@ -1,5 +1,6 @@\n import {remark} from 'remark'\n import remarkGfm from 'remark-gfm'\n+import stringWidth from 'string-width'\n\n main()\n\n@@ -10,7 +11,7 @@ async function main() {\n | 👩‍❤️‍👩 | Delta |`\n\n   const file = await remark()\n-    .use(remarkGfm)\n+    .use(remarkGfm, {stringLength: stringWidth})\n     .process(input)\n\n   console.log(String(file))\n```\n\nThe output of our code with these changes is as follows:\n\n```markdown\n| Alpha | Bravo   |\n| ----- | ------- |\n| 中文  | Charlie |\n| 👩‍❤️‍👩    | Delta   |\n```\n\n## Types\n\nThis package is fully typed with [TypeScript][].\nIt exports an `Options` type, which specifies the interface of the accepted\noptions.\n\n## Compatibility\n\nProjects maintained by the unified collective are compatible with all maintained\nversions of Node.js.\nAs of now, that is Node.js 12.20+, 14.14+, and 16.0+.\nOur projects sometimes work with older versions, but this is not guaranteed.\n\nThis plugin works with `remark-parse` version 10+ (`remark` version 14+).\nThe previous version (v2) worked with `remark-parse` version 9 (`remark`\nversion 13).\nEarlier versions of `remark-parse` and `remark` had a `gfm` option that enabled\nthis functionality, which defaulted to true.\n\n## Security\n\nUse of `remark-gfm` does not involve **[rehype][]** (**[hast][]**) so there are\nno openings for [cross-site scripting (XSS)][xss] attacks.\n\n## Related\n\n*   [`remark-github`][remark-github]\n    — link references to commits, issues, PRs, and users\n*   [`remark-breaks`][remark-breaks]\n    — support breaks without needing spaces or escapes (enters to `<br>`)\n*   [`remark-frontmatter`][remark-frontmatter]\n    — support frontmatter (YAML, TOML, and more)\n*   [`remark-directive`](https://github.com/remarkjs/remark-directive)\n    — support directives\n*   [`remark-math`](https://github.com/remarkjs/remark-math)\n    — support math\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`remarkjs/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/remarkjs/remark-gfm/workflows/main/badge.svg\n\n[build]: https://github.com/remarkjs/remark-gfm/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/remarkjs/remark-gfm.svg\n\n[coverage]: https://codecov.io/github/remarkjs/remark-gfm\n\n[downloads-badge]: https://img.shields.io/npm/dm/remark-gfm.svg\n\n[downloads]: https://www.npmjs.com/package/remark-gfm\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/remark-gfm.svg\n\n[size]: https://bundlephobia.com/result?p=remark-gfm\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/remarkjs/remark/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[skypack]: https://www.skypack.dev\n\n[health]: https://github.com/remarkjs/.github\n\n[contributing]: https://github.com/remarkjs/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/remarkjs/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/remarkjs/.github/blob/HEAD/code-of-conduct.md\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[remark]: https://github.com/remarkjs/remark\n\n[unified]: https://github.com/unifiedjs/unified\n\n[xss]: https://en.wikipedia.org/wiki/Cross-site_scripting\n\n[typescript]: https://www.typescriptlang.org\n\n[rehype]: https://github.com/rehypejs/rehype\n\n[hast]: https://github.com/syntax-tree/hast\n\n[gfm]: https://github.github.com/gfm/\n\n[remark-frontmatter]: https://github.com/remarkjs/remark-frontmatter\n\n[remark-github]: https://github.com/remarkjs/remark-github\n\n[remark-breaks]: https://github.com/remarkjs/remark-breaks\n\n[remark-rehype]: https://github.com/remarkjs/remark-rehype\n\n[rehype-slug]: https://github.com/rehypejs/rehype-slug\n\n[string-width]: https://github.com/sindresorhus/string-width\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2020 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/remark-gfm/-/remark-gfm-3.0.1.tgz#0b180f095e3036545e9dddac0e8df3fa5cfee54f",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/remark-gfm/-/remark-gfm-3.0.1.tgz",
    "hash": "0b180f095e3036545e9dddac0e8df3fa5cfee54f",
    "integrity": "sha512-lEFDoi2PICJyNrACFOfDD3JlLkuSbOa5Wd8EPt06HUdptv8Gn0bxYTdbU/XXQ3swAPkEaGxxPN9cbnMHvVu1Ig==",
    "registry": "npm",
    "packageName": "remark-gfm",
    "cacheIntegrity": "sha512-lEFDoi2PICJyNrACFOfDD3JlLkuSbOa5Wd8EPt06HUdptv8Gn0bxYTdbU/XXQ3swAPkEaGxxPN9cbnMHvVu1Ig== sha1-CxgPCV4wNlRend2sDo3z+lz+5U8="
  },
  "registry": "npm",
  "hash": "0b180f095e3036545e9dddac0e8df3fa5cfee54f"
}