{
  "manifest": {
    "name": "micromark-extension-mdxjs-esm",
    "version": "1.0.3",
    "description": "micromark extension to support MDX JS import/exports",
    "license": "MIT",
    "keywords": [
      "micromark",
      "micromark-extension",
      "mdx",
      "mdxjs",
      "import",
      "export",
      "js",
      "javascript",
      "es",
      "ecmascript",
      "markdown",
      "unified"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/micromark/micromark-extension-mdxjs-esm.git"
    },
    "bugs": {
      "url": "https://github.com/micromark/micromark-extension-mdxjs-esm/issues"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "dev/",
      "lib/",
      "index.d.ts",
      "index.js"
    ],
    "exports": {
      "development": "./dev/index.js",
      "default": "./index.js"
    },
    "dependencies": {
      "micromark-core-commonmark": "^1.0.0",
      "micromark-util-character": "^1.0.0",
      "micromark-util-events-to-acorn": "^1.0.0",
      "micromark-util-symbol": "^1.0.0",
      "micromark-util-types": "^1.0.0",
      "unist-util-position-from-estree": "^1.1.0",
      "uvu": "^0.5.0",
      "vfile-message": "^3.0.0"
    },
    "devDependencies": {
      "@types/acorn": "^4.0.0",
      "@types/tape": "^4.0.0",
      "acorn": "^8.0.0",
      "acorn-jsx": "^5.0.0",
      "c8": "^7.0.0",
      "micromark": "^3.0.0",
      "micromark-build": "^1.0.0",
      "prettier": "^2.0.0",
      "remark-cli": "^10.0.0",
      "remark-preset-wooorm": "^9.0.0",
      "rimraf": "^3.0.0",
      "tape": "^5.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "xo": "^0.48.0"
    },
    "scripts": {
      "build": "rimraf \"dev/**/*.d.ts\" \"test/**/*.d.ts\" && tsc && type-coverage && micromark-build",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node --conditions development test/index.js",
      "test-coverage": "c8 --check-coverage --branches 100 --functions 100 --lines 100 --statements 100 --reporter lcov node --conditions development test/index.js",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "rules": {
        "node/file-extension-in-import": "off",
        "unicorn/prefer-code-point": "off",
        "unicorn/no-this-assignment": "off"
      }
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-micromark-extension-mdxjs-esm-1.0.3-630d9dc9db2c2fd470cac8c1e7a824851267404d-integrity/node_modules/micromark-extension-mdxjs-esm/package.json",
    "readmeFilename": "readme.md",
    "readme": "# micromark-extension-mdxjs-esm\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Size][size-badge]][size]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\n**[micromark][]** extension to support MDX.js ESM import/exports.\n\nThis package provides the low-level modules for integrating with the micromark\ntokenizer but has no handling of compiling to HTML: go to a syntax tree instead.\n\n## When to use this\n\nThis package is already included in [xdm][] and [`mdx-js/mdx` (next)][mdx-js].\n\nYou should probably use [`micromark-extension-mdx`][mdx] or\n[`micromark-extension-mdxjs`][mdxjs] instead, which combine this package with\nother MDX features.\nAlternatively, if you’re using [`micromark`][micromark] or\n[`mdast-util-from-markdown`][from-markdown] and you don’t want all of MDX, use\nthis package.\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c):\nNode 12+ is needed to use it and it must be `import`ed instead of `require`d.\n\n[npm][]:\n\n```sh\nnpm install micromark-extension-mdxjs-esm\n```\n\n## Use\n\n```js\nimport * as acorn from 'acorn'\nimport {micromark} from 'micromark'\nimport {mdxjsEsm} from 'micromark-extension-mdxjs-esm'\n\nconst output = micromark('import a from \"b\"\\n\\n# c', {\n  extensions: [mdxjsEsm({acorn})]\n})\n\nconsole.log(output)\n```\n\nYields:\n\n```html\n<h1>c</h1>\n```\n\n…which is rather useless: go to a syntax tree with\n[`mdast-util-from-markdown`][from-markdown] and\n[`mdast-util-mdx-expression`][util] instead.\n\n## API\n\nThis package exports the following identifiers: `mdxjsEsm`.\nThere is no default export.\n\nThe export map supports the endorsed\n[`development` condition](https://nodejs.org/api/packages.html#packages_resolving_user_conditions).\nRun `node --conditions development module.js` to get instrumented dev code.\nWithout this condition, production code is loaded.\n\n### `mdxjsEsm(options)`\n\nA function that can be called with options that returns an extension for\nmicromark to parse ESM (can be passed in `extensions`).\n\n##### `options`\n\n###### `options.acorn`\n\nAcorn parser to use ([`Acorn`][acorn], required).\n\n###### `options.acornOptions`\n\nOptions to pass to acorn (`Object`, default: `{ecmaVersion: 2020, locations:\ntrue, sourceType: 'module'}`).\nAll fields except for `locations` can be set.\n\n###### `options.addResult`\n\nWhether to add an `estree` field to `mdxjsEsm` tokens with results from acorn\n(`boolean`, default: `false`).\n\n## Syntax\n\nAll valid imports and exports are supported, depending on what the given acorn\ninstance and configuration supports.\n\nWhen the lowercase strings `export` or `import` are found, followed by unicode\nwhitespace (`\\s`), we expect JavaScript.\nOtherwise, like normal in markdown, we exit and it’ll end up as a paragraph.\nWe continue parsing until we find a line ending followed by a blank line.\nAt that point, we parse with acorn: it if parses, we found our block.\nOtherwise, if parsing failed at the last character, we assume it’s a blank line\nin code: we continue on until the next blank line and try again.\nOtherwise, the acorn error is thrown.\n\n```js\nimport a from \"b\"\nimport * as a from \"b\"\nimport {a} from \"b\"\nimport {a as b} from \"c\"\nimport a, {b as c} from \"d\"\nimport a, * as b from \"c\"\nimport \"a\"\n\nexport var a = \"\"\nexport const a = \"\"\nexport let a = \"\"\nexport var a, b\nexport var a = \"a\", b = \"b\"\nexport function a() {}\nexport class a {}\nexport var {a} = {}\nexport var {a: b} = {}\nexport var [a] = []\nexport default a = 1\nexport default function a() {}\nexport default class a {}\nexport * from \"a\"\nexport * as a from \"b\"\nexport {a} from \"b\"\nexport {a as b} from \"c\"\nexport {default} from \"b\"\nexport {default as a, b} from \"c\"\n\n{/* Blank lines are supported in expressions: */}\n\nexport function a() {\n\n  return \"b\"\n\n}\n\n{/* A blank line must be used after import/exports: this is incorrect! */}\n\nimport a from \"b\"\n## Hello, world!\n```\n\n## Errors\n\n### Could not parse import/exports with acorn: $error\n\nThis error occurs if acorn crashes (source: `micromark-extension-mdxjs-esm`,\nrule id: `acorn`).\nFor example:\n\n```js\nimport 1/1\n```\n\n### Unexpected `$type` in code: only import/exports are supported\n\nThis error occurs when a non-ESM construct is found (source:\n`micromark-extension-mdxjs-esm`, rule id: `non-esm`).\nFor example:\n\n```js\nexport var a = 1\nvar b\n```\n\n## Tokens\n\nAn `mdxjsEsm` token is used to reflect the block of import/exports in markdown.\n\nIt includes:\n\n*   `lineEnding` for the `\\r`, `\\n`, and `\\r\\n`\n*   `lineEndingBlank` for the same characters but when after potential\n    whitespace and another line ending\n*   `whitespace` for markdown spaces and tabs in blank lines\n*   `mdxjsEsmData` for any character in a line of `mdxjsEsm`\n\n## Related\n\n*   [`micromark/micromark`][micromark]\n    — the smallest commonmark-compliant markdown parser that exists\n*   [`micromark/micromark-extension-mdx`][mdx]\n    — support MDX\n*   [`micromark/micromark-extension-mdxjs`][mdxjs]\n    — support MDX.js\n*   [`micromark/micromark-extension-mdx-expression`][mdx-expression]\n    — support MDX (or MDX.js) expressions\n*   [`micromark/micromark-extension-mdx-jsx`][mdx-jsx]\n    — support MDX (or MDX.js) JSX\n*   [`micromark/micromark-extension-mdx-md`][mdx-md]\n    — support misc MDX changes\n*   [`syntax-tree/mdast-util-mdx`][mdast-util-mdx]\n    — support MDX (or MDX.js) in mdast\n\n## Contribute\n\nSee [`contributing.md` in `micromark/.github`][contributing] for ways to get\nstarted.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/micromark/micromark-extension-mdxjs-esm/workflows/main/badge.svg\n\n[build]: https://github.com/micromark/micromark-extension-mdxjs-esm/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/micromark/micromark-extension-mdxjs-esm.svg\n\n[coverage]: https://codecov.io/github/micromark/micromark-extension-mdxjs-esm\n\n[downloads-badge]: https://img.shields.io/npm/dm/micromark-extension-mdxjs-esm.svg\n\n[downloads]: https://www.npmjs.com/package/micromark-extension-mdxjs-esm\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/micromark-extension-mdxjs-esm.svg\n\n[size]: https://bundlephobia.com/result?p=micromark-extension-mdxjs-esm\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/micromark/micromark/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[contributing]: https://github.com/micromark/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/micromark/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/micromark/.github/blob/HEAD/code-of-conduct.md\n\n[micromark]: https://github.com/micromark/micromark\n\n[xdm]: https://github.com/wooorm/xdm\n\n[mdx-js]: https://github.com/mdx-js/mdx\n\n[mdx-expression]: https://github.com/micromark/micromark-extension-mdx-expression\n\n[mdx-jsx]: https://github.com/micromark/micromark-extension-mdx-jsx\n\n[mdx-md]: https://github.com/micromark/micromark-extension-mdx-md\n\n[mdx]: https://github.com/micromark/micromark-extension-mdx\n\n[mdxjs]: https://github.com/micromark/micromark-extension-mdxjs\n\n[util]: https://github.com/syntax-tree/mdast-util-mdxjs-esm\n\n[mdast-util-mdx]: https://github.com/syntax-tree/mdast-util-mdx\n\n[acorn]: https://github.com/acornjs/acorn\n\n[from-markdown]: https://github.com/syntax-tree/mdast-util-from-markdown\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2020 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/micromark-extension-mdxjs-esm/-/micromark-extension-mdxjs-esm-1.0.3.tgz#630d9dc9db2c2fd470cac8c1e7a824851267404d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/micromark-extension-mdxjs-esm/-/micromark-extension-mdxjs-esm-1.0.3.tgz",
    "hash": "630d9dc9db2c2fd470cac8c1e7a824851267404d",
    "integrity": "sha512-2N13ol4KMoxb85rdDwTAC6uzs8lMX0zeqpcyx7FhS7PxXomOnLactu8WI8iBNXW8AVyea3KIJd/1CKnUmwrK9A==",
    "registry": "npm",
    "packageName": "micromark-extension-mdxjs-esm",
    "cacheIntegrity": "sha512-2N13ol4KMoxb85rdDwTAC6uzs8lMX0zeqpcyx7FhS7PxXomOnLactu8WI8iBNXW8AVyea3KIJd/1CKnUmwrK9A== sha1-Yw2dydssL9RwysjB56gkhRJnQE0="
  },
  "registry": "npm",
  "hash": "630d9dc9db2c2fd470cac8c1e7a824851267404d"
}