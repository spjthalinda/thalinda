{
  "manifest": {
    "name": "unified-engine",
    "version": "9.1.0",
    "description": "Engine to process multiple files with unified",
    "license": "MIT",
    "keywords": [
      "unified",
      "processor",
      "engine"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/unifiedjs/unified-engine.git"
    },
    "bugs": {
      "url": "https://github.com/unifiedjs/unified-engine/issues"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/unified"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      },
      {
        "name": "Christian Murphy",
        "email": "christian.murphy.42@gmail.com"
      }
    ],
    "sideEffects": false,
    "type": "module",
    "main": "index.js",
    "types": "index.d.ts",
    "files": [
      "lib/",
      "index.d.ts",
      "index.js"
    ],
    "dependencies": {
      "@types/concat-stream": "^2.0.0",
      "@types/debug": "^4.0.0",
      "@types/is-empty": "^1.0.0",
      "@types/js-yaml": "^4.0.0",
      "@types/node": "^17.0.0",
      "@types/unist": "^2.0.0",
      "concat-stream": "^2.0.0",
      "debug": "^4.0.0",
      "fault": "^2.0.0",
      "glob": "^7.0.0",
      "ignore": "^5.0.0",
      "is-buffer": "^2.0.0",
      "is-empty": "^1.0.0",
      "is-plain-obj": "^4.0.0",
      "js-yaml": "^4.0.0",
      "load-plugin": "^4.0.0",
      "parse-json": "^6.0.0",
      "to-vfile": "^7.0.0",
      "trough": "^2.0.0",
      "unist-util-inspect": "^7.0.0",
      "vfile-message": "^3.0.0",
      "vfile-reporter": "^7.0.0",
      "vfile-statistics": "^2.0.0"
    },
    "devDependencies": {
      "@types/glob": "^7.0.0",
      "@types/tape": "^4.0.0",
      "c8": "^7.0.0",
      "prettier": "^2.0.0",
      "remark": "^14.0.0",
      "remark-cli": "^10.0.0",
      "remark-preset-wooorm": "^9.0.0",
      "remark-toc": "^8.0.0",
      "rimraf": "^3.0.0",
      "strip-ansi": "^7.0.0",
      "tape": "^5.0.0",
      "type-coverage": "^2.0.0",
      "typescript": "^4.0.0",
      "unified": "^10.0.0",
      "vfile": "^5.0.0",
      "vfile-reporter-json": "^3.0.0",
      "vfile-reporter-pretty": "^6.0.0",
      "xo": "^0.48.0"
    },
    "scripts": {
      "build": "rimraf \"{lib,test}/**/*.d.ts\" \"*.d.ts\" && tsc && type-coverage",
      "format": "remark . -qfo && prettier . -w --loglevel warn && xo --fix",
      "test-api": "node --conditions development test/index.js",
      "test-coverage": "c8 --check-coverage --100 --reporter lcov npm run test-api",
      "test": "npm run build && npm run format && npm run test-coverage"
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm",
        [
          "toc",
          {
            "heading": "contents",
            "maxDepth": 3,
            "tight": true
          }
        ]
      ]
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "rules": {
        "capitalized-comments": "off",
        "complexity": "off",
        "unicorn/no-this-assignment": "off"
      },
      "overrides": [
        {
          "files": "test/fixtures/**/*.js",
          "rules": {
            "unicorn/no-empty-file": "off",
            "unicorn/prefer-module": "off"
          }
        }
      ]
    },
    "typeCoverage": {
      "atLeast": 100,
      "detail": true,
      "strict": true,
      "ignoreCatch": true,
      "#": "needed `any`s",
      "ignoreFiles": [
        "lib/index.d.ts",
        "lib/configuration.d.ts"
      ]
    },
    "_registry": "npm",
    "_loc": "/data/data/com.termux/files/home/.cache/yarn/v6/npm-unified-engine-9.1.0-8d0f8b2432a57d5f3d36586f9ae9fe186e2a27c5-integrity/node_modules/unified-engine/package.json",
    "readmeFilename": "readme.md",
    "readme": "# unified-engine\n\n[![Build][build-badge]][build]\n[![Coverage][coverage-badge]][coverage]\n[![Downloads][downloads-badge]][downloads]\n[![Sponsors][sponsors-badge]][collective]\n[![Backers][backers-badge]][collective]\n[![Chat][chat-badge]][chat]\n\nEngine to process multiple files with [**unified**][unified], allowing users to\n[configure][] from the file system.\n\n## Projects\n\nThe following projects wrap the engine:\n\n*   [`unified-args`][args] — Create CLIs for processors\n*   [`unified-engine-gulp`][gulp] — Create Gulp plugins\n*   [`unified-engine-atom`][atom] — Create Atom Linters for processors\n*   [`unified-language-server`][language-server] — Create language servers for\n    processors\n\n## Install\n\nThis package is [ESM only](https://gist.github.com/sindresorhus/a39789f98801d908bbc7ff3ecc99d99c):\nNode 12+ is needed to use it and it must be `import`ed instead of `require`d.\n\n[npm][]:\n\n```sh\nnpm install unified-engine\n```\n\n## Use\n\nThe following example processes all files in the current directory with a\nMarkdown extension with [**remark**][remark], allows [configuration][configure]\nfrom `.remarkrc` and `package.json` files, ignoring files from `.remarkignore`\nfiles, and more.\n\n```js\nimport {engine} from 'unified-engine'\nimport {remark} from 'remark'\n\nengine(\n  {\n    processor: remark,\n    files: ['.'],\n    extensions: ['md', 'markdown', 'mkd', 'mkdn', 'mkdown'],\n    pluginPrefix: 'remark',\n    rcName: '.remarkrc',\n    packageField: 'remarkConfig',\n    ignoreName: '.remarkignore',\n    color: true\n  },\n  done\n)\n\nfunction done(error) {\n  if (error) throw error\n}\n```\n\n## Contents\n\n*   [API](#api)\n    *   [`engine(options, callback)`](#engineoptions-callback)\n*   [Plugins](#plugins)\n*   [Configuration](#configuration)\n*   [Ignoring](#ignoring)\n*   [Security](#security)\n*   [Contribute](#contribute)\n*   [License](#license)\n\n## API\n\nThis package exports the following identifiers: `engine`.\nThere is no default export.\n\n### `engine(options, callback)`\n\nProcess files according to `options` and call [`callback`][callback] when\ndone.\n\n###### [`options`][options]\n\n*   [`processor`][processor] ([`Processor`][unified-processor])\n    — unified processor to transform files\n*   [`cwd`][cwd] (`string`, default: `process.cwd()`)\n    — Directory to search files in, load plugins from, and more\n*   [`files`][files] (`Array<string|VFile>`, optional)\n    — Paths or globs to files and directories, or virtual files, to process\n*   [`extensions`][extensions] (`Array<string>`, optional)\n    — If `files` matches directories, include files with `extensions`\n*   [`streamIn`][stream-in] (`ReadableStream`, default: `process.stdin`)\n    — Stream to read from if no files are found or given\n*   [`filePath`][file-path] (`string`, optional)\n    — File path to process the given file on `streamIn` as\n*   [`streamOut`][stream-out] (`WritableStream`, default: `process.stdout`)\n    — Stream to write processed files to\n*   [`streamError`][stream-error] (`WritableStream`, default: `process.stderr`)\n    — Stream to write the report (if any) to\n*   [`out`][out] (`boolean`, default: depends)\n    — Whether to write the processed file to `streamOut`\n*   [`output`][output] (`boolean` or `string`, default: `false`)\n    — Whether to write successfully processed files, and where to\n*   [`alwaysStringify`][always-stringify] (`boolean`, default: `false`)\n    — Whether to always serialize successfully processed files\n*   [`tree`][tree] (`boolean`, default: `false`)\n    — Whether to treat both input and output as a syntax tree\n*   [`treeIn`][tree-in] (`boolean`, default: `tree`)\n    — Whether to treat input as a syntax tree\n*   [`treeOut`][tree-out] (`boolean`, default: `tree`)\n    — Whether to treat output as a syntax tree\n*   [`inspect`][inspect] (`boolean`, default: `false`)\n    — Whether to output a formatted syntax tree\n*   [`rcName`][rc-name] (`string`, optional)\n    — Name of configuration files to load\n*   [`packageField`][package-field] (`string`, optional)\n    — Property at which configuration can be found in `package.json` files\n*   [`detectConfig`][detect-config] (`boolean`, default: whether `rcName` or\n    `packageField` is given)\n    — Whether to search for configuration files\n*   [`rcPath`][rc-path] (`string`, optional)\n    — Filepath to a configuration file to load\n*   [`settings`][settings] (`Object`, optional)\n    — Configuration for the parser and compiler of the processor\n*   [`ignoreName`][ignore-name] (`string`, optional)\n    — Name of ignore files to load\n*   [`detectIgnore`][detect-ignore] (`boolean`, default: whether `ignoreName`\n    is given)\n    — Whether to search for ignore files\n*   [`ignorePath`][ignore-path] (`string`, optional)\n    — Filepath to an ignore file to load\n*   [`ignorePathResolveFrom`][ignore-path-resolve-from] (`'dir'` or `'cwd'`,\n    default: `'dir'`)\n    — Resolve patterns in `ignorePath` from the current working directory or the\n    file’s directory\n*   [`ignorePatterns`][ignore-patterns] (`Array<string>`, optional)\n    — Patterns to ignore in addition to ignore files, if any\n*   [`ignoreUnconfigured`][ignore-unconfigured] (`boolean`, default: `false`)\n    — Ignore files that do not have an associated detected configuration file\n*   [`silentlyIgnore`][silently-ignore] (`boolean`, default: `false`)\n    — Skip given files if they are ignored\n*   [`plugins`][options-plugins] (`Array|Object`, optional)\n    — Plugins to use\n*   [`pluginPrefix`][plugin-prefix] (`string`, optional)\n    — Optional prefix to use when searching for plugins\n*   [`configTransform`][config-transform] (`Function`, optional)\n    — Transform config files from a different schema\n*   [`reporter`][reporter] (`string` or `function`, default:\n    `import {reporter} from 'vfile-reporter'`)\n    — Reporter to use\n*   [`reporterOptions`][reporteroptions] (`Object?`, optional)\n    — Config to pass to the used reporter\n*   [`color`][color] (`boolean`, default: `false`)\n    — Whether to report with ANSI color sequences\n*   [`silent`][silent] (`boolean`, default: `false`)\n    — Report only fatal errors\n*   [`quiet`][quiet] (`boolean`, default: `silent`)\n    — Do not report successful files\n*   [`frail`][frail] (`boolean`, default: `false`)\n    — Call back with an unsuccessful (`1`) code on warnings as well as errors\n\n#### `function callback(error[, code, context])`\n\nCalled when processing is complete, either with a fatal error if processing went\nhorribly wrong (probably due to incorrect configuration), or a status code and\nthe processing context.\n\n###### Parameters\n\n*   `error` (`Error`) — Fatal error\n*   `code` (`number`) — Either `0` if successful, or `1` if unsuccessful.\n    The latter occurs if [fatal][] errors happen when processing individual\n    files, or if [`frail`][frail] is set and warnings occur\n*   `context` (`Object`) — Processing context, containing internally used\n    information and a `files` array with the processed files\n\n## Plugins\n\n[`doc/plugins.md`][plugins] describes in detail how plugins can add more files\nto be processed and handle all transformed files.\n\n## Configuration\n\n[`doc/configure.md`][configure] describes in detail how configuration files\nwork.\n\n## Ignoring\n\n[`doc/ignore.md`][ignore] describes in detail how ignore files work.\n\n## Security\n\n`unified-engine` loads and evaluates configuration files, plugins, and presets\nfrom the file system (often from `node_modules/`).\nThat means code that is on your file system runs.\nMake sure you trust the workspace where you run `unified-engine` and be careful\nwith packages from npm and changes made by contributors.\n\n## Contribute\n\nSee [`contributing.md`][contributing] in [`unifiedjs/.github`][health] for ways\nto get started.\nSee [`support.md`][support] for ways to get help.\n\nThis project has a [code of conduct][coc].\nBy interacting with this repository, organization, or community you agree to\nabide by its terms.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://github.com/unifiedjs/unified-engine/workflows/main/badge.svg\n\n[build]: https://github.com/unifiedjs/unified-engine/actions\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/unifiedjs/unified-engine.svg\n\n[coverage]: https://codecov.io/github/unifiedjs/unified-engine\n\n[downloads-badge]: https://img.shields.io/npm/dm/unified-engine.svg\n\n[downloads]: https://www.npmjs.com/package/unified-engine\n\n[sponsors-badge]: https://opencollective.com/unified/sponsors/badge.svg\n\n[backers-badge]: https://opencollective.com/unified/backers/badge.svg\n\n[collective]: https://opencollective.com/unified\n\n[chat-badge]: https://img.shields.io/badge/chat-discussions-success.svg\n\n[chat]: https://github.com/unifiedjs/unified/discussions\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[health]: https://github.com/unifiedjs/.github\n\n[contributing]: https://github.com/unifiedjs/.github/blob/HEAD/contributing.md\n\n[support]: https://github.com/unifiedjs/.github/blob/HEAD/support.md\n\n[coc]: https://github.com/unifiedjs/.github/blob/HEAD/code-of-conduct.md\n\n[license]: license\n\n[author]: https://wooorm.com\n\n[unified]: https://github.com/unifiedjs/unified\n\n[unified-processor]: https://github.com/unifiedjs/unified#processor\n\n[remark]: https://github.com/remarkjs/remark\n\n[fatal]: https://github.com/vfile/vfile#vfilefailreason-position-ruleid\n\n[callback]: #function-callbackerror-code-context\n\n[options]: doc/options.md#options\n\n[processor]: doc/options.md#optionsprocessor\n\n[cwd]: doc/options.md#optionscwd\n\n[extensions]: doc/options.md#optionsextensions\n\n[stream-in]: doc/options.md#optionsstreamin\n\n[file-path]: doc/options.md#optionsfilepath\n\n[stream-out]: doc/options.md#optionsstreamout\n\n[stream-error]: doc/options.md#optionsstreamerror\n\n[out]: doc/options.md#optionsout\n\n[output]: doc/options.md#optionsoutput\n\n[always-stringify]: doc/options.md#optionsalwaysstringify\n\n[tree]: doc/options.md#optionstree\n\n[tree-in]: doc/options.md#optionstreein\n\n[tree-out]: doc/options.md#optionstreeout\n\n[inspect]: doc/options.md#optionsinspect\n\n[detect-config]: doc/options.md#optionsdetectconfig\n\n[rc-name]: doc/options.md#optionsrcname\n\n[package-field]: doc/options.md#optionspackagefield\n\n[rc-path]: doc/options.md#optionsrcpath\n\n[settings]: doc/options.md#optionssettings\n\n[detect-ignore]: doc/options.md#optionsdetectignore\n\n[ignore-name]: doc/options.md#optionsignorename\n\n[ignore-path]: doc/options.md#optionsignorepath\n\n[ignore-path-resolve-from]: doc/options.md#optionsignorepathresolvefrom\n\n[ignore-patterns]: doc/options.md#optionsignorepatterns\n\n[ignore-unconfigured]: doc/options.md#optionsignoreunconfigured\n\n[silently-ignore]: doc/options.md#optionssilentlyignore\n\n[plugin-prefix]: doc/options.md#optionspluginprefix\n\n[config-transform]: doc/options.md#optionsconfigtransform\n\n[options-plugins]: doc/options.md#optionsplugins\n\n[reporter]: doc/options.md#optionsreporter\n\n[reporteroptions]: doc/options.md#optionsreporteroptions\n\n[color]: doc/options.md#optionscolor\n\n[silent]: doc/options.md#optionssilent\n\n[quiet]: doc/options.md#optionsquiet\n\n[frail]: doc/options.md#optionsfrail\n\n[files]: doc/options.md#optionsfiles\n\n[configure]: doc/configure.md\n\n[ignore]: doc/ignore.md\n\n[plugins]: doc/plugins.md\n\n[atom]: https://github.com/unifiedjs/unified-engine-atom\n\n[gulp]: https://github.com/unifiedjs/unified-engine-gulp\n\n[language-server]: https://github.com/unifiedjs/unified-language-server\n\n[args]: https://github.com/unifiedjs/unified-args\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2016 Titus Wormer <tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/unified-engine/-/unified-engine-9.1.0.tgz#8d0f8b2432a57d5f3d36586f9ae9fe186e2a27c5",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/unified-engine/-/unified-engine-9.1.0.tgz",
    "hash": "8d0f8b2432a57d5f3d36586f9ae9fe186e2a27c5",
    "integrity": "sha512-V3UAUsVSAPSNsAdGeYHjtM6FWKIXUt6fPZovbBI5L6WsQIRkRkuFfllquTGCvtu0RckrzdOC7jGaV/tKkokwDw==",
    "registry": "npm",
    "packageName": "unified-engine",
    "cacheIntegrity": "sha512-V3UAUsVSAPSNsAdGeYHjtM6FWKIXUt6fPZovbBI5L6WsQIRkRkuFfllquTGCvtu0RckrzdOC7jGaV/tKkokwDw== sha1-jQ+LJDKlfV89Nlhvmun+GG4qJ8U="
  },
  "registry": "npm",
  "hash": "8d0f8b2432a57d5f3d36586f9ae9fe186e2a27c5"
}